/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package corediagnosticsystem;

import classes.CommonGUISettingsMethod;
import classes.CommonMethod;
import classes.DBQueries;
import classes.GlobalVariables;
import classes.SwingUtils;
import com.sun.glass.events.KeyEvent;
import java.awt.AWTEvent;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.AWTEventListener;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import javax.swing.Box;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import laboratories.dlgPregnancyTest;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import reports.DataBeanList;
import reports.SalesReportBean;

/**
 *
 * @author ACC
 */
public class frmMain extends javax.swing.JFrame implements ActionListener {

    private static final int SESSION_TIMEOUT = 100000 * 1000; // 10 sec timeout for testing purposes
    private final Timer invalidationTimer = new Timer(SESSION_TIMEOUT, this);
    private AWTEventListener l;
    public static String USERNAME, SYSTEMROLE, EMPLOYEEID;
    private Timer timee;
    private int loop = 0;
    private boolean isLogOut = false;
    private NumberFormat formatter = new DecimalFormat("#,###.00");//the formatter
    private DateFormat dateFormater = new SimpleDateFormat("MMMMMMMMM dd, yyyy");

    /**
     * Creates new form frmMain
     */
    public frmMain() {
        initComponents();
        LoginNo();
        pnlSubMenuTitle.setVisible(false);
        pnlSubMenu.setVisible(false);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        //start to animate title
    }

    private void LoginNo() {
        defaultTheme();
        mnuBar.setVisible(false);
        pnlStatusBar.setVisible(false);
        lblError.setVisible(false);

    }

    private void LoginYes() {
        // startSession();
        mnuBar.add(Box.createGlue());
        mnuBar.add(jmUser);
        pnlStatusBar.setVisible(true);
        //USERNAME = "gerry";
    }

    private void startSession() {
        //invalidationTimer.setRepeats(false);
        if (!btnUnlock.isShowing()) {
            invalidationTimer.restart();
            // register listener to get all mouse/key events
            l = new AWTEventListener() {
                @Override
                public void eventDispatched(AWTEvent event) {
                    // if any input event invoked - restart the timer to prolong the session
                    invalidationTimer.restart();
                    System.out.println("restarted");
                }
            };
            Toolkit.getDefaultToolkit().addAWTEventListener(l, AWTEvent.KEY_EVENT_MASK | AWTEvent.MOUSE_EVENT_MASK | AWTEvent.MOUSE_MOTION_EVENT_MASK);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pnlMainCenter = new javax.swing.JPanel();
        pnlCenter = new javax.swing.JPanel();
        pnlLogin = new javax.swing.JPanel();
        pnlLoginForm = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnClear = new javax.swing.JButton();
        btnLogin = new javax.swing.JButton();
        ckbShowPassword = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        lblCapsLock = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        pnlMain = new javax.swing.JPanel();
        pnlMain2 = new javax.swing.JPanel();
        pnlMain2LeftSide = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        pnlSubMenuTitle = new javax.swing.JPanel();
        lblSubMenuTitle = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        pnlSubMenu = new javax.swing.JPanel();
        pnlSubMenuWelcome = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        pnlSubMenuPatientCashier = new javax.swing.JPanel();
        btnViewPatient = new javax.swing.JButton();
        btnCheckUp = new javax.swing.JButton();
        btnCheckUpDone = new javax.swing.JButton();
        pnlSubMenuReportsCashier = new javax.swing.JPanel();
        btnSales = new javax.swing.JButton();
        btnCheckUp1 = new javax.swing.JButton();
        pnlMainMenu = new javax.swing.JPanel();
        pnlMainMenuButtons = new javax.swing.JPanel();
        pnlMainMenuMedTech = new javax.swing.JPanel();
        pnlMainMenuMedTechPanel = new javax.swing.JPanel();
        btnMedTechOnCheckupPatient = new javax.swing.JButton();
        btnMedTechDoneCheckupPatient = new javax.swing.JButton();
        btnMedTechNotifications = new javax.swing.JButton();
        pnlMainMenuCashier = new javax.swing.JPanel();
        pnlMainMenuCashierPanel = new javax.swing.JPanel();
        btnPatientCashier = new javax.swing.JButton();
        btnCashierReports = new javax.swing.JButton();
        pnlMainMenuAdministrator = new javax.swing.JPanel();
        pnlMainMenuAdministratorPanel = new javax.swing.JPanel();
        btnPatientAdmin = new javax.swing.JButton();
        btnEmployeeAdmin = new javax.swing.JButton();
        btnLaboratoriesAdmin = new javax.swing.JButton();
        btnReportsAdmin = new javax.swing.JButton();
        pnlMainMenuPhlebotomist = new javax.swing.JPanel();
        pnlMainMenuPhlebotomistPanel = new javax.swing.JPanel();
        btnPatient4 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        pnlMainMenuPhysician = new javax.swing.JPanel();
        pnlMainMenuMedTechPanel1 = new javax.swing.JPanel();
        btnPhysicianOnCheckupPatient = new javax.swing.JButton();
        btnPhysicianDoneCheckupPatient = new javax.swing.JButton();
        btnPhysicianNotifications = new javax.swing.JButton();
        pnlMainMenuTitle = new javax.swing.JPanel();
        lblMainMenuTitle = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        lblPicture = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        lblPosition = new javax.swing.JLabel();
        pnlMain2Center = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlMain2CenterFinal = new javax.swing.JPanel();
        pnlWelcome = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        pnlAdminPatient = new javax.swing.JPanel();
        pnlSearchEngine3 = new javax.swing.JPanel();
        pnlSearchByPatientID3 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        txtPatiendID3 = new org.jdesktop.swingx.JXSearchField();
        pnlSearchAdvanced4 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        txtLastname3 = new org.jdesktop.swingx.JXSearchField();
        jLabel53 = new javax.swing.JLabel();
        txtFirstname3 = new org.jdesktop.swingx.JXSearchField();
        jLabel54 = new javax.swing.JLabel();
        txtMiddlename3 = new org.jdesktop.swingx.JXSearchField();
        jLabel55 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tbPatientListAdmin = new javax.swing.JTable();
        jPanel23 = new javax.swing.JPanel();
        btnNewPatient3 = new javax.swing.JButton();
        btnEditInfo3 = new javax.swing.JButton();
        btnAddCheckUp1 = new javax.swing.JButton();
        pnlAdminEmployees = new javax.swing.JPanel();
        pnlSearchEngine1 = new javax.swing.JPanel();
        pnlSearchByPatientID1 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        pnlSearchAdvanced1 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        btnNewEmployee = new javax.swing.JButton();
        btnEditInfoEmployee = new javax.swing.JButton();
        btnGenerateEmployeeInfo = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbEmployee = new javax.swing.JTable();
        pnlAdminLaboratories = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbLaboratories = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        btnNewEmployee1 = new javax.swing.JButton();
        btnEditInfoEmployee1 = new javax.swing.JButton();
        btnGenerateEmployeeInfo1 = new javax.swing.JButton();
        btnNewEmployee2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        pnlPatientDoneCheckUp = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        btnEditInfo1 = new javax.swing.JButton();
        btnNewPatient1 = new javax.swing.JButton();
        btnViewPatientInfo1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbPatientDoneCheckUpList = new javax.swing.JTable();
        pnlPatientOnCheckUp = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        btnEditInfo2 = new javax.swing.JButton();
        btnNewPatient2 = new javax.swing.JButton();
        btnViewPatientInfo2 = new javax.swing.JButton();
        btnAddCheckUp2 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbPatientOnCheckUpList = new javax.swing.JTable();
        pnlMedTechOnCheckup = new javax.swing.JPanel();
        pnlSearchEngine2 = new javax.swing.JPanel();
        pnlSearchByPatientID2 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtPatiendID1 = new org.jdesktop.swingx.JXSearchField();
        pnlSearchAdvanced2 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        txtLastname1 = new org.jdesktop.swingx.JXSearchField();
        jLabel30 = new javax.swing.JLabel();
        txtFirstname1 = new org.jdesktop.swingx.JXSearchField();
        jLabel31 = new javax.swing.JLabel();
        txtMiddlename1 = new org.jdesktop.swingx.JXSearchField();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbMedTechOnCheckUp = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        btnViewPatientInfo3 = new javax.swing.JButton();
        btnViewPatientInfo5 = new javax.swing.JButton();
        pnlMedTechDoneCheckup = new javax.swing.JPanel();
        pnlSearchEngine5 = new javax.swing.JPanel();
        pnlSearchByPatientID5 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txtPatiendID2 = new org.jdesktop.swingx.JXSearchField();
        pnlSearchAdvanced3 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        txtLastname2 = new org.jdesktop.swingx.JXSearchField();
        jLabel38 = new javax.swing.JLabel();
        txtFirstname2 = new org.jdesktop.swingx.JXSearchField();
        jLabel41 = new javax.swing.JLabel();
        txtMiddlename2 = new org.jdesktop.swingx.JXSearchField();
        jLabel42 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbMedTechDoneCheckup = new javax.swing.JTable();
        jPanel17 = new javax.swing.JPanel();
        btnViewPatientInfo4 = new javax.swing.JButton();
        btnViewPatientInfo6 = new javax.swing.JButton();
        btnViewPatientInfo7 = new javax.swing.JButton();
        pnlCashierPatient = new javax.swing.JPanel();
        pnlSearchEngine = new javax.swing.JPanel();
        pnlSearchAdvanced = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtLastname = new org.jdesktop.swingx.JXSearchField();
        jLabel17 = new javax.swing.JLabel();
        txtFirstname = new org.jdesktop.swingx.JXSearchField();
        jLabel18 = new javax.swing.JLabel();
        txtMiddlename = new org.jdesktop.swingx.JXSearchField();
        jLabel21 = new javax.swing.JLabel();
        pnlSearchByPatientID = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtPatiendID = new org.jdesktop.swingx.JXSearchField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPatientList = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        btnNewPatient = new javax.swing.JButton();
        btnEditInfo = new javax.swing.JButton();
        btnAddCheckUp = new javax.swing.JButton();
        pnlCashierReportsSales = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        btnGenerateSalesReport = new javax.swing.JButton();
        btnGenerateSalesChart = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        tbSalesReportCashier = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        lblTotalAmountSales = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        cmbReportBySales = new javax.swing.JComboBox<>();
        pnlCenterSalesReport = new javax.swing.JPanel();
        pnlByDaily = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        dcDateDaily = new com.toedter.calendar.JDateChooser();
        jLabel50 = new javax.swing.JLabel();
        cmbLaboratoryListCashierByDaily = new javax.swing.JComboBox<>();
        btnMonthlySalesByDaily = new javax.swing.JButton();
        pnlByDate = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dcStartDate = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        dcEndDate = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        cmbLaboratoryListCashier = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        pnlByMonth = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        mcStartMonth = new com.toedter.calendar.JMonthChooser();
        jLabel46 = new javax.swing.JLabel();
        mcEndMonth = new com.toedter.calendar.JMonthChooser();
        ycYearByMonth = new com.toedter.calendar.JYearChooser();
        jLabel47 = new javax.swing.JLabel();
        cmbLaboratoryListCashierByMonth = new javax.swing.JComboBox<>();
        btnMonthlySalesByMonth = new javax.swing.JButton();
        pnlByYear = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        ycStartYear = new com.toedter.calendar.JYearChooser();
        jLabel43 = new javax.swing.JLabel();
        ycEndYear = new com.toedter.calendar.JYearChooser();
        jLabel44 = new javax.swing.JLabel();
        cmbLaboratoryListCashierByYear = new javax.swing.JComboBox<>();
        btnSalesByYear = new javax.swing.JButton();
        pnlCashierReportsDiscount = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        btnGenerateDiscountReport = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        tbSalesReportCashierDiscount = new javax.swing.JTable();
        jLabel34 = new javax.swing.JLabel();
        lblTotalAmountSalesDiscount = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel72 = new javax.swing.JLabel();
        cmbReportByDiscount = new javax.swing.JComboBox<>();
        pnlCenterSalesReport1 = new javax.swing.JPanel();
        pnlByDaily1 = new javax.swing.JPanel();
        jLabel73 = new javax.swing.JLabel();
        dcDateDailyDiscount = new com.toedter.calendar.JDateChooser();
        jLabel74 = new javax.swing.JLabel();
        cmbLaboratoryListCashierByDailyDiscount = new javax.swing.JComboBox<>();
        btnMonthlySalesByDailyDiscount = new javax.swing.JButton();
        pnlByDate1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        dcStartDateDiscount = new com.toedter.calendar.JDateChooser();
        jLabel75 = new javax.swing.JLabel();
        dcEndDateDiscount = new com.toedter.calendar.JDateChooser();
        jLabel76 = new javax.swing.JLabel();
        cmbLaboratoryListCashierDiscount = new javax.swing.JComboBox<>();
        btnDiscountByDate = new javax.swing.JButton();
        pnlByMonth1 = new javax.swing.JPanel();
        jLabel77 = new javax.swing.JLabel();
        mcStartMonthDiscount = new com.toedter.calendar.JMonthChooser();
        jLabel78 = new javax.swing.JLabel();
        mcEndMonthDiscount = new com.toedter.calendar.JMonthChooser();
        ycYearByMonthDiscount = new com.toedter.calendar.JYearChooser();
        jLabel79 = new javax.swing.JLabel();
        cmbLaboratoryListCashierByMonthDiscount = new javax.swing.JComboBox<>();
        btnMonthlySalesByMonthDiscount = new javax.swing.JButton();
        pnlByYear1 = new javax.swing.JPanel();
        jLabel80 = new javax.swing.JLabel();
        ycStartYearDiscount = new com.toedter.calendar.JYearChooser();
        jLabel81 = new javax.swing.JLabel();
        ycEndYearDiscount = new com.toedter.calendar.JYearChooser();
        jLabel82 = new javax.swing.JLabel();
        cmbLaboratoryListCashierByYearDiscount = new javax.swing.JComboBox<>();
        btnSalesByYearDiscount = new javax.swing.JButton();
        pnlPhysicianOnCheckup = new javax.swing.JPanel();
        pnlSearchEngine4 = new javax.swing.JPanel();
        pnlSearchAdvanced5 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        txtLastname4 = new org.jdesktop.swingx.JXSearchField();
        jLabel62 = new javax.swing.JLabel();
        txtFirstname4 = new org.jdesktop.swingx.JXSearchField();
        jLabel63 = new javax.swing.JLabel();
        txtMiddlename4 = new org.jdesktop.swingx.JXSearchField();
        jLabel64 = new javax.swing.JLabel();
        pnlSearchByPatientID4 = new javax.swing.JPanel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        txtPatiendID4 = new org.jdesktop.swingx.JXSearchField();
        jScrollPane12 = new javax.swing.JScrollPane();
        tbPhysicianOnCheckUp = new javax.swing.JTable();
        jPanel26 = new javax.swing.JPanel();
        btnAddResults = new javax.swing.JButton();
        btnViewPatientInfo10 = new javax.swing.JButton();
        btnViewPatientInfo9 = new javax.swing.JButton();
        pnlPhysicianDoneCheckup = new javax.swing.JPanel();
        pnlSearchEngine6 = new javax.swing.JPanel();
        pnlSearchByPatientID6 = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        txtPatiendID5 = new org.jdesktop.swingx.JXSearchField();
        pnlSearchAdvanced6 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        txtLastname5 = new org.jdesktop.swingx.JXSearchField();
        jLabel68 = new javax.swing.JLabel();
        txtFirstname5 = new org.jdesktop.swingx.JXSearchField();
        jLabel69 = new javax.swing.JLabel();
        txtMiddlename5 = new org.jdesktop.swingx.JXSearchField();
        jLabel70 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        tbPhysicianDoneCheckup = new javax.swing.JTable();
        jPanel27 = new javax.swing.JPanel();
        btnViewPatientInfo11 = new javax.swing.JButton();
        btnViewPatientInfo12 = new javax.swing.JButton();
        btnViewPatientInfo13 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        lblMainPanelTitle = new javax.swing.JLabel();
        pnlMainToolbar = new javax.swing.JPanel();
        tbAdministrator = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tbMedTech = new javax.swing.JToolBar();
        jButton12 = new javax.swing.JButton();
        pnlLock = new javax.swing.JPanel();
        btnUnlock = new javax.swing.JButton();
        pnlResetPassword = new javax.swing.JPanel();
        pnlLoginForm1 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        txtConfirmPasswordReset = new javax.swing.JPasswordField();
        btnClear1 = new javax.swing.JButton();
        btnLogin1 = new javax.swing.JButton();
        ckbShowPassword1 = new javax.swing.JCheckBox();
        jLabel58 = new javax.swing.JLabel();
        lblCapsLock1 = new javax.swing.JLabel();
        lblError1 = new javax.swing.JLabel();
        txtPasswordReset = new javax.swing.JPasswordField();
        jPanel25 = new javax.swing.JPanel();
        lblTitle1 = new javax.swing.JLabel();
        pnlStatusBar = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        mnuBar = new javax.swing.JMenuBar();
        jmSystem = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jmAdmin = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jmSettings = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jrbMetal = new javax.swing.JRadioButtonMenuItem();
        jrbMotiff = new javax.swing.JRadioButtonMenuItem();
        jrbSystem = new javax.swing.JRadioButtonMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jrbAcryl = new javax.swing.JRadioButtonMenuItem();
        jrbAero = new javax.swing.JRadioButtonMenuItem();
        jrbAluminum = new javax.swing.JRadioButtonMenuItem();
        jrbBernstein = new javax.swing.JRadioButtonMenuItem();
        jrbFast = new javax.swing.JRadioButtonMenuItem();
        jrbGrafite = new javax.swing.JRadioButtonMenuItem();
        jrbHiFi = new javax.swing.JRadioButtonMenuItem();
        jrbLuna = new javax.swing.JRadioButtonMenuItem();
        jrbMcWin = new javax.swing.JRadioButtonMenuItem();
        jrbMint = new javax.swing.JRadioButtonMenuItem();
        jrbNoire = new javax.swing.JRadioButtonMenuItem();
        jrbSmar = new javax.swing.JRadioButtonMenuItem();
        jrbTexture = new javax.swing.JRadioButtonMenuItem();
        jmHelp = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jmUser = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CORE Diagnostic and Urgent Care Center, Inc.");
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        pnlMainCenter.setLayout(new java.awt.BorderLayout());

        pnlCenter.setLayout(new java.awt.CardLayout());

        pnlLogin.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        pnlLogin.setLayout(new javax.swing.OverlayLayout(pnlLogin));

        pnlLoginForm.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(248, 192, 61), 5, true));
        pnlLoginForm.setMaximumSize(new java.awt.Dimension(447, 250));
        pnlLoginForm.setPreferredSize(new java.awt.Dimension(600, 450));
        pnlLoginForm.setRequestFocusEnabled(false);
        pnlLoginForm.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Username:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Password:");

        txtUsername.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUsernameFocusGained(evt);
            }
        });
        txtUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUsernameKeyPressed(evt);
            }
        });

        txtPassword.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordFocusGained(evt);
            }
        });
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear_icon.png"))); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnLogin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_icon.png"))); // NOI18N
        btnLogin.setText("LOGIN");
        btnLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        ckbShowPassword.setText("Show password");
        ckbShowPassword.setOpaque(false);
        ckbShowPassword.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckbShowPasswordItemStateChanged(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/change_password1.png"))); // NOI18N

        lblCapsLock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/warning.png"))); // NOI18N
        lblCapsLock.setText("Caps Lock is on");

        lblError.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 0, 0));
        lblError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/error.png"))); // NOI18N
        lblError.setText("Incorrect Username/Password!");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblCapsLock)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(ckbShowPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                        .addComponent(txtPassword))
                                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnClear, btnLogin});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ckbShowPassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCapsLock, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pnlLoginForm.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel4.setPreferredSize(new java.awt.Dimension(303, 35));
        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        lblTitle.setBackground(new java.awt.Color(248, 192, 61));
        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("<<USER LOGIN>>");
        lblTitle.setOpaque(true);
        jPanel4.add(lblTitle);

        pnlLoginForm.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        pnlLogin.add(pnlLoginForm);

        pnlCenter.add(pnlLogin, "card2");

        pnlMain.setLayout(new java.awt.BorderLayout());

        pnlMain2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        pnlMain2.setLayout(new java.awt.BorderLayout());

        pnlMain2LeftSide.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        pnlMain2LeftSide.setPreferredSize(new java.awt.Dimension(150, 407));
        pnlMain2LeftSide.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        pnlSubMenuTitle.setPreferredSize(new java.awt.Dimension(150, 15));
        pnlSubMenuTitle.setLayout(new java.awt.GridLayout(1, 0));

        lblSubMenuTitle.setBackground(new java.awt.Color(202, 237, 255));
        lblSubMenuTitle.setFont(new java.awt.Font("Cooper Std Black", 1, 12)); // NOI18N
        lblSubMenuTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubMenuTitle.setText("------------------");
        lblSubMenuTitle.setOpaque(true);
        pnlSubMenuTitle.add(lblSubMenuTitle);

        jPanel1.add(pnlSubMenuTitle, java.awt.BorderLayout.PAGE_START);

        jPanel11.setLayout(new java.awt.BorderLayout());

        pnlSubMenu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        pnlSubMenu.setLayout(new java.awt.CardLayout());

        pnlSubMenuWelcome.setPreferredSize(new java.awt.Dimension(142, 40));
        pnlSubMenuWelcome.setLayout(new java.awt.GridLayout(1, 0));

        jButton3.setText("Welcome");
        pnlSubMenuWelcome.add(jButton3);

        pnlSubMenu.add(pnlSubMenuWelcome, "card3");

        pnlSubMenuPatientCashier.setPreferredSize(new java.awt.Dimension(148, 160));
        pnlSubMenuPatientCashier.setLayout(new java.awt.GridLayout(4, 0));

        btnViewPatient.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        btnViewPatient.setText("View Patient");
        btnViewPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientActionPerformed(evt);
            }
        });
        pnlSubMenuPatientCashier.add(btnViewPatient);

        btnCheckUp.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        btnCheckUp.setText("On Check-Up");
        btnCheckUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckUpActionPerformed(evt);
            }
        });
        pnlSubMenuPatientCashier.add(btnCheckUp);

        btnCheckUpDone.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        btnCheckUpDone.setText("Done");
        btnCheckUpDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckUpDoneActionPerformed(evt);
            }
        });
        pnlSubMenuPatientCashier.add(btnCheckUpDone);

        pnlSubMenu.add(pnlSubMenuPatientCashier, "card2");

        pnlSubMenuReportsCashier.setPreferredSize(new java.awt.Dimension(148, 120));
        pnlSubMenuReportsCashier.setLayout(new java.awt.GridLayout(3, 0));

        btnSales.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        btnSales.setText("Sales");
        btnSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesActionPerformed(evt);
            }
        });
        pnlSubMenuReportsCashier.add(btnSales);

        btnCheckUp1.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        btnCheckUp1.setText("Discounts");
        btnCheckUp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckUp1ActionPerformed(evt);
            }
        });
        pnlSubMenuReportsCashier.add(btnCheckUp1);

        pnlSubMenu.add(pnlSubMenuReportsCashier, "card2");

        jPanel11.add(pnlSubMenu, java.awt.BorderLayout.PAGE_START);

        pnlMainMenu.setLayout(new java.awt.BorderLayout());

        pnlMainMenuButtons.setPreferredSize(new java.awt.Dimension(148, 120));
        pnlMainMenuButtons.setLayout(new java.awt.CardLayout());

        pnlMainMenuMedTech.setPreferredSize(new java.awt.Dimension(74, 160));
        pnlMainMenuMedTech.setLayout(new java.awt.BorderLayout());

        pnlMainMenuMedTechPanel.setPreferredSize(new java.awt.Dimension(148, 105));
        pnlMainMenuMedTechPanel.setLayout(new java.awt.GridLayout(3, 0));

        btnMedTechOnCheckupPatient.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnMedTechOnCheckupPatient.setMnemonic('O');
        btnMedTechOnCheckupPatient.setText("ON-CHECKUP");
        btnMedTechOnCheckupPatient.setToolTipText("View On-Checkup Patient!");
        btnMedTechOnCheckupPatient.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedTechOnCheckupPatient.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnMedTechOnCheckupPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedTechOnCheckupPatientActionPerformed(evt);
            }
        });
        pnlMainMenuMedTechPanel.add(btnMedTechOnCheckupPatient);

        btnMedTechDoneCheckupPatient.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnMedTechDoneCheckupPatient.setMnemonic('F');
        btnMedTechDoneCheckupPatient.setText("FINISHED");
        btnMedTechDoneCheckupPatient.setToolTipText("View finished results!");
        btnMedTechDoneCheckupPatient.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedTechDoneCheckupPatient.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnMedTechDoneCheckupPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedTechDoneCheckupPatientActionPerformed(evt);
            }
        });
        pnlMainMenuMedTechPanel.add(btnMedTechDoneCheckupPatient);

        btnMedTechNotifications.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnMedTechNotifications.setMnemonic('F');
        btnMedTechNotifications.setText("NOTIFICATIONS");
        btnMedTechNotifications.setToolTipText("View finished results!");
        btnMedTechNotifications.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedTechNotifications.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnMedTechNotifications.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedTechNotificationsActionPerformed(evt);
            }
        });
        pnlMainMenuMedTechPanel.add(btnMedTechNotifications);

        pnlMainMenuMedTech.add(pnlMainMenuMedTechPanel, java.awt.BorderLayout.PAGE_START);

        pnlMainMenuButtons.add(pnlMainMenuMedTech, "card2");

        pnlMainMenuCashier.setPreferredSize(new java.awt.Dimension(74, 160));
        pnlMainMenuCashier.setLayout(new java.awt.BorderLayout());

        pnlMainMenuCashierPanel.setPreferredSize(new java.awt.Dimension(74, 140));
        pnlMainMenuCashierPanel.setLayout(new java.awt.GridLayout(4, 0));

        btnPatientCashier.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnPatientCashier.setText("Patient");
        btnPatientCashier.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPatientCashier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientCashierActionPerformed(evt);
            }
        });
        pnlMainMenuCashierPanel.add(btnPatientCashier);

        btnCashierReports.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCashierReports.setText("Reports");
        btnCashierReports.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCashierReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCashierReportsActionPerformed(evt);
            }
        });
        pnlMainMenuCashierPanel.add(btnCashierReports);

        pnlMainMenuCashier.add(pnlMainMenuCashierPanel, java.awt.BorderLayout.PAGE_START);

        pnlMainMenuButtons.add(pnlMainMenuCashier, "card2");

        pnlMainMenuAdministrator.setPreferredSize(new java.awt.Dimension(74, 160));
        pnlMainMenuAdministrator.setLayout(new java.awt.BorderLayout());

        pnlMainMenuAdministratorPanel.setPreferredSize(new java.awt.Dimension(74, 140));
        pnlMainMenuAdministratorPanel.setLayout(new java.awt.GridLayout(4, 0));

        btnPatientAdmin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnPatientAdmin.setText("Patient");
        btnPatientAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPatientAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientAdminActionPerformed(evt);
            }
        });
        pnlMainMenuAdministratorPanel.add(btnPatientAdmin);

        btnEmployeeAdmin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEmployeeAdmin.setText("Employee");
        btnEmployeeAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEmployeeAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmployeeAdminActionPerformed(evt);
            }
        });
        pnlMainMenuAdministratorPanel.add(btnEmployeeAdmin);

        btnLaboratoriesAdmin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnLaboratoriesAdmin.setText("Laboratories");
        btnLaboratoriesAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLaboratoriesAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaboratoriesAdminActionPerformed(evt);
            }
        });
        pnlMainMenuAdministratorPanel.add(btnLaboratoriesAdmin);

        btnReportsAdmin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnReportsAdmin.setText("Reports");
        btnReportsAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlMainMenuAdministratorPanel.add(btnReportsAdmin);

        pnlMainMenuAdministrator.add(pnlMainMenuAdministratorPanel, java.awt.BorderLayout.PAGE_START);

        pnlMainMenuButtons.add(pnlMainMenuAdministrator, "card2");

        pnlMainMenuPhlebotomist.setPreferredSize(new java.awt.Dimension(74, 160));
        pnlMainMenuPhlebotomist.setLayout(new java.awt.BorderLayout());

        pnlMainMenuPhlebotomistPanel.setPreferredSize(new java.awt.Dimension(74, 140));
        pnlMainMenuPhlebotomistPanel.setLayout(new java.awt.GridLayout(4, 0));

        btnPatient4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnPatient4.setText("ON-CHECKUP");
        btnPatient4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPatient4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatient4ActionPerformed(evt);
            }
        });
        pnlMainMenuPhlebotomistPanel.add(btnPatient4);

        jButton15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton15.setText("LOGS");
        jButton15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlMainMenuPhlebotomistPanel.add(jButton15);

        jButton16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton16.setText("FINISHED");
        jButton16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlMainMenuPhlebotomistPanel.add(jButton16);

        pnlMainMenuPhlebotomist.add(pnlMainMenuPhlebotomistPanel, java.awt.BorderLayout.PAGE_START);

        pnlMainMenuButtons.add(pnlMainMenuPhlebotomist, "card2");

        pnlMainMenuPhysician.setPreferredSize(new java.awt.Dimension(74, 160));
        pnlMainMenuPhysician.setLayout(new java.awt.BorderLayout());

        pnlMainMenuMedTechPanel1.setPreferredSize(new java.awt.Dimension(148, 105));
        pnlMainMenuMedTechPanel1.setLayout(new java.awt.GridLayout(3, 0));

        btnPhysicianOnCheckupPatient.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnPhysicianOnCheckupPatient.setMnemonic('O');
        btnPhysicianOnCheckupPatient.setText("ON-CHECKUP");
        btnPhysicianOnCheckupPatient.setToolTipText("View On-Checkup Patient!");
        btnPhysicianOnCheckupPatient.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPhysicianOnCheckupPatient.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPhysicianOnCheckupPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhysicianOnCheckupPatientActionPerformed(evt);
            }
        });
        pnlMainMenuMedTechPanel1.add(btnPhysicianOnCheckupPatient);

        btnPhysicianDoneCheckupPatient.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnPhysicianDoneCheckupPatient.setMnemonic('F');
        btnPhysicianDoneCheckupPatient.setText("FINISHED");
        btnPhysicianDoneCheckupPatient.setToolTipText("View finished results!");
        btnPhysicianDoneCheckupPatient.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPhysicianDoneCheckupPatient.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPhysicianDoneCheckupPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhysicianDoneCheckupPatientActionPerformed(evt);
            }
        });
        pnlMainMenuMedTechPanel1.add(btnPhysicianDoneCheckupPatient);

        btnPhysicianNotifications.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnPhysicianNotifications.setMnemonic('F');
        btnPhysicianNotifications.setText("NOTIFICATIONS");
        btnPhysicianNotifications.setToolTipText("View finished results!");
        btnPhysicianNotifications.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPhysicianNotifications.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPhysicianNotifications.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhysicianNotificationsActionPerformed(evt);
            }
        });
        pnlMainMenuMedTechPanel1.add(btnPhysicianNotifications);

        pnlMainMenuPhysician.add(pnlMainMenuMedTechPanel1, java.awt.BorderLayout.PAGE_START);

        pnlMainMenuButtons.add(pnlMainMenuPhysician, "card2");

        pnlMainMenu.add(pnlMainMenuButtons, java.awt.BorderLayout.CENTER);

        pnlMainMenuTitle.setPreferredSize(new java.awt.Dimension(148, 30));
        pnlMainMenuTitle.setLayout(new java.awt.GridLayout(1, 0));

        lblMainMenuTitle.setBackground(new java.awt.Color(202, 237, 255));
        lblMainMenuTitle.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 14)); // NOI18N
        lblMainMenuTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMainMenuTitle.setText("MAIN MENU");
        lblMainMenuTitle.setOpaque(true);
        lblMainMenuTitle.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        pnlMainMenuTitle.add(lblMainMenuTitle);

        pnlMainMenu.add(pnlMainMenuTitle, java.awt.BorderLayout.PAGE_START);

        jPanel11.add(pnlMainMenu, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel11, java.awt.BorderLayout.CENTER);

        pnlMain2LeftSide.add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel5.setPreferredSize(new java.awt.Dimension(150, 150));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.GridLayout(1, 0));

        lblPicture.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/noimage.png"))); // NOI18N
        lblPicture.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel6.add(lblPicture);

        jPanel5.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel7.setPreferredSize(new java.awt.Dimension(150, 30));
        jPanel7.setLayout(new java.awt.GridLayout(1, 0));

        lblPosition.setBackground(new java.awt.Color(202, 237, 255));
        lblPosition.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 14)); // NOI18N
        lblPosition.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPosition.setText("WELCOME!");
        lblPosition.setOpaque(true);
        jPanel7.add(lblPosition);

        jPanel5.add(jPanel7, java.awt.BorderLayout.PAGE_START);

        pnlMain2LeftSide.add(jPanel5, java.awt.BorderLayout.PAGE_START);

        pnlMain2.add(pnlMain2LeftSide, java.awt.BorderLayout.WEST);

        pnlMain2Center.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        pnlMain2Center.setLayout(new java.awt.BorderLayout());

        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(1100, 461));

        pnlMain2CenterFinal.setLayout(new java.awt.CardLayout());

        pnlWelcome.setPreferredSize(new java.awt.Dimension(1106, 516));
        pnlWelcome.setLayout(new java.awt.BorderLayout());

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("WELCOME!!!");
        pnlWelcome.add(jLabel24, java.awt.BorderLayout.CENTER);

        pnlMain2CenterFinal.add(pnlWelcome, "card3");

        pnlAdminPatient.setPreferredSize(new java.awt.Dimension(1100, 491));

        pnlSearchEngine3.setLayout(new java.awt.CardLayout());

        jLabel49.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel49.setText("Search by Patient ID:");

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel51.setText("<html><u>Click to Advanced Search</u></html>");
        jLabel51.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel51.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel51MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel51MouseEntered(evt);
            }
        });

        txtPatiendID3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPatiendID3KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlSearchByPatientID3Layout = new javax.swing.GroupLayout(pnlSearchByPatientID3);
        pnlSearchByPatientID3.setLayout(pnlSearchByPatientID3Layout);
        pnlSearchByPatientID3Layout.setHorizontalGroup(
            pnlSearchByPatientID3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchByPatientID3Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel49)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPatiendID3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlSearchByPatientID3Layout.setVerticalGroup(
            pnlSearchByPatientID3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchByPatientID3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnlSearchByPatientID3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel49)
                    .addComponent(txtPatiendID3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pnlSearchEngine3.add(pnlSearchByPatientID3, "card2");

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel52.setText("Search by Lastname:");
        pnlSearchAdvanced4.add(jLabel52);

        txtLastname3.setPreferredSize(new java.awt.Dimension(200, 30));
        txtLastname3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLastname3KeyTyped(evt);
            }
        });
        pnlSearchAdvanced4.add(txtLastname3);

        jLabel53.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel53.setText("Firstname:");
        pnlSearchAdvanced4.add(jLabel53);

        txtFirstname3.setPreferredSize(new java.awt.Dimension(200, 30));
        txtFirstname3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFirstname3KeyTyped(evt);
            }
        });
        pnlSearchAdvanced4.add(txtFirstname3);

        jLabel54.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel54.setText("Middlename:");
        pnlSearchAdvanced4.add(jLabel54);

        txtMiddlename3.setPreferredSize(new java.awt.Dimension(200, 30));
        txtMiddlename3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMiddlename3KeyTyped(evt);
            }
        });
        pnlSearchAdvanced4.add(txtMiddlename3);

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel55.setText("<html><u>Search by Patient ID</u></html>");
        jLabel55.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel55.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel55MouseClicked(evt);
            }
        });
        pnlSearchAdvanced4.add(jLabel55);

        pnlSearchEngine3.add(pnlSearchAdvanced4, "card3");

        tbPatientListAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO.", "PATIENT NO.", "LASTNAME", "FIRSTNAME", "MIDDLENAME", "GENDER", "BIRTHDATE", "AGE", "CONTACT NO.", "ADDRESS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPatientListAdmin.setRowHeight(35);
        tbPatientListAdmin.getTableHeader().setReorderingAllowed(false);
        jScrollPane11.setViewportView(tbPatientListAdmin);
        if (tbPatientListAdmin.getColumnModel().getColumnCount() > 0) {
            tbPatientListAdmin.getColumnModel().getColumn(0).setMinWidth(40);
            tbPatientListAdmin.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbPatientListAdmin.getColumnModel().getColumn(0).setMaxWidth(40);
            tbPatientListAdmin.getColumnModel().getColumn(1).setMinWidth(120);
            tbPatientListAdmin.getColumnModel().getColumn(1).setPreferredWidth(120);
            tbPatientListAdmin.getColumnModel().getColumn(1).setMaxWidth(120);
            tbPatientListAdmin.getColumnModel().getColumn(2).setMinWidth(120);
            tbPatientListAdmin.getColumnModel().getColumn(2).setPreferredWidth(120);
            tbPatientListAdmin.getColumnModel().getColumn(2).setMaxWidth(120);
            tbPatientListAdmin.getColumnModel().getColumn(3).setMinWidth(120);
            tbPatientListAdmin.getColumnModel().getColumn(3).setPreferredWidth(120);
            tbPatientListAdmin.getColumnModel().getColumn(3).setMaxWidth(120);
            tbPatientListAdmin.getColumnModel().getColumn(4).setMinWidth(120);
            tbPatientListAdmin.getColumnModel().getColumn(4).setPreferredWidth(120);
            tbPatientListAdmin.getColumnModel().getColumn(4).setMaxWidth(120);
            tbPatientListAdmin.getColumnModel().getColumn(5).setMinWidth(80);
            tbPatientListAdmin.getColumnModel().getColumn(5).setPreferredWidth(80);
            tbPatientListAdmin.getColumnModel().getColumn(5).setMaxWidth(80);
            tbPatientListAdmin.getColumnModel().getColumn(6).setMinWidth(90);
            tbPatientListAdmin.getColumnModel().getColumn(6).setPreferredWidth(90);
            tbPatientListAdmin.getColumnModel().getColumn(6).setMaxWidth(90);
            tbPatientListAdmin.getColumnModel().getColumn(7).setMinWidth(50);
            tbPatientListAdmin.getColumnModel().getColumn(7).setPreferredWidth(50);
            tbPatientListAdmin.getColumnModel().getColumn(7).setMaxWidth(50);
            tbPatientListAdmin.getColumnModel().getColumn(8).setMinWidth(90);
            tbPatientListAdmin.getColumnModel().getColumn(8).setPreferredWidth(90);
            tbPatientListAdmin.getColumnModel().getColumn(8).setMaxWidth(90);
        }

        jPanel23.setOpaque(false);
        jPanel23.setLayout(new java.awt.GridLayout(4, 0, 0, 3));

        btnNewPatient3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnNewPatient3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_icon32.png"))); // NOI18N
        btnNewPatient3.setText("New Patient");
        btnNewPatient3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNewPatient3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnNewPatient3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewPatient3ActionPerformed(evt);
            }
        });
        jPanel23.add(btnNewPatient3);

        btnEditInfo3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnEditInfo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit_con32.png"))); // NOI18N
        btnEditInfo3.setText("Edit Info.");
        btnEditInfo3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditInfo3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditInfo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditInfo3ActionPerformed(evt);
            }
        });
        jPanel23.add(btnEditInfo3);

        btnAddCheckUp1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAddCheckUp1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pdf_icon2.png"))); // NOI18N
        btnAddCheckUp1.setText("Genrate Reports");
        btnAddCheckUp1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddCheckUp1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAddCheckUp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCheckUp1ActionPerformed(evt);
            }
        });
        jPanel23.add(btnAddCheckUp1);

        javax.swing.GroupLayout pnlAdminPatientLayout = new javax.swing.GroupLayout(pnlAdminPatient);
        pnlAdminPatient.setLayout(pnlAdminPatientLayout);
        pnlAdminPatientLayout.setHorizontalGroup(
            pnlAdminPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminPatientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdminPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSearchEngine3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(pnlAdminPatientLayout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlAdminPatientLayout.setVerticalGroup(
            pnlAdminPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminPatientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlSearchEngine3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlAdminPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11)
                    .addGroup(pnlAdminPatientLayout.createSequentialGroup()
                        .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pnlMain2CenterFinal.add(pnlAdminPatient, "card2");

        pnlAdminEmployees.setPreferredSize(new java.awt.Dimension(1100, 491));

        pnlSearchEngine1.setLayout(new java.awt.CardLayout());

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setText("Search by Employee ID:");
        pnlSearchByPatientID1.add(jLabel19);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("<html><u>Click to Advanced Search</u></html>");
        jLabel20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel20MouseEntered(evt);
            }
        });
        pnlSearchByPatientID1.add(jLabel20);

        pnlSearchEngine1.add(pnlSearchByPatientID1, "card2");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel22.setText("Search by Lastname:");
        pnlSearchAdvanced1.add(jLabel22);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel23.setText("Firstname:");
        pnlSearchAdvanced1.add(jLabel23);

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel25.setText("Middlename:");
        pnlSearchAdvanced1.add(jLabel25);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setText("<html><u>Search by Patient ID</u></html>");
        jLabel26.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel26MouseClicked(evt);
            }
        });
        pnlSearchAdvanced1.add(jLabel26);

        pnlSearchEngine1.add(pnlSearchAdvanced1, "card3");

        jPanel13.setOpaque(false);
        jPanel13.setLayout(new java.awt.GridLayout(4, 0, 0, 3));

        btnNewEmployee.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnNewEmployee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_icon32.png"))); // NOI18N
        btnNewEmployee.setText("New Employee");
        btnNewEmployee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNewEmployee.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnNewEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEmployeeActionPerformed(evt);
            }
        });
        jPanel13.add(btnNewEmployee);

        btnEditInfoEmployee.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnEditInfoEmployee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit_con32.png"))); // NOI18N
        btnEditInfoEmployee.setText("Edit Info.");
        btnEditInfoEmployee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditInfoEmployee.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditInfoEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditInfoEmployeeActionPerformed(evt);
            }
        });
        jPanel13.add(btnEditInfoEmployee);

        btnGenerateEmployeeInfo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnGenerateEmployeeInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pdf_icon2.png"))); // NOI18N
        btnGenerateEmployeeInfo.setText("Gen. Report");
        btnGenerateEmployeeInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGenerateEmployeeInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnGenerateEmployeeInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateEmployeeInfoActionPerformed(evt);
            }
        });
        jPanel13.add(btnGenerateEmployeeInfo);

        tbEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EMPLOYEE ID", "LASTNAME", "FIRSTNAME", "MIDDLENAME", "GENDER", "BIRTHDATE", "ADDRESS", "POSITION", "LICENSE NO.", "CONTACT NO.", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbEmployee.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbEmployee.setRowHeight(25);
        tbEmployee.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tbEmployee);
        if (tbEmployee.getColumnModel().getColumnCount() > 0) {
            tbEmployee.getColumnModel().getColumn(0).setMinWidth(80);
            tbEmployee.getColumnModel().getColumn(0).setPreferredWidth(80);
            tbEmployee.getColumnModel().getColumn(0).setMaxWidth(80);
            tbEmployee.getColumnModel().getColumn(1).setMinWidth(100);
            tbEmployee.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbEmployee.getColumnModel().getColumn(1).setMaxWidth(100);
            tbEmployee.getColumnModel().getColumn(2).setMinWidth(100);
            tbEmployee.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbEmployee.getColumnModel().getColumn(2).setMaxWidth(100);
            tbEmployee.getColumnModel().getColumn(3).setMinWidth(100);
            tbEmployee.getColumnModel().getColumn(3).setPreferredWidth(100);
            tbEmployee.getColumnModel().getColumn(3).setMaxWidth(100);
            tbEmployee.getColumnModel().getColumn(4).setMinWidth(60);
            tbEmployee.getColumnModel().getColumn(4).setPreferredWidth(60);
            tbEmployee.getColumnModel().getColumn(4).setMaxWidth(60);
            tbEmployee.getColumnModel().getColumn(5).setMinWidth(80);
            tbEmployee.getColumnModel().getColumn(5).setPreferredWidth(80);
            tbEmployee.getColumnModel().getColumn(5).setMaxWidth(80);
            tbEmployee.getColumnModel().getColumn(6).setMinWidth(250);
            tbEmployee.getColumnModel().getColumn(6).setPreferredWidth(250);
            tbEmployee.getColumnModel().getColumn(6).setMaxWidth(250);
            tbEmployee.getColumnModel().getColumn(7).setMinWidth(120);
            tbEmployee.getColumnModel().getColumn(7).setPreferredWidth(120);
            tbEmployee.getColumnModel().getColumn(7).setMaxWidth(120);
            tbEmployee.getColumnModel().getColumn(8).setMinWidth(90);
            tbEmployee.getColumnModel().getColumn(8).setPreferredWidth(90);
            tbEmployee.getColumnModel().getColumn(8).setMaxWidth(90);
            tbEmployee.getColumnModel().getColumn(9).setMinWidth(100);
            tbEmployee.getColumnModel().getColumn(9).setPreferredWidth(100);
            tbEmployee.getColumnModel().getColumn(9).setMaxWidth(100);
            tbEmployee.getColumnModel().getColumn(10).setMinWidth(100);
            tbEmployee.getColumnModel().getColumn(10).setPreferredWidth(100);
            tbEmployee.getColumnModel().getColumn(10).setMaxWidth(100);
        }

        javax.swing.GroupLayout pnlAdminEmployeesLayout = new javax.swing.GroupLayout(pnlAdminEmployees);
        pnlAdminEmployees.setLayout(pnlAdminEmployeesLayout);
        pnlAdminEmployeesLayout.setHorizontalGroup(
            pnlAdminEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminEmployeesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdminEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSearchEngine1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlAdminEmployeesLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 998, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlAdminEmployeesLayout.setVerticalGroup(
            pnlAdminEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminEmployeesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlSearchEngine1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAdminEmployeesLayout.createSequentialGroup()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE))
                .addContainerGap())
        );

        pnlMain2CenterFinal.add(pnlAdminEmployees, "card2");

        pnlAdminLaboratories.setPreferredSize(new java.awt.Dimension(1100, 491));

        tbLaboratories.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LAB. ID", "CATEGORY", "LABORATORY NAME", "AMOUNT", "STATUS", "MEDTECH. VIEW"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbLaboratories.setRowHeight(25);
        tbLaboratories.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tbLaboratories);
        if (tbLaboratories.getColumnModel().getColumnCount() > 0) {
            tbLaboratories.getColumnModel().getColumn(0).setMinWidth(80);
            tbLaboratories.getColumnModel().getColumn(0).setPreferredWidth(80);
            tbLaboratories.getColumnModel().getColumn(0).setMaxWidth(80);
            tbLaboratories.getColumnModel().getColumn(1).setMinWidth(150);
            tbLaboratories.getColumnModel().getColumn(1).setPreferredWidth(150);
            tbLaboratories.getColumnModel().getColumn(1).setMaxWidth(150);
            tbLaboratories.getColumnModel().getColumn(3).setMinWidth(80);
            tbLaboratories.getColumnModel().getColumn(3).setPreferredWidth(80);
            tbLaboratories.getColumnModel().getColumn(3).setMaxWidth(80);
            tbLaboratories.getColumnModel().getColumn(4).setMinWidth(80);
            tbLaboratories.getColumnModel().getColumn(4).setPreferredWidth(80);
            tbLaboratories.getColumnModel().getColumn(4).setMaxWidth(80);
            tbLaboratories.getColumnModel().getColumn(5).setMinWidth(100);
            tbLaboratories.getColumnModel().getColumn(5).setPreferredWidth(100);
            tbLaboratories.getColumnModel().getColumn(5).setMaxWidth(100);
        }

        jPanel14.setOpaque(false);
        jPanel14.setLayout(new java.awt.GridLayout(5, 0, 0, 3));

        btnNewEmployee1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnNewEmployee1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_icon32.png"))); // NOI18N
        btnNewEmployee1.setText("New Laboratory");
        btnNewEmployee1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNewEmployee1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnNewEmployee1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEmployee1ActionPerformed(evt);
            }
        });
        jPanel14.add(btnNewEmployee1);

        btnEditInfoEmployee1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnEditInfoEmployee1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit_con32.png"))); // NOI18N
        btnEditInfoEmployee1.setText("Edit Lab. Info.");
        btnEditInfoEmployee1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditInfoEmployee1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditInfoEmployee1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditInfoEmployee1ActionPerformed(evt);
            }
        });
        jPanel14.add(btnEditInfoEmployee1);

        btnGenerateEmployeeInfo1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnGenerateEmployeeInfo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pdf_icon2.png"))); // NOI18N
        btnGenerateEmployeeInfo1.setText("Gen. Report");
        btnGenerateEmployeeInfo1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGenerateEmployeeInfo1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnGenerateEmployeeInfo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateEmployeeInfo1ActionPerformed(evt);
            }
        });
        jPanel14.add(btnGenerateEmployeeInfo1);

        btnNewEmployee2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnNewEmployee2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_icon32.png"))); // NOI18N
        btnNewEmployee2.setText("Lab Category");
        btnNewEmployee2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNewEmployee2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnNewEmployee2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEmployee2ActionPerformed(evt);
            }
        });
        jPanel14.add(btnNewEmployee2);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Search Laboratory Name:");

        javax.swing.GroupLayout pnlAdminLaboratoriesLayout = new javax.swing.GroupLayout(pnlAdminLaboratories);
        pnlAdminLaboratories.setLayout(pnlAdminLaboratoriesLayout);
        pnlAdminLaboratoriesLayout.setHorizontalGroup(
            pnlAdminLaboratoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminLaboratoriesLayout.createSequentialGroup()
                .addGroup(pnlAdminLaboratoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAdminLaboratoriesLayout.createSequentialGroup()
                        .addGap(806, 806, 806)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlAdminLaboratoriesLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(273, Short.MAX_VALUE))
            .addGroup(pnlAdminLaboratoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlAdminLaboratoriesLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 788, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(436, Short.MAX_VALUE)))
        );
        pnlAdminLaboratoriesLayout.setVerticalGroup(
            pnlAdminLaboratoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminLaboratoriesLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlAdminLaboratoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(272, Short.MAX_VALUE))
            .addGroup(pnlAdminLaboratoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlAdminLaboratoriesLayout.createSequentialGroup()
                    .addGap(64, 64, 64)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(74, Short.MAX_VALUE)))
        );

        pnlMain2CenterFinal.add(pnlAdminLaboratories, "card5");

        pnlPatientDoneCheckUp.setPreferredSize(new java.awt.Dimension(1106, 516));

        jPanel15.setOpaque(false);
        jPanel15.setLayout(new java.awt.GridLayout(4, 0, 0, 3));

        btnEditInfo1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnEditInfo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/view_icon32.png"))); // NOI18N
        btnEditInfo1.setText("VIEW DETAILS");
        btnEditInfo1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditInfo1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditInfo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditInfo1ActionPerformed(evt);
            }
        });
        jPanel15.add(btnEditInfo1);

        btnNewPatient1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnNewPatient1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print_icon.png"))); // NOI18N
        btnNewPatient1.setText("PRINT REPORT");
        btnNewPatient1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNewPatient1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnNewPatient1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewPatient1ActionPerformed(evt);
            }
        });
        jPanel15.add(btnNewPatient1);

        btnViewPatientInfo1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnViewPatientInfo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_icon.png"))); // NOI18N
        btnViewPatientInfo1.setText("RE-CHECK UP");
        btnViewPatientInfo1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewPatientInfo1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnViewPatientInfo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfo1ActionPerformed(evt);
            }
        });
        jPanel15.add(btnViewPatientInfo1);

        tbPatientDoneCheckUpList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO.", "PATIENT NO.", "LASTNAME", "FIRSTNAME", "MIDDLENAME", "GENDER", "BIRTHDATE", "AGE", "CONTACT NO.", "ADDRESS", "CHECKUP DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPatientDoneCheckUpList.setRowHeight(25);
        tbPatientDoneCheckUpList.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tbPatientDoneCheckUpList);
        if (tbPatientDoneCheckUpList.getColumnModel().getColumnCount() > 0) {
            tbPatientDoneCheckUpList.getColumnModel().getColumn(0).setMinWidth(40);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(0).setMaxWidth(40);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(1).setMinWidth(90);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(1).setPreferredWidth(90);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(1).setMaxWidth(90);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(2).setMinWidth(100);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(2).setMaxWidth(100);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(3).setMinWidth(100);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(3).setPreferredWidth(100);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(3).setMaxWidth(100);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(4).setMinWidth(100);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(4).setPreferredWidth(100);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(4).setMaxWidth(100);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(5).setMinWidth(80);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(5).setPreferredWidth(80);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(5).setMaxWidth(80);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(6).setMinWidth(90);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(6).setPreferredWidth(90);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(6).setMaxWidth(90);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(7).setMinWidth(50);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(7).setPreferredWidth(50);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(7).setMaxWidth(50);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(8).setMinWidth(90);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(8).setPreferredWidth(90);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(8).setMaxWidth(90);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(10).setMinWidth(90);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(10).setPreferredWidth(90);
            tbPatientDoneCheckUpList.getColumnModel().getColumn(10).setMaxWidth(90);
        }

        javax.swing.GroupLayout pnlPatientDoneCheckUpLayout = new javax.swing.GroupLayout(pnlPatientDoneCheckUp);
        pnlPatientDoneCheckUp.setLayout(pnlPatientDoneCheckUpLayout);
        pnlPatientDoneCheckUpLayout.setHorizontalGroup(
            pnlPatientDoneCheckUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPatientDoneCheckUpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(202, Short.MAX_VALUE))
            .addGroup(pnlPatientDoneCheckUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlPatientDoneCheckUpLayout.createSequentialGroup()
                    .addGap(1038, 1038, 1038)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlPatientDoneCheckUpLayout.setVerticalGroup(
            pnlPatientDoneCheckUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPatientDoneCheckUpLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                .addGap(35, 35, 35))
            .addGroup(pnlPatientDoneCheckUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlPatientDoneCheckUpLayout.createSequentialGroup()
                    .addGap(83, 83, 83)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(292, Short.MAX_VALUE)))
        );

        pnlMain2CenterFinal.add(pnlPatientDoneCheckUp, "card3");

        pnlPatientOnCheckUp.setPreferredSize(new java.awt.Dimension(1106, 516));

        jPanel16.setOpaque(false);
        jPanel16.setLayout(new java.awt.GridLayout(4, 0, 0, 3));

        btnEditInfo2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnEditInfo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/view_icon32.png"))); // NOI18N
        btnEditInfo2.setText("VIEW DETAILS");
        btnEditInfo2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditInfo2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditInfo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditInfo2ActionPerformed(evt);
            }
        });
        jPanel16.add(btnEditInfo2);

        btnNewPatient2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnNewPatient2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print_icon.png"))); // NOI18N
        btnNewPatient2.setText("PRINT PROFILE");
        btnNewPatient2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNewPatient2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnNewPatient2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewPatient2ActionPerformed(evt);
            }
        });
        jPanel16.add(btnNewPatient2);

        btnViewPatientInfo2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnViewPatientInfo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_icon.png"))); // NOI18N
        btnViewPatientInfo2.setText("MARK AS DONE");
        btnViewPatientInfo2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewPatientInfo2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnViewPatientInfo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfo2ActionPerformed(evt);
            }
        });
        jPanel16.add(btnViewPatientInfo2);

        btnAddCheckUp2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAddCheckUp2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel_icon.png"))); // NOI18N
        btnAddCheckUp2.setText("CANCEL CHECKUP");
        btnAddCheckUp2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddCheckUp2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAddCheckUp2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCheckUp2ActionPerformed(evt);
            }
        });
        jPanel16.add(btnAddCheckUp2);

        tbPatientOnCheckUpList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO.", "PATIENT NO.", "LASTNAME", "FIRSTNAME", "MIDDLENAME", "GENDER", "BIRTHDATE", "AGE", "CONTACT NO.", "ADDRESS", "CHECKUP DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPatientOnCheckUpList.setRowHeight(25);
        tbPatientOnCheckUpList.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(tbPatientOnCheckUpList);
        if (tbPatientOnCheckUpList.getColumnModel().getColumnCount() > 0) {
            tbPatientOnCheckUpList.getColumnModel().getColumn(0).setMinWidth(40);
            tbPatientOnCheckUpList.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbPatientOnCheckUpList.getColumnModel().getColumn(0).setMaxWidth(40);
            tbPatientOnCheckUpList.getColumnModel().getColumn(1).setMinWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(1).setPreferredWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(1).setMaxWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(2).setMinWidth(100);
            tbPatientOnCheckUpList.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbPatientOnCheckUpList.getColumnModel().getColumn(2).setMaxWidth(100);
            tbPatientOnCheckUpList.getColumnModel().getColumn(3).setMinWidth(100);
            tbPatientOnCheckUpList.getColumnModel().getColumn(3).setPreferredWidth(100);
            tbPatientOnCheckUpList.getColumnModel().getColumn(3).setMaxWidth(100);
            tbPatientOnCheckUpList.getColumnModel().getColumn(4).setMinWidth(100);
            tbPatientOnCheckUpList.getColumnModel().getColumn(4).setPreferredWidth(100);
            tbPatientOnCheckUpList.getColumnModel().getColumn(4).setMaxWidth(100);
            tbPatientOnCheckUpList.getColumnModel().getColumn(6).setMinWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(6).setPreferredWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(6).setMaxWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(7).setMinWidth(50);
            tbPatientOnCheckUpList.getColumnModel().getColumn(7).setPreferredWidth(50);
            tbPatientOnCheckUpList.getColumnModel().getColumn(7).setMaxWidth(50);
            tbPatientOnCheckUpList.getColumnModel().getColumn(7).setHeaderValue("AGE");
            tbPatientOnCheckUpList.getColumnModel().getColumn(8).setMinWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(8).setPreferredWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(8).setMaxWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(8).setHeaderValue("CONTACT NO.");
            tbPatientOnCheckUpList.getColumnModel().getColumn(9).setMinWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(9).setPreferredWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(9).setMaxWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(10).setMinWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(10).setPreferredWidth(90);
            tbPatientOnCheckUpList.getColumnModel().getColumn(10).setMaxWidth(90);
        }

        javax.swing.GroupLayout pnlPatientOnCheckUpLayout = new javax.swing.GroupLayout(pnlPatientOnCheckUp);
        pnlPatientOnCheckUp.setLayout(pnlPatientOnCheckUpLayout);
        pnlPatientOnCheckUpLayout.setHorizontalGroup(
            pnlPatientOnCheckUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPatientOnCheckUpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(202, Short.MAX_VALUE))
            .addGroup(pnlPatientOnCheckUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlPatientOnCheckUpLayout.createSequentialGroup()
                    .addGap(1038, 1038, 1038)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlPatientOnCheckUpLayout.setVerticalGroup(
            pnlPatientOnCheckUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPatientOnCheckUpLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                .addGap(35, 35, 35))
            .addGroup(pnlPatientOnCheckUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlPatientOnCheckUpLayout.createSequentialGroup()
                    .addGap(83, 83, 83)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(292, Short.MAX_VALUE)))
        );

        pnlMain2CenterFinal.add(pnlPatientOnCheckUp, "card3");

        pnlMedTechOnCheckup.setPreferredSize(new java.awt.Dimension(1100, 491));

        pnlSearchEngine2.setLayout(new java.awt.CardLayout());

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel27.setText("Search by Patient ID:");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel28.setText("<html><u>Click to Advanced Search</u></html>");
        jLabel28.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel28MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel28MouseEntered(evt);
            }
        });

        txtPatiendID1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPatiendID1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlSearchByPatientID2Layout = new javax.swing.GroupLayout(pnlSearchByPatientID2);
        pnlSearchByPatientID2.setLayout(pnlSearchByPatientID2Layout);
        pnlSearchByPatientID2Layout.setHorizontalGroup(
            pnlSearchByPatientID2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchByPatientID2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPatiendID1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlSearchByPatientID2Layout.setVerticalGroup(
            pnlSearchByPatientID2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchByPatientID2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnlSearchByPatientID2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel27)
                    .addComponent(txtPatiendID1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pnlSearchEngine2.add(pnlSearchByPatientID2, "card2");

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel29.setText("Search by Lastname:");
        pnlSearchAdvanced2.add(jLabel29);

        txtLastname1.setPreferredSize(new java.awt.Dimension(200, 30));
        txtLastname1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLastname1KeyTyped(evt);
            }
        });
        pnlSearchAdvanced2.add(txtLastname1);

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel30.setText("Firstname:");
        pnlSearchAdvanced2.add(jLabel30);

        txtFirstname1.setPreferredSize(new java.awt.Dimension(200, 30));
        txtFirstname1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFirstname1KeyTyped(evt);
            }
        });
        pnlSearchAdvanced2.add(txtFirstname1);

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel31.setText("Middlename:");
        pnlSearchAdvanced2.add(jLabel31);

        txtMiddlename1.setPreferredSize(new java.awt.Dimension(200, 30));
        txtMiddlename1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMiddlename1KeyTyped(evt);
            }
        });
        pnlSearchAdvanced2.add(txtMiddlename1);

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel32.setText("<html><u>Search by Patient ID</u></html>");
        jLabel32.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel32MouseClicked(evt);
            }
        });
        pnlSearchAdvanced2.add(jLabel32);

        pnlSearchEngine2.add(pnlSearchAdvanced2, "card3");

        tbMedTechOnCheckUp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO.", "PATIENT NO.", "LASTNAME", "FIRSTNAME", "MIDDLENAME", "CHECKUPLABORATORIES ID", "LAB CATEGORY", "LABORATORY NAME", "CHECKUP DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbMedTechOnCheckUp.setRowHeight(25);
        tbMedTechOnCheckUp.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(tbMedTechOnCheckUp);
        if (tbMedTechOnCheckUp.getColumnModel().getColumnCount() > 0) {
            tbMedTechOnCheckUp.getColumnModel().getColumn(0).setMinWidth(40);
            tbMedTechOnCheckUp.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbMedTechOnCheckUp.getColumnModel().getColumn(0).setMaxWidth(40);
            tbMedTechOnCheckUp.getColumnModel().getColumn(1).setMinWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(1).setPreferredWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(1).setMaxWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(2).setMinWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(2).setPreferredWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(2).setMaxWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(3).setMinWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(3).setPreferredWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(3).setMaxWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(4).setMinWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(4).setPreferredWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(4).setMaxWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(5).setMinWidth(0);
            tbMedTechOnCheckUp.getColumnModel().getColumn(5).setPreferredWidth(0);
            tbMedTechOnCheckUp.getColumnModel().getColumn(5).setMaxWidth(0);
            tbMedTechOnCheckUp.getColumnModel().getColumn(6).setMinWidth(0);
            tbMedTechOnCheckUp.getColumnModel().getColumn(6).setPreferredWidth(0);
            tbMedTechOnCheckUp.getColumnModel().getColumn(6).setMaxWidth(0);
            tbMedTechOnCheckUp.getColumnModel().getColumn(8).setMinWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(8).setPreferredWidth(120);
            tbMedTechOnCheckUp.getColumnModel().getColumn(8).setMaxWidth(120);
        }

        jPanel12.setOpaque(false);
        jPanel12.setLayout(new java.awt.GridLayout(4, 0, 0, 3));

        btnViewPatientInfo3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnViewPatientInfo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_icon32.png"))); // NOI18N
        btnViewPatientInfo3.setText("ADD RESULTS");
        btnViewPatientInfo3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewPatientInfo3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnViewPatientInfo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfo3ActionPerformed(evt);
            }
        });
        jPanel12.add(btnViewPatientInfo3);

        btnViewPatientInfo5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnViewPatientInfo5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update_icon.png"))); // NOI18N
        btnViewPatientInfo5.setText("REFRESH");
        btnViewPatientInfo5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewPatientInfo5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnViewPatientInfo5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfo5ActionPerformed(evt);
            }
        });
        jPanel12.add(btnViewPatientInfo5);

        javax.swing.GroupLayout pnlMedTechOnCheckupLayout = new javax.swing.GroupLayout(pnlMedTechOnCheckup);
        pnlMedTechOnCheckup.setLayout(pnlMedTechOnCheckupLayout);
        pnlMedTechOnCheckupLayout.setHorizontalGroup(
            pnlMedTechOnCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMedTechOnCheckupLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMedTechOnCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSearchEngine2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(pnlMedTechOnCheckupLayout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlMedTechOnCheckupLayout.setVerticalGroup(
            pnlMedTechOnCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMedTechOnCheckupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlSearchEngine2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlMedTechOnCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7)
                    .addGroup(pnlMedTechOnCheckupLayout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pnlMain2CenterFinal.add(pnlMedTechOnCheckup, "card2");

        pnlMedTechDoneCheckup.setPreferredSize(new java.awt.Dimension(1100, 491));

        pnlSearchEngine5.setLayout(new java.awt.CardLayout());

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel35.setText("Search by Patient ID:");

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel36.setText("<html><u>Click to Advanced Search</u></html>");
        jLabel36.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel34MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel34MouseEntered(evt);
            }
        });

        txtPatiendID2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPatiendID2KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlSearchByPatientID5Layout = new javax.swing.GroupLayout(pnlSearchByPatientID5);
        pnlSearchByPatientID5.setLayout(pnlSearchByPatientID5Layout);
        pnlSearchByPatientID5Layout.setHorizontalGroup(
            pnlSearchByPatientID5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchByPatientID5Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPatiendID2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlSearchByPatientID5Layout.setVerticalGroup(
            pnlSearchByPatientID5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchByPatientID5Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnlSearchByPatientID5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel35)
                    .addComponent(txtPatiendID2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pnlSearchEngine5.add(pnlSearchByPatientID5, "card2");

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel37.setText("Search by Lastname:");
        pnlSearchAdvanced3.add(jLabel37);

        txtLastname2.setPreferredSize(new java.awt.Dimension(200, 30));
        txtLastname2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLastname2KeyTyped(evt);
            }
        });
        pnlSearchAdvanced3.add(txtLastname2);

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel38.setText("Firstname:");
        pnlSearchAdvanced3.add(jLabel38);

        txtFirstname2.setPreferredSize(new java.awt.Dimension(200, 30));
        txtFirstname2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFirstname2KeyTyped(evt);
            }
        });
        pnlSearchAdvanced3.add(txtFirstname2);

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel41.setText("Middlename:");
        pnlSearchAdvanced3.add(jLabel41);

        txtMiddlename2.setPreferredSize(new java.awt.Dimension(200, 30));
        txtMiddlename2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMiddlename2KeyTyped(evt);
            }
        });
        pnlSearchAdvanced3.add(txtMiddlename2);

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel42.setText("<html><u>Search by Patient ID</u></html>");
        jLabel42.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel38MouseClicked(evt);
            }
        });
        pnlSearchAdvanced3.add(jLabel42);

        pnlSearchEngine5.add(pnlSearchAdvanced3, "card3");

        tbMedTechDoneCheckup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO.", "PATIENT NO.", "LASTNAME", "FIRSTNAME", "MIDDLENAME", "CHECKUP LAB ID", "LAB CATEGORY", "LABORATORY NAME", "CHECKUP DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbMedTechDoneCheckup.setRowHeight(25);
        tbMedTechDoneCheckup.getTableHeader().setReorderingAllowed(false);
        jScrollPane8.setViewportView(tbMedTechDoneCheckup);
        if (tbMedTechDoneCheckup.getColumnModel().getColumnCount() > 0) {
            tbMedTechDoneCheckup.getColumnModel().getColumn(0).setMinWidth(40);
            tbMedTechDoneCheckup.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbMedTechDoneCheckup.getColumnModel().getColumn(0).setMaxWidth(40);
            tbMedTechDoneCheckup.getColumnModel().getColumn(1).setMinWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(1).setPreferredWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(1).setMaxWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(2).setMinWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(2).setPreferredWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(2).setMaxWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(3).setMinWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(3).setPreferredWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(3).setMaxWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(4).setMinWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(4).setPreferredWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(4).setMaxWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(5).setMinWidth(0);
            tbMedTechDoneCheckup.getColumnModel().getColumn(5).setPreferredWidth(0);
            tbMedTechDoneCheckup.getColumnModel().getColumn(5).setMaxWidth(0);
            tbMedTechDoneCheckup.getColumnModel().getColumn(6).setMinWidth(0);
            tbMedTechDoneCheckup.getColumnModel().getColumn(6).setPreferredWidth(0);
            tbMedTechDoneCheckup.getColumnModel().getColumn(6).setMaxWidth(0);
            tbMedTechDoneCheckup.getColumnModel().getColumn(8).setMinWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(8).setPreferredWidth(120);
            tbMedTechDoneCheckup.getColumnModel().getColumn(8).setMaxWidth(120);
        }

        jPanel17.setOpaque(false);
        jPanel17.setLayout(new java.awt.GridLayout(4, 0, 0, 3));

        btnViewPatientInfo4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnViewPatientInfo4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/view_icon32.png"))); // NOI18N
        btnViewPatientInfo4.setText("VIEW RESULT");
        btnViewPatientInfo4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewPatientInfo4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnViewPatientInfo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfo4ActionPerformed(evt);
            }
        });
        jPanel17.add(btnViewPatientInfo4);

        btnViewPatientInfo6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnViewPatientInfo6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit_con32.png"))); // NOI18N
        btnViewPatientInfo6.setText("EDIT RESULT");
        btnViewPatientInfo6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewPatientInfo6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnViewPatientInfo6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfo6ActionPerformed(evt);
            }
        });
        jPanel17.add(btnViewPatientInfo6);

        btnViewPatientInfo7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnViewPatientInfo7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update_icon.png"))); // NOI18N
        btnViewPatientInfo7.setText("REFRESH");
        btnViewPatientInfo7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewPatientInfo7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnViewPatientInfo7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfo7ActionPerformed(evt);
            }
        });
        jPanel17.add(btnViewPatientInfo7);

        javax.swing.GroupLayout pnlMedTechDoneCheckupLayout = new javax.swing.GroupLayout(pnlMedTechDoneCheckup);
        pnlMedTechDoneCheckup.setLayout(pnlMedTechDoneCheckupLayout);
        pnlMedTechDoneCheckupLayout.setHorizontalGroup(
            pnlMedTechDoneCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMedTechDoneCheckupLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMedTechDoneCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSearchEngine5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(pnlMedTechDoneCheckupLayout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlMedTechDoneCheckupLayout.setVerticalGroup(
            pnlMedTechDoneCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMedTechDoneCheckupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlSearchEngine5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlMedTechDoneCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8)
                    .addGroup(pnlMedTechDoneCheckupLayout.createSequentialGroup()
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pnlMain2CenterFinal.add(pnlMedTechDoneCheckup, "card2");

        pnlCashierPatient.setPreferredSize(new java.awt.Dimension(1100, 491));

        pnlSearchEngine.setLayout(new java.awt.CardLayout());

        pnlSearchAdvanced.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("Search by Lastname:");
        pnlSearchAdvanced.add(jLabel16);

        txtLastname.setPreferredSize(new java.awt.Dimension(200, 30));
        txtLastname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLastnameKeyTyped(evt);
            }
        });
        pnlSearchAdvanced.add(txtLastname);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Firstname:");
        pnlSearchAdvanced.add(jLabel17);

        txtFirstname.setPreferredSize(new java.awt.Dimension(200, 30));
        txtFirstname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFirstnameKeyTyped(evt);
            }
        });
        pnlSearchAdvanced.add(txtFirstname);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("Middlename:");
        pnlSearchAdvanced.add(jLabel18);

        txtMiddlename.setPreferredSize(new java.awt.Dimension(200, 30));
        txtMiddlename.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMiddlenameKeyTyped(evt);
            }
        });
        pnlSearchAdvanced.add(txtMiddlename);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("<html><u>Search by Patient ID</u></html>");
        jLabel21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });
        pnlSearchAdvanced.add(jLabel21);

        pnlSearchEngine.add(pnlSearchAdvanced, "card3");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Search by Patient ID:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("<html><u>Click to Advanced Search</u></html>");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel15MouseEntered(evt);
            }
        });

        txtPatiendID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPatiendIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPatiendIDKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlSearchByPatientIDLayout = new javax.swing.GroupLayout(pnlSearchByPatientID);
        pnlSearchByPatientID.setLayout(pnlSearchByPatientIDLayout);
        pnlSearchByPatientIDLayout.setHorizontalGroup(
            pnlSearchByPatientIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchByPatientIDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPatiendID, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(632, Short.MAX_VALUE))
        );
        pnlSearchByPatientIDLayout.setVerticalGroup(
            pnlSearchByPatientIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchByPatientIDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSearchByPatientIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel14)
                    .addComponent(txtPatiendID, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pnlSearchEngine.add(pnlSearchByPatientID, "card2");

        tbPatientList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO.", "PATIENT NO.", "LASTNAME", "FIRSTNAME", "MIDDLENAME", "GENDER", "BIRTHDATE", "AGE", "CONTACT NO.", "ADDRESS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPatientList.setRowHeight(25);
        tbPatientList.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbPatientList);
        if (tbPatientList.getColumnModel().getColumnCount() > 0) {
            tbPatientList.getColumnModel().getColumn(0).setMinWidth(40);
            tbPatientList.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbPatientList.getColumnModel().getColumn(0).setMaxWidth(40);
            tbPatientList.getColumnModel().getColumn(1).setMinWidth(120);
            tbPatientList.getColumnModel().getColumn(1).setPreferredWidth(120);
            tbPatientList.getColumnModel().getColumn(1).setMaxWidth(120);
            tbPatientList.getColumnModel().getColumn(2).setMinWidth(120);
            tbPatientList.getColumnModel().getColumn(2).setPreferredWidth(120);
            tbPatientList.getColumnModel().getColumn(2).setMaxWidth(120);
            tbPatientList.getColumnModel().getColumn(3).setMinWidth(120);
            tbPatientList.getColumnModel().getColumn(3).setPreferredWidth(120);
            tbPatientList.getColumnModel().getColumn(3).setMaxWidth(120);
            tbPatientList.getColumnModel().getColumn(4).setMinWidth(120);
            tbPatientList.getColumnModel().getColumn(4).setPreferredWidth(120);
            tbPatientList.getColumnModel().getColumn(4).setMaxWidth(120);
            tbPatientList.getColumnModel().getColumn(5).setMinWidth(80);
            tbPatientList.getColumnModel().getColumn(5).setPreferredWidth(80);
            tbPatientList.getColumnModel().getColumn(5).setMaxWidth(80);
            tbPatientList.getColumnModel().getColumn(5).setHeaderValue("GENDER");
            tbPatientList.getColumnModel().getColumn(6).setMinWidth(90);
            tbPatientList.getColumnModel().getColumn(6).setPreferredWidth(90);
            tbPatientList.getColumnModel().getColumn(6).setMaxWidth(90);
            tbPatientList.getColumnModel().getColumn(6).setHeaderValue("BIRTHDATE");
            tbPatientList.getColumnModel().getColumn(7).setMinWidth(50);
            tbPatientList.getColumnModel().getColumn(7).setPreferredWidth(50);
            tbPatientList.getColumnModel().getColumn(7).setMaxWidth(50);
            tbPatientList.getColumnModel().getColumn(7).setHeaderValue("AGE");
            tbPatientList.getColumnModel().getColumn(8).setMinWidth(90);
            tbPatientList.getColumnModel().getColumn(8).setPreferredWidth(90);
            tbPatientList.getColumnModel().getColumn(8).setMaxWidth(90);
            tbPatientList.getColumnModel().getColumn(8).setHeaderValue("CONTACT NO.");
        }

        jPanel10.setOpaque(false);
        jPanel10.setLayout(new java.awt.GridLayout(4, 0, 0, 3));

        btnNewPatient.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnNewPatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_icon32.png"))); // NOI18N
        btnNewPatient.setText("New Patient");
        btnNewPatient.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNewPatient.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnNewPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewPatientActionPerformed(evt);
            }
        });
        jPanel10.add(btnNewPatient);

        btnEditInfo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnEditInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit_con32.png"))); // NOI18N
        btnEditInfo.setText("Edit Info.");
        btnEditInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditInfoActionPerformed(evt);
            }
        });
        jPanel10.add(btnEditInfo);

        btnAddCheckUp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAddCheckUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_icon32.png"))); // NOI18N
        btnAddCheckUp.setText("Add to Check-Up");
        btnAddCheckUp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddCheckUp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAddCheckUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCheckUpActionPerformed(evt);
            }
        });
        jPanel10.add(btnAddCheckUp);

        javax.swing.GroupLayout pnlCashierPatientLayout = new javax.swing.GroupLayout(pnlCashierPatient);
        pnlCashierPatient.setLayout(pnlCashierPatientLayout);
        pnlCashierPatientLayout.setHorizontalGroup(
            pnlCashierPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCashierPatientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCashierPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSearchEngine, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(pnlCashierPatientLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlCashierPatientLayout.setVerticalGroup(
            pnlCashierPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCashierPatientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlSearchEngine, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCashierPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(pnlCashierPatientLayout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pnlMain2CenterFinal.add(pnlCashierPatient, "card2");

        pnlCashierReportsSales.setPreferredSize(new java.awt.Dimension(1106, 516));

        jPanel18.setOpaque(false);
        jPanel18.setLayout(new java.awt.GridLayout(4, 0, 0, 3));

        btnGenerateSalesReport.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnGenerateSalesReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print_icon.png"))); // NOI18N
        btnGenerateSalesReport.setText("GENERATE REPORT");
        btnGenerateSalesReport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGenerateSalesReport.setEnabled(false);
        btnGenerateSalesReport.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnGenerateSalesReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateSalesReportActionPerformed(evt);
            }
        });
        jPanel18.add(btnGenerateSalesReport);

        btnGenerateSalesChart.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnGenerateSalesChart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print_icon.png"))); // NOI18N
        btnGenerateSalesChart.setText("GENERATE CHART");
        btnGenerateSalesChart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGenerateSalesChart.setEnabled(false);
        btnGenerateSalesChart.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnGenerateSalesChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateSalesChartActionPerformed(evt);
            }
        });
        jPanel18.add(btnGenerateSalesChart);

        tbSalesReportCashier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO.", "PARTICULARS", "AMOUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbSalesReportCashier.setRowHeight(25);
        tbSalesReportCashier.getTableHeader().setReorderingAllowed(false);
        jScrollPane9.setViewportView(tbSalesReportCashier);
        if (tbSalesReportCashier.getColumnModel().getColumnCount() > 0) {
            tbSalesReportCashier.getColumnModel().getColumn(0).setMinWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(0).setMaxWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(2).setMinWidth(90);
            tbSalesReportCashier.getColumnModel().getColumn(2).setPreferredWidth(90);
            tbSalesReportCashier.getColumnModel().getColumn(2).setMaxWidth(90);
        }

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("TOTAL SALES:");

        lblTotalAmountSales.setBackground(new java.awt.Color(255, 255, 255));
        lblTotalAmountSales.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTotalAmountSales.setForeground(new java.awt.Color(255, 0, 0));
        lblTotalAmountSales.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotalAmountSales.setText("0.00");
        lblTotalAmountSales.setOpaque(true);

        jPanel21.setLayout(new java.awt.BorderLayout());

        jPanel22.setPreferredSize(new java.awt.Dimension(240, 0));
        jPanel22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel39.setText("Sales:");
        jPanel22.add(jLabel39);

        cmbReportBySales.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmbReportBySales.setForeground(new java.awt.Color(204, 0, 51));
        cmbReportBySales.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BY DAILY", "BY MONTHLY", "BY YEARLY", "BY DATE " }));
        cmbReportBySales.setPreferredSize(new java.awt.Dimension(140, 35));
        cmbReportBySales.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbReportBySalesItemStateChanged(evt);
            }
        });
        jPanel22.add(cmbReportBySales);

        jPanel21.add(jPanel22, java.awt.BorderLayout.WEST);

        pnlCenterSalesReport.setLayout(new java.awt.CardLayout());

        pnlByDaily.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel48.setText("Select Date:");
        pnlByDaily.add(jLabel48);

        dcDateDaily.setToolTipText("Enter Birthday here! ex. April 7, 1990");
        dcDateDaily.setDateFormatString("MMMM d, yyyy");
        dcDateDaily.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dcDateDaily.setPreferredSize(new java.awt.Dimension(150, 35));
        pnlByDaily.add(dcDateDaily);

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel50.setText("View Sales By:");
        pnlByDaily.add(jLabel50);

        cmbLaboratoryListCashierByDaily.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbLaboratoryListCashierByDaily.setPreferredSize(new java.awt.Dimension(200, 35));
        pnlByDaily.add(cmbLaboratoryListCashierByDaily);

        btnMonthlySalesByDaily.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMonthlySalesByDaily.setMnemonic('V');
        btnMonthlySalesByDaily.setText("VIEW SALES");
        btnMonthlySalesByDaily.setToolTipText("Click to View Sales!");
        btnMonthlySalesByDaily.setPreferredSize(new java.awt.Dimension(150, 35));
        btnMonthlySalesByDaily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonthlySalesByDailyActionPerformed(evt);
            }
        });
        pnlByDaily.add(btnMonthlySalesByDaily);

        pnlCenterSalesReport.add(pnlByDaily, "card2");

        pnlByDate.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Start Date:");
        pnlByDate.add(jLabel1);

        dcStartDate.setToolTipText("Enter Birthday here! ex. April 7, 1990");
        dcStartDate.setDateFormatString("MMMM d, yyyy");
        dcStartDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dcStartDate.setPreferredSize(new java.awt.Dimension(150, 35));
        pnlByDate.add(dcStartDate);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("End Date:");
        pnlByDate.add(jLabel7);

        dcEndDate.setToolTipText("Enter Birthday here! ex. April 7, 1990");
        dcEndDate.setDateFormatString("MMMM d, yyyy");
        dcEndDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dcEndDate.setPreferredSize(new java.awt.Dimension(150, 35));
        pnlByDate.add(dcEndDate);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("View Sales By:");
        pnlByDate.add(jLabel9);

        cmbLaboratoryListCashier.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbLaboratoryListCashier.setPreferredSize(new java.awt.Dimension(200, 35));
        pnlByDate.add(cmbLaboratoryListCashier);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setMnemonic('V');
        jButton4.setText("VIEW SALES");
        jButton4.setToolTipText("Click to View Sales!");
        jButton4.setPreferredSize(new java.awt.Dimension(150, 35));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        pnlByDate.add(jButton4);

        pnlCenterSalesReport.add(pnlByDate, "card2");

        pnlByMonth.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel45.setText("Start Month:");
        pnlByMonth.add(jLabel45);

        mcStartMonth.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mcStartMonth.setForeground(new java.awt.Color(255, 0, 51));
        mcStartMonth.setToolTipText("");
        mcStartMonth.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mcStartMonth.setPreferredSize(new java.awt.Dimension(100, 35));
        pnlByMonth.add(mcStartMonth);

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel46.setText("End Month:");
        pnlByMonth.add(jLabel46);

        mcEndMonth.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mcEndMonth.setForeground(new java.awt.Color(255, 0, 0));
        mcEndMonth.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mcEndMonth.setPreferredSize(new java.awt.Dimension(100, 35));
        pnlByMonth.add(mcEndMonth);

        ycYearByMonth.setMinimumSize(new java.awt.Dimension(55, 35));
        ycYearByMonth.setPreferredSize(new java.awt.Dimension(65, 35));
        pnlByMonth.add(ycYearByMonth);

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel47.setText("View Sales By:");
        pnlByMonth.add(jLabel47);

        cmbLaboratoryListCashierByMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbLaboratoryListCashierByMonth.setPreferredSize(new java.awt.Dimension(200, 35));
        pnlByMonth.add(cmbLaboratoryListCashierByMonth);

        btnMonthlySalesByMonth.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMonthlySalesByMonth.setMnemonic('V');
        btnMonthlySalesByMonth.setText("VIEW SALES");
        btnMonthlySalesByMonth.setToolTipText("Click to View Sales!");
        btnMonthlySalesByMonth.setPreferredSize(new java.awt.Dimension(150, 35));
        btnMonthlySalesByMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonthlySalesByMonthActionPerformed(evt);
            }
        });
        pnlByMonth.add(btnMonthlySalesByMonth);

        pnlCenterSalesReport.add(pnlByMonth, "card2");

        pnlByYear.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel40.setText("Start Year:");
        pnlByYear.add(jLabel40);

        ycStartYear.setPreferredSize(new java.awt.Dimension(65, 35));
        pnlByYear.add(ycStartYear);

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel43.setText("End Year:");
        pnlByYear.add(jLabel43);

        ycEndYear.setPreferredSize(new java.awt.Dimension(65, 35));
        pnlByYear.add(ycEndYear);

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel44.setText("View Sales By:");
        pnlByYear.add(jLabel44);

        cmbLaboratoryListCashierByYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbLaboratoryListCashierByYear.setPreferredSize(new java.awt.Dimension(200, 35));
        pnlByYear.add(cmbLaboratoryListCashierByYear);

        btnSalesByYear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSalesByYear.setMnemonic('V');
        btnSalesByYear.setText("VIEW SALES");
        btnSalesByYear.setToolTipText("Click to View Sales!");
        btnSalesByYear.setPreferredSize(new java.awt.Dimension(150, 35));
        btnSalesByYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesByYearActionPerformed(evt);
            }
        });
        pnlByYear.add(btnSalesByYear);

        pnlCenterSalesReport.add(pnlByYear, "card2");

        jPanel21.add(pnlCenterSalesReport, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout pnlCashierReportsSalesLayout = new javax.swing.GroupLayout(pnlCashierReportsSales);
        pnlCashierReportsSales.setLayout(pnlCashierReportsSalesLayout);
        pnlCashierReportsSalesLayout.setHorizontalGroup(
            pnlCashierReportsSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCashierReportsSalesLayout.createSequentialGroup()
                .addGroup(pnlCashierReportsSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCashierReportsSalesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlCashierReportsSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlCashierReportsSalesLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblTotalAmountSales, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 883, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCashierReportsSalesLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, 1209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCashierReportsSalesLayout.setVerticalGroup(
            pnlCashierReportsSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCashierReportsSalesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCashierReportsSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCashierReportsSalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblTotalAmountSales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlMain2CenterFinal.add(pnlCashierReportsSales, "card3");

        pnlCashierReportsDiscount.setPreferredSize(new java.awt.Dimension(1106, 516));

        jPanel19.setOpaque(false);
        jPanel19.setLayout(new java.awt.GridLayout(4, 0, 0, 3));

        btnGenerateDiscountReport.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnGenerateDiscountReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print_icon.png"))); // NOI18N
        btnGenerateDiscountReport.setText("GENERATE REPORT");
        btnGenerateDiscountReport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGenerateDiscountReport.setEnabled(false);
        btnGenerateDiscountReport.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnGenerateDiscountReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateDiscountReportActionPerformed(evt);
            }
        });
        jPanel19.add(btnGenerateDiscountReport);

        tbSalesReportCashierDiscount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO.", "PATIENT NO.", "LASTNAME", "FIRSTNAME", "MIDDLENAME", "CHECKUP DATE", "DISCOUNT NAME", "AMOUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbSalesReportCashierDiscount.setRowHeight(25);
        tbSalesReportCashierDiscount.getTableHeader().setReorderingAllowed(false);
        jScrollPane10.setViewportView(tbSalesReportCashierDiscount);
        if (tbSalesReportCashierDiscount.getColumnModel().getColumnCount() > 0) {
            tbSalesReportCashierDiscount.getColumnModel().getColumn(0).setMinWidth(40);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(0).setMaxWidth(40);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(1).setMinWidth(90);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(1).setPreferredWidth(90);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(1).setMaxWidth(90);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(2).setMinWidth(100);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(2).setMaxWidth(100);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(3).setMinWidth(100);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(3).setPreferredWidth(100);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(3).setMaxWidth(100);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(4).setMinWidth(100);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(4).setPreferredWidth(100);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(4).setMaxWidth(100);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(5).setMinWidth(100);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(5).setPreferredWidth(100);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(5).setMaxWidth(100);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(7).setMinWidth(90);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(7).setPreferredWidth(90);
            tbSalesReportCashierDiscount.getColumnModel().getColumn(7).setMaxWidth(90);
        }

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel34.setText("TOTAL DISCOUNT:");

        lblTotalAmountSalesDiscount.setBackground(new java.awt.Color(255, 255, 255));
        lblTotalAmountSalesDiscount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTotalAmountSalesDiscount.setForeground(new java.awt.Color(255, 0, 0));
        lblTotalAmountSalesDiscount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotalAmountSalesDiscount.setText("0.00");
        lblTotalAmountSalesDiscount.setOpaque(true);

        jPanel29.setLayout(new java.awt.BorderLayout());

        jPanel30.setPreferredSize(new java.awt.Dimension(240, 0));
        jPanel30.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel72.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel72.setText("Discount:");
        jPanel30.add(jLabel72);

        cmbReportByDiscount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmbReportByDiscount.setForeground(new java.awt.Color(204, 0, 51));
        cmbReportByDiscount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BY DAILY", "BY MONTHLY", "BY YEARLY", "BY DATE " }));
        cmbReportByDiscount.setPreferredSize(new java.awt.Dimension(140, 35));
        cmbReportByDiscount.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbReportByDiscountItemStateChanged(evt);
            }
        });
        jPanel30.add(cmbReportByDiscount);

        jPanel29.add(jPanel30, java.awt.BorderLayout.WEST);

        pnlCenterSalesReport1.setLayout(new java.awt.CardLayout());

        pnlByDaily1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel73.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel73.setText("Select Date:");
        pnlByDaily1.add(jLabel73);

        dcDateDailyDiscount.setToolTipText("Enter Birthday here! ex. April 7, 1990");
        dcDateDailyDiscount.setDateFormatString("MMMM d, yyyy");
        dcDateDailyDiscount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dcDateDailyDiscount.setPreferredSize(new java.awt.Dimension(150, 35));
        pnlByDaily1.add(dcDateDailyDiscount);

        jLabel74.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel74.setText("View Discount By:");
        pnlByDaily1.add(jLabel74);

        cmbLaboratoryListCashierByDailyDiscount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbLaboratoryListCashierByDailyDiscount.setPreferredSize(new java.awt.Dimension(200, 35));
        pnlByDaily1.add(cmbLaboratoryListCashierByDailyDiscount);

        btnMonthlySalesByDailyDiscount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMonthlySalesByDailyDiscount.setMnemonic('V');
        btnMonthlySalesByDailyDiscount.setText("VIEW DISCOUNT");
        btnMonthlySalesByDailyDiscount.setToolTipText("Click to View Sales!");
        btnMonthlySalesByDailyDiscount.setPreferredSize(new java.awt.Dimension(200, 35));
        btnMonthlySalesByDailyDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonthlySalesByDailyDiscountActionPerformed(evt);
            }
        });
        pnlByDaily1.add(btnMonthlySalesByDailyDiscount);

        pnlCenterSalesReport1.add(pnlByDaily1, "card2");

        pnlByDate1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Start Date:");
        pnlByDate1.add(jLabel11);

        dcStartDateDiscount.setToolTipText("Enter Birthday here! ex. April 7, 1990");
        dcStartDateDiscount.setDateFormatString("MMMM d, yyyy");
        dcStartDateDiscount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dcStartDateDiscount.setPreferredSize(new java.awt.Dimension(150, 35));
        pnlByDate1.add(dcStartDateDiscount);

        jLabel75.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel75.setText("End Date:");
        pnlByDate1.add(jLabel75);

        dcEndDateDiscount.setToolTipText("Enter Birthday here! ex. April 7, 1990");
        dcEndDateDiscount.setDateFormatString("MMMM d, yyyy");
        dcEndDateDiscount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dcEndDateDiscount.setPreferredSize(new java.awt.Dimension(150, 35));
        pnlByDate1.add(dcEndDateDiscount);

        jLabel76.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel76.setText("View Discount By:");
        pnlByDate1.add(jLabel76);

        cmbLaboratoryListCashierDiscount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbLaboratoryListCashierDiscount.setPreferredSize(new java.awt.Dimension(200, 35));
        pnlByDate1.add(cmbLaboratoryListCashierDiscount);

        btnDiscountByDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDiscountByDate.setMnemonic('V');
        btnDiscountByDate.setText("VIEW DISCOUNT");
        btnDiscountByDate.setToolTipText("Click to View Sales!");
        btnDiscountByDate.setPreferredSize(new java.awt.Dimension(150, 35));
        btnDiscountByDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiscountByDateActionPerformed(evt);
            }
        });
        pnlByDate1.add(btnDiscountByDate);

        pnlCenterSalesReport1.add(pnlByDate1, "card2");

        pnlByMonth1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel77.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel77.setText("Start Month:");
        pnlByMonth1.add(jLabel77);

        mcStartMonthDiscount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mcStartMonthDiscount.setForeground(new java.awt.Color(255, 0, 51));
        mcStartMonthDiscount.setToolTipText("");
        mcStartMonthDiscount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mcStartMonthDiscount.setPreferredSize(new java.awt.Dimension(100, 35));
        pnlByMonth1.add(mcStartMonthDiscount);

        jLabel78.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel78.setText("End Month:");
        pnlByMonth1.add(jLabel78);

        mcEndMonthDiscount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mcEndMonthDiscount.setForeground(new java.awt.Color(255, 0, 0));
        mcEndMonthDiscount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mcEndMonthDiscount.setPreferredSize(new java.awt.Dimension(100, 35));
        pnlByMonth1.add(mcEndMonthDiscount);

        ycYearByMonthDiscount.setMinimumSize(new java.awt.Dimension(55, 35));
        ycYearByMonthDiscount.setPreferredSize(new java.awt.Dimension(65, 35));
        pnlByMonth1.add(ycYearByMonthDiscount);

        jLabel79.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel79.setText("View Discount By:");
        pnlByMonth1.add(jLabel79);

        cmbLaboratoryListCashierByMonthDiscount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbLaboratoryListCashierByMonthDiscount.setPreferredSize(new java.awt.Dimension(200, 35));
        pnlByMonth1.add(cmbLaboratoryListCashierByMonthDiscount);

        btnMonthlySalesByMonthDiscount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMonthlySalesByMonthDiscount.setMnemonic('V');
        btnMonthlySalesByMonthDiscount.setText("VIEW DISCOUNT");
        btnMonthlySalesByMonthDiscount.setToolTipText("Click to View Sales!");
        btnMonthlySalesByMonthDiscount.setPreferredSize(new java.awt.Dimension(200, 200));
        btnMonthlySalesByMonthDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonthlySalesByMonthDiscountActionPerformed(evt);
            }
        });
        pnlByMonth1.add(btnMonthlySalesByMonthDiscount);

        pnlCenterSalesReport1.add(pnlByMonth1, "card2");

        pnlByYear1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel80.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel80.setText("Start Year:");
        pnlByYear1.add(jLabel80);

        ycStartYearDiscount.setPreferredSize(new java.awt.Dimension(65, 35));
        pnlByYear1.add(ycStartYearDiscount);

        jLabel81.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel81.setText("End Year:");
        pnlByYear1.add(jLabel81);

        ycEndYearDiscount.setPreferredSize(new java.awt.Dimension(65, 35));
        pnlByYear1.add(ycEndYearDiscount);

        jLabel82.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel82.setText("View Discount By:");
        pnlByYear1.add(jLabel82);

        cmbLaboratoryListCashierByYearDiscount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbLaboratoryListCashierByYearDiscount.setPreferredSize(new java.awt.Dimension(200, 35));
        pnlByYear1.add(cmbLaboratoryListCashierByYearDiscount);

        btnSalesByYearDiscount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSalesByYearDiscount.setMnemonic('V');
        btnSalesByYearDiscount.setText("VIEW SALES");
        btnSalesByYearDiscount.setToolTipText("Click to View Sales!");
        btnSalesByYearDiscount.setPreferredSize(new java.awt.Dimension(150, 35));
        btnSalesByYearDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesByYearDiscountActionPerformed(evt);
            }
        });
        pnlByYear1.add(btnSalesByYearDiscount);

        pnlCenterSalesReport1.add(pnlByYear1, "card2");

        jPanel29.add(pnlCenterSalesReport1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout pnlCashierReportsDiscountLayout = new javax.swing.GroupLayout(pnlCashierReportsDiscount);
        pnlCashierReportsDiscount.setLayout(pnlCashierReportsDiscountLayout);
        pnlCashierReportsDiscountLayout.setHorizontalGroup(
            pnlCashierReportsDiscountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCashierReportsDiscountLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCashierReportsDiscountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlCashierReportsDiscountLayout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTotalAmountSalesDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(235, Short.MAX_VALUE))
            .addGroup(pnlCashierReportsDiscountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlCashierReportsDiscountLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, 1209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlCashierReportsDiscountLayout.setVerticalGroup(
            pnlCashierReportsDiscountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCashierReportsDiscountLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(pnlCashierReportsDiscountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCashierReportsDiscountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblTotalAmountSalesDiscount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel34))
                .addGap(16, 16, 16))
            .addGroup(pnlCashierReportsDiscountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlCashierReportsDiscountLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(475, Short.MAX_VALUE)))
        );

        pnlMain2CenterFinal.add(pnlCashierReportsDiscount, "card3");

        pnlPhysicianOnCheckup.setPreferredSize(new java.awt.Dimension(1100, 491));

        pnlSearchEngine4.setLayout(new java.awt.CardLayout());

        pnlSearchAdvanced5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 8));

        jLabel61.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel61.setText(" Search by Lastname:");
        pnlSearchAdvanced5.add(jLabel61);

        txtLastname4.setPreferredSize(new java.awt.Dimension(200, 30));
        txtLastname4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLastname4KeyTyped(evt);
            }
        });
        pnlSearchAdvanced5.add(txtLastname4);

        jLabel62.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel62.setText("Firstname:");
        pnlSearchAdvanced5.add(jLabel62);

        txtFirstname4.setPreferredSize(new java.awt.Dimension(200, 30));
        txtFirstname4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFirstname4KeyTyped(evt);
            }
        });
        pnlSearchAdvanced5.add(txtFirstname4);

        jLabel63.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel63.setText("Middlename:");
        pnlSearchAdvanced5.add(jLabel63);

        txtMiddlename4.setPreferredSize(new java.awt.Dimension(200, 30));
        txtMiddlename4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMiddlename4KeyTyped(evt);
            }
        });
        pnlSearchAdvanced5.add(txtMiddlename4);

        jLabel64.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel64.setText("<html><u>Search by Patient ID</u></html>");
        jLabel64.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel64.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel64MouseClicked(evt);
            }
        });
        pnlSearchAdvanced5.add(jLabel64);

        pnlSearchEngine4.add(pnlSearchAdvanced5, "card3");

        jLabel59.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel59.setText("Search by Patient ID:");

        jLabel60.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel60.setText("<html><u>Click to Advanced Search</u></html>");
        jLabel60.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel60.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel60MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel60MouseEntered(evt);
            }
        });

        txtPatiendID4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPatiendID4KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlSearchByPatientID4Layout = new javax.swing.GroupLayout(pnlSearchByPatientID4);
        pnlSearchByPatientID4.setLayout(pnlSearchByPatientID4Layout);
        pnlSearchByPatientID4Layout.setHorizontalGroup(
            pnlSearchByPatientID4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchByPatientID4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel59)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPatiendID4, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(624, Short.MAX_VALUE))
        );
        pnlSearchByPatientID4Layout.setVerticalGroup(
            pnlSearchByPatientID4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchByPatientID4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSearchByPatientID4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel59)
                    .addComponent(txtPatiendID4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pnlSearchEngine4.add(pnlSearchByPatientID4, "card2");

        tbPhysicianOnCheckUp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO.", "PATIENT NO.", "LASTNAME", "FIRSTNAME", "MIDDLENAME", "CHECKUPLABORATORIES ID", "LAB CATEGORY", "LABORATORY NAME", "CHECKUP DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPhysicianOnCheckUp.setRowHeight(25);
        tbPhysicianOnCheckUp.getTableHeader().setReorderingAllowed(false);
        jScrollPane12.setViewportView(tbPhysicianOnCheckUp);
        if (tbPhysicianOnCheckUp.getColumnModel().getColumnCount() > 0) {
            tbPhysicianOnCheckUp.getColumnModel().getColumn(0).setMinWidth(40);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(0).setMaxWidth(40);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(1).setMinWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(1).setPreferredWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(1).setMaxWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(2).setMinWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(2).setPreferredWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(2).setMaxWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(3).setMinWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(3).setPreferredWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(3).setMaxWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(4).setMinWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(4).setPreferredWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(4).setMaxWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(5).setMinWidth(0);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(5).setPreferredWidth(0);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(5).setMaxWidth(0);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(6).setMinWidth(0);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(6).setPreferredWidth(0);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(6).setMaxWidth(0);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(8).setMinWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(8).setPreferredWidth(120);
            tbPhysicianOnCheckUp.getColumnModel().getColumn(8).setMaxWidth(120);
        }

        jPanel26.setOpaque(false);
        jPanel26.setLayout(new java.awt.GridLayout(4, 0, 0, 3));

        btnAddResults.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAddResults.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_icon32.png"))); // NOI18N
        btnAddResults.setText("ADD RESULTS");
        btnAddResults.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddResults.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAddResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddResultsActionPerformed(evt);
            }
        });
        jPanel26.add(btnAddResults);

        btnViewPatientInfo10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnViewPatientInfo10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/view_icon32.png"))); // NOI18N
        btnViewPatientInfo10.setText("VIEW HISTORY");
        btnViewPatientInfo10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewPatientInfo10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnViewPatientInfo10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfo10ActionPerformed(evt);
            }
        });
        jPanel26.add(btnViewPatientInfo10);

        btnViewPatientInfo9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnViewPatientInfo9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update_icon.png"))); // NOI18N
        btnViewPatientInfo9.setText("REFRESH");
        btnViewPatientInfo9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewPatientInfo9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnViewPatientInfo9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfo9ActionPerformed(evt);
            }
        });
        jPanel26.add(btnViewPatientInfo9);

        javax.swing.GroupLayout pnlPhysicianOnCheckupLayout = new javax.swing.GroupLayout(pnlPhysicianOnCheckup);
        pnlPhysicianOnCheckup.setLayout(pnlPhysicianOnCheckupLayout);
        pnlPhysicianOnCheckupLayout.setHorizontalGroup(
            pnlPhysicianOnCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPhysicianOnCheckupLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPhysicianOnCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSearchEngine4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(pnlPhysicianOnCheckupLayout.createSequentialGroup()
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlPhysicianOnCheckupLayout.setVerticalGroup(
            pnlPhysicianOnCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPhysicianOnCheckupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlSearchEngine4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPhysicianOnCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12)
                    .addGroup(pnlPhysicianOnCheckupLayout.createSequentialGroup()
                        .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pnlMain2CenterFinal.add(pnlPhysicianOnCheckup, "card2");

        pnlPhysicianDoneCheckup.setPreferredSize(new java.awt.Dimension(1100, 491));

        pnlSearchEngine6.setLayout(new java.awt.CardLayout());

        jLabel65.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel65.setText("Search by Patient ID:");

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel66.setText("<html><u>Click to Advanced Search</u></html>");
        jLabel66.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel66.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel66jLabel34MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel66jLabel34MouseEntered(evt);
            }
        });

        txtPatiendID5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPatiendID5KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlSearchByPatientID6Layout = new javax.swing.GroupLayout(pnlSearchByPatientID6);
        pnlSearchByPatientID6.setLayout(pnlSearchByPatientID6Layout);
        pnlSearchByPatientID6Layout.setHorizontalGroup(
            pnlSearchByPatientID6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchByPatientID6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel65)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPatiendID5, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(620, Short.MAX_VALUE))
        );
        pnlSearchByPatientID6Layout.setVerticalGroup(
            pnlSearchByPatientID6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchByPatientID6Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(pnlSearchByPatientID6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel65)
                    .addComponent(txtPatiendID5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlSearchEngine6.add(pnlSearchByPatientID6, "card2");

        jLabel67.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel67.setText("Search by Lastname:");
        pnlSearchAdvanced6.add(jLabel67);

        txtLastname5.setPreferredSize(new java.awt.Dimension(200, 30));
        txtLastname5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLastname5KeyTyped(evt);
            }
        });
        pnlSearchAdvanced6.add(txtLastname5);

        jLabel68.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel68.setText("Firstname:");
        pnlSearchAdvanced6.add(jLabel68);

        txtFirstname5.setPreferredSize(new java.awt.Dimension(200, 30));
        txtFirstname5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFirstname5KeyTyped(evt);
            }
        });
        pnlSearchAdvanced6.add(txtFirstname5);

        jLabel69.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel69.setText("Middlename:");
        pnlSearchAdvanced6.add(jLabel69);

        txtMiddlename5.setPreferredSize(new java.awt.Dimension(200, 30));
        txtMiddlename5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMiddlename5KeyTyped(evt);
            }
        });
        pnlSearchAdvanced6.add(txtMiddlename5);

        jLabel70.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel70.setText("<html><u>Search by Patient ID</u></html>");
        jLabel70.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel70.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel70jLabel38MouseClicked(evt);
            }
        });
        pnlSearchAdvanced6.add(jLabel70);

        pnlSearchEngine6.add(pnlSearchAdvanced6, "card3");

        tbPhysicianDoneCheckup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO.", "PATIENT NO.", "LASTNAME", "FIRSTNAME", "MIDDLENAME", "CHECKUP LAB ID", "LAB CATEGORY", "LABORATORY NAME", "CHECKUP DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPhysicianDoneCheckup.setRowHeight(25);
        tbPhysicianDoneCheckup.getTableHeader().setReorderingAllowed(false);
        jScrollPane13.setViewportView(tbPhysicianDoneCheckup);
        if (tbPhysicianDoneCheckup.getColumnModel().getColumnCount() > 0) {
            tbPhysicianDoneCheckup.getColumnModel().getColumn(0).setMinWidth(40);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(0).setMaxWidth(40);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(1).setMinWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(1).setPreferredWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(1).setMaxWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(2).setMinWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(2).setPreferredWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(2).setMaxWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(3).setMinWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(3).setPreferredWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(3).setMaxWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(4).setMinWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(4).setPreferredWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(4).setMaxWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(5).setMinWidth(0);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(5).setPreferredWidth(0);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(5).setMaxWidth(0);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(6).setMinWidth(0);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(6).setPreferredWidth(0);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(6).setMaxWidth(0);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(8).setMinWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(8).setPreferredWidth(120);
            tbPhysicianDoneCheckup.getColumnModel().getColumn(8).setMaxWidth(120);
        }

        jPanel27.setOpaque(false);
        jPanel27.setLayout(new java.awt.GridLayout(4, 0, 0, 3));

        btnViewPatientInfo11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnViewPatientInfo11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/view_icon32.png"))); // NOI18N
        btnViewPatientInfo11.setText("VIEW RESULT");
        btnViewPatientInfo11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewPatientInfo11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnViewPatientInfo11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfo11ActionPerformed(evt);
            }
        });
        jPanel27.add(btnViewPatientInfo11);

        btnViewPatientInfo12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnViewPatientInfo12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit_con32.png"))); // NOI18N
        btnViewPatientInfo12.setText("EDIT RESULT");
        btnViewPatientInfo12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewPatientInfo12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnViewPatientInfo12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfo12ActionPerformed(evt);
            }
        });
        jPanel27.add(btnViewPatientInfo12);

        btnViewPatientInfo13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnViewPatientInfo13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update_icon.png"))); // NOI18N
        btnViewPatientInfo13.setText("REFRESH");
        btnViewPatientInfo13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewPatientInfo13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnViewPatientInfo13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfo13ActionPerformed(evt);
            }
        });
        jPanel27.add(btnViewPatientInfo13);

        javax.swing.GroupLayout pnlPhysicianDoneCheckupLayout = new javax.swing.GroupLayout(pnlPhysicianDoneCheckup);
        pnlPhysicianDoneCheckup.setLayout(pnlPhysicianDoneCheckupLayout);
        pnlPhysicianDoneCheckupLayout.setHorizontalGroup(
            pnlPhysicianDoneCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPhysicianDoneCheckupLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPhysicianDoneCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSearchEngine6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(pnlPhysicianDoneCheckupLayout.createSequentialGroup()
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlPhysicianDoneCheckupLayout.setVerticalGroup(
            pnlPhysicianDoneCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPhysicianDoneCheckupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlSearchEngine6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPhysicianDoneCheckupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane13)
                    .addGroup(pnlPhysicianDoneCheckupLayout.createSequentialGroup()
                        .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pnlMain2CenterFinal.add(pnlPhysicianDoneCheckup, "card2");

        jScrollPane1.setViewportView(pnlMain2CenterFinal);

        jPanel8.add(jScrollPane1);

        pnlMain2Center.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel9.setBackground(new java.awt.Color(223, 240, 208));
        jPanel9.setPreferredSize(new java.awt.Dimension(877, 30));
        jPanel9.setLayout(new java.awt.GridLayout(1, 0));

        lblMainPanelTitle.setBackground(new java.awt.Color(212, 237, 255));
        lblMainPanelTitle.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 14)); // NOI18N
        lblMainPanelTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMainPanelTitle.setText("   MAIN PANEL");
        lblMainPanelTitle.setOpaque(true);
        jPanel9.add(lblMainPanelTitle);

        pnlMain2Center.add(jPanel9, java.awt.BorderLayout.PAGE_START);

        pnlMain2.add(pnlMain2Center, java.awt.BorderLayout.CENTER);

        pnlMain.add(pnlMain2, java.awt.BorderLayout.CENTER);

        pnlMainToolbar.setPreferredSize(new java.awt.Dimension(1033, 55));
        pnlMainToolbar.setLayout(new java.awt.CardLayout());

        tbAdministrator.setFloatable(false);
        tbAdministrator.setRollover(true);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addpatient.png"))); // NOI18N
        jButton1.setText("Patient");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tbAdministrator.add(jButton1);

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user.png"))); // NOI18N
        jButton2.setText("  User  ");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setPreferredSize(new java.awt.Dimension(45, 57));
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tbAdministrator.add(jButton2);

        pnlMainToolbar.add(tbAdministrator, "card2");

        tbMedTech.setFloatable(false);
        tbMedTech.setRollover(true);

        jButton12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user.png"))); // NOI18N
        jButton12.setMnemonic('C');
        jButton12.setText("Change");
        jButton12.setToolTipText("Change Password!");
        jButton12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton12.setFocusable(false);
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton12.setPreferredSize(new java.awt.Dimension(45, 57));
        jButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tbMedTech.add(jButton12);

        pnlMainToolbar.add(tbMedTech, "card2");

        pnlMain.add(pnlMainToolbar, java.awt.BorderLayout.PAGE_START);

        pnlCenter.add(pnlMain, "card3");

        btnUnlock.setText("Unlock");
        btnUnlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnlockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLockLayout = new javax.swing.GroupLayout(pnlLock);
        pnlLock.setLayout(pnlLockLayout);
        pnlLockLayout.setHorizontalGroup(
            pnlLockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLockLayout.createSequentialGroup()
                .addContainerGap(861, Short.MAX_VALUE)
                .addComponent(btnUnlock)
                .addGap(470, 470, 470))
        );
        pnlLockLayout.setVerticalGroup(
            pnlLockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLockLayout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(btnUnlock)
                .addContainerGap(469, Short.MAX_VALUE))
        );

        pnlCenter.add(pnlLock, "card4");

        pnlResetPassword.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        pnlResetPassword.setLayout(new javax.swing.OverlayLayout(pnlResetPassword));

        pnlLoginForm1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 5, true));
        pnlLoginForm1.setMaximumSize(new java.awt.Dimension(550, 300));
        pnlLoginForm1.setPreferredSize(new java.awt.Dimension(650, 450));
        pnlLoginForm1.setRequestFocusEnabled(false);
        pnlLoginForm1.setLayout(new java.awt.BorderLayout());

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));
        jPanel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel56.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel56.setText("New Password:");

        jLabel57.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel57.setText("Confirm Password:");

        txtConfirmPasswordReset.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtConfirmPasswordReset.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtConfirmPasswordResetFocusGained(evt);
            }
        });
        txtConfirmPasswordReset.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConfirmPasswordResetKeyPressed(evt);
            }
        });

        btnClear1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClear1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        btnClear1.setText("EXIT");
        btnClear1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear1ActionPerformed(evt);
            }
        });

        btnLogin1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLogin1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save_icon.png"))); // NOI18N
        btnLogin1.setText("SAVE NEW PASSWORD");
        btnLogin1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogin1ActionPerformed(evt);
            }
        });

        ckbShowPassword1.setText("Show password");
        ckbShowPassword1.setOpaque(false);
        ckbShowPassword1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckbShowPassword1ItemStateChanged(evt);
            }
        });

        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel58.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/change_password2.png"))); // NOI18N

        lblCapsLock1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/warning.png"))); // NOI18N
        lblCapsLock1.setText("Caps Lock is on");

        lblError1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblError1.setForeground(new java.awt.Color(255, 0, 0));
        lblError1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/error.png"))); // NOI18N
        lblError1.setText("Password should be at least 6 characters.");

        txtPasswordReset.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtPasswordReset.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordResetFocusGained(evt);
            }
        });
        txtPasswordReset.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordResetKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblCapsLock1)))
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel56, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel57, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ckbShowPassword1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addComponent(txtConfirmPasswordReset, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPasswordReset))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblError1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addComponent(btnClear1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLogin1)
                                .addGap(0, 14, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPasswordReset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtConfirmPasswordReset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ckbShowPassword1)
                        .addGap(11, 11, 11)
                        .addComponent(lblError1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLogin1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClear1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jLabel58, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCapsLock1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pnlLoginForm1.add(jPanel24, java.awt.BorderLayout.CENTER);

        jPanel25.setPreferredSize(new java.awt.Dimension(303, 35));
        jPanel25.setLayout(new java.awt.GridLayout(1, 0));

        lblTitle1.setBackground(new java.awt.Color(255, 102, 0));
        lblTitle1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle1.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle1.setText("Your password has been reseted! Please enter a new one.");
        lblTitle1.setOpaque(true);
        jPanel25.add(lblTitle1);

        pnlLoginForm1.add(jPanel25, java.awt.BorderLayout.PAGE_START);

        pnlResetPassword.add(pnlLoginForm1);

        pnlCenter.add(pnlResetPassword, "card2");

        pnlMainCenter.add(pnlCenter, java.awt.BorderLayout.CENTER);

        pnlStatusBar.setPreferredSize(new java.awt.Dimension(952, 35));
        pnlStatusBar.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));

        jLabel2.setText("Today is:");
        jLabel2.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel2.add(jLabel2);

        jLabel5.setText("DATE & TIME");
        jLabel5.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel2.add(jLabel5);

        pnlStatusBar.add(jPanel2, java.awt.BorderLayout.EAST);

        jPanel28.setPreferredSize(new java.awt.Dimension(200, 35));
        jPanel28.setLayout(new java.awt.GridLayout(1, 0));

        jLabel71.setText("  Copyright@2018 by GgCute, Inc.");
        jPanel28.add(jLabel71);

        pnlStatusBar.add(jPanel28, java.awt.BorderLayout.WEST);

        pnlMainCenter.add(pnlStatusBar, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(pnlMainCenter);

        mnuBar.setPreferredSize(new java.awt.Dimension(142, 30));

        jmSystem.setMnemonic('S');
        jmSystem.setText("System");

        jMenuItem6.setText("Information");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jmSystem.add(jMenuItem6);

        jMenuItem1.setText("Exit");
        jmSystem.add(jMenuItem1);

        mnuBar.add(jmSystem);

        jmAdmin.setMnemonic('A');
        jmAdmin.setText("Admin");

        jMenuItem10.setText("Users Account");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jmAdmin.add(jMenuItem10);

        jMenuItem11.setText("Employees");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jmAdmin.add(jMenuItem11);

        jMenuItem7.setText("Fees");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jmAdmin.add(jMenuItem7);

        jMenuItem8.setText("Discount");
        jmAdmin.add(jMenuItem8);

        jMenu6.setText("Laboratories");

        jMenuItem9.setText("Laboratory List");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem9);

        jMenuItem13.setText("Lab Category");
        jMenu6.add(jMenuItem13);

        jmAdmin.add(jMenu6);

        mnuBar.add(jmAdmin);

        jmSettings.setMnemonic('S');
        jmSettings.setText("Settings");

        jMenu3.setText("Look & Feel");

        buttonGroup1.add(jrbMetal);
        jrbMetal.setText("Metal");
        jrbMetal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMetalActionPerformed(evt);
            }
        });
        jMenu3.add(jrbMetal);

        buttonGroup1.add(jrbMotiff);
        jrbMotiff.setText("Motiff");
        jrbMotiff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMotiffActionPerformed(evt);
            }
        });
        jMenu3.add(jrbMotiff);

        buttonGroup1.add(jrbSystem);
        jrbSystem.setText("System");
        jrbSystem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbSystemActionPerformed(evt);
            }
        });
        jMenu3.add(jrbSystem);
        jMenu3.add(jSeparator1);

        buttonGroup1.add(jrbAcryl);
        jrbAcryl.setText("Acryl");
        jrbAcryl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAcrylActionPerformed(evt);
            }
        });
        jMenu3.add(jrbAcryl);

        buttonGroup1.add(jrbAero);
        jrbAero.setText("Aero");
        jrbAero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAeroActionPerformed(evt);
            }
        });
        jMenu3.add(jrbAero);

        buttonGroup1.add(jrbAluminum);
        jrbAluminum.setText("Aluminium");
        jrbAluminum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAluminumActionPerformed(evt);
            }
        });
        jMenu3.add(jrbAluminum);

        buttonGroup1.add(jrbBernstein);
        jrbBernstein.setText("Bernstein");
        jrbBernstein.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbBernsteinActionPerformed(evt);
            }
        });
        jMenu3.add(jrbBernstein);

        buttonGroup1.add(jrbFast);
        jrbFast.setText("Fast");
        jrbFast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbFastActionPerformed(evt);
            }
        });
        jMenu3.add(jrbFast);

        buttonGroup1.add(jrbGrafite);
        jrbGrafite.setText("Grafite");
        jrbGrafite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbGrafiteActionPerformed(evt);
            }
        });
        jMenu3.add(jrbGrafite);

        buttonGroup1.add(jrbHiFi);
        jrbHiFi.setText("HiFi");
        jrbHiFi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbHiFiActionPerformed(evt);
            }
        });
        jMenu3.add(jrbHiFi);

        buttonGroup1.add(jrbLuna);
        jrbLuna.setText("Luna");
        jrbLuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbLunaActionPerformed(evt);
            }
        });
        jMenu3.add(jrbLuna);

        buttonGroup1.add(jrbMcWin);
        jrbMcWin.setSelected(true);
        jrbMcWin.setText("McWin");
        jrbMcWin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMcWinActionPerformed(evt);
            }
        });
        jMenu3.add(jrbMcWin);

        buttonGroup1.add(jrbMint);
        jrbMint.setText("Mint");
        jrbMint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMintActionPerformed(evt);
            }
        });
        jMenu3.add(jrbMint);

        buttonGroup1.add(jrbNoire);
        jrbNoire.setText("Noire");
        jrbNoire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbNoireActionPerformed(evt);
            }
        });
        jMenu3.add(jrbNoire);

        buttonGroup1.add(jrbSmar);
        jrbSmar.setText("Smart");
        jrbSmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbSmarActionPerformed(evt);
            }
        });
        jMenu3.add(jrbSmar);

        buttonGroup1.add(jrbTexture);
        jrbTexture.setText("Texture");
        jrbTexture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTextureActionPerformed(evt);
            }
        });
        jMenu3.add(jrbTexture);

        jmSettings.add(jMenu3);

        mnuBar.add(jmSettings);

        jmHelp.setMnemonic('h');
        jmHelp.setText("Help");

        jMenuItem2.setText("Contents");
        jmHelp.add(jMenuItem2);
        jmHelp.add(jSeparator2);

        jMenuItem3.setText("About");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jmHelp.add(jMenuItem3);

        mnuBar.add(jmHelp);

        jmUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/shutdown_icon32.png"))); // NOI18N
        jmUser.setText("Gerry Gohil, Jr.");

        jMenuItem4.setText("Log Out");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jmUser.add(jMenuItem4);

        jMenuItem5.setText("Exit");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jmUser.add(jMenuItem5);

        mnuBar.add(jmUser);

        setJMenuBar(mnuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void showLoading(String formName, String comment) {
        final dlgLoading loading = new dlgLoading(this, true, comment);
        SwingWorker<?, ?> worker = new SwingWorker<Void, Integer>() {
            @Override
            protected Void doInBackground() throws Exception {
                /////**********************LOGIN*******************//////
                if (formName.equals(GlobalVariables.FORM_LOGIN)) {
                    LoginForm();
                    ////////**************PATIENT FORM*****************//////    
                } else if (formName.equals(GlobalVariables.FORM_PATIENT)) {
                    viewListOfPatient(tbPatientList);
                } else if (formName.equals(GlobalVariables.FORM_EMPLOYEES)) {
                    viewListOfEmployee();
                } else if (formName.equals(GlobalVariables.FORM_LABORATORY)) {
                    viewListOfLaboratories();
                } else if (formName.equals(GlobalVariables.FORM_ONCHECKUP_PATIENT_CASHIER)) {
                    viewListOfOnCheckupPatients();
                } else if (formName.equals(GlobalVariables.FORM_DONECHECKUP_PATIENT_CASHIER)) {
                    viewListOfDoneCheckupPatients();
                    ////////**************MEDTECH FORM*****************//////    
                } else if (formName.equals(GlobalVariables.FORM_ONCHECKUP_MEDTECH)) {
                    viewListOfOnCheckupMedTech();
                } else if (formName.equals(GlobalVariables.FORM_DONECHECKUP_MEDTECH)) {
                    viewListOfDoneCheckupMedTech();
                    ////////**************CASHIER FORM*****************//////    
                } else if (formName.equals(GlobalVariables.FORM_SALESREPORT_CASHIER)) {
                    viewSalesReport();
                } else if (formName.equals(GlobalVariables.FORM_DAILY_SALESREPORT_CASHIER)) {
                    viewDailySalesReport();
                } else if (formName.equals(GlobalVariables.FORM_MONTHLY_SALESREPORT_CASHIER)) {
                    viewMonthlySalesReport();
                } else if (formName.equals(GlobalVariables.FORM_YEARLY_SALESREPORT_CASHIER)) {
                    viewYearlySalesReport();
                } else if (formName.equals(GlobalVariables.FORM_DISCOUNTREPORT_CASHIER)) {
                    viewDiscountReport();
                } else if (formName.equals(GlobalVariables.FORM_GENERATE_SALESREPORT_CASHIER)) {
                    GenerateSalesReport();
                    //////////***************PHYSICIAN****************/////
                } else if (formName.equals(GlobalVariables.FORM_ONCHECKUP_PHYSICIAN)) {
                    viewListOfOnCheckupPhysician();
                } else if (formName.equals(GlobalVariables.FORM_DONECHECKUP_PHYSICIAN)) {
                    viewListOfDoneCheckupPhysician();
                    //////////***************ADMINISTRATOR****************/////
                } else if (formName.equals(GlobalVariables.FORM_PATIENTLIST_ADMIN)) {
                    viewListOfPatient(tbPatientListAdmin);
                }

                return null;
            }

            protected void done() {
                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    JOptionPane.showMessageDialog(frmMain.this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
                }
                loading.setVisible(false);
                loading.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            }
        };
        worker.execute();
        loading.setVisible(true);
    }

    private void GenerateSalesReport() {

        btnGenerateSalesReport.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        HashMap hmap = new HashMap();
        JasperReport jasperReport;
        JasperPrint jasperPrint = null;
        String FILENAME = "SALES_REPORT";
        try {
            //SET PARAMETERS
            hmap.put("startDate", "From: " + dateFormater.format(dcStartDate.getDate()) + "       To: " + dateFormater.format(dcEndDate.getDate()));
            hmap.put("salesTitle", cmbLaboratoryListCashier.getSelectedItem().toString() + " SALES REPORT");
            hmap.put("totalSalesAmount", lblTotalAmountSales.getText());
            hmap.put("cashierName", jmUser.getText());
            hmap.put("position", lblPosition.getText());

            //SET BEAN DATA SOURCE
            DataBeanList dataBeanList = new DataBeanList();
            ArrayList<SalesReportBean> dataList = dataBeanList.getDataBeanSalesReport(tbSalesReportCashier);
            JRBeanCollectionDataSource beanColDataSource = new JRBeanCollectionDataSource(dataList);
            //COMPILE JASPER DESIGN, FILL AND VIEW
            jasperReport = JasperCompileManager.compileReport("./src/jrxmls/Sales Report.jrxml");//template with out school name above
            jasperPrint = JasperFillManager.fillReport(jasperReport, hmap, beanColDataSource);
            JasperExportManager.exportReportToPdfFile(jasperPrint, "./src/pdf/" + FILENAME.replaceAll(" ", "_") + ".pdf");
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (jasperPrint != null) {
                //Settings.SaveLog("" + ID, "Generated Grade Sheet " + FILENAME);
                try {
                    //ToastDialog.makeToast(this, "Please wait, an Excel Application will open the exported list after a few seconds!", 5);
                    Runtime.getRuntime().exec("cmd.exe /c start ./src/pdf/" + FILENAME.replaceAll(" ", "_") + ".pdf");
                } catch (IOException ex) {
                }
            }
        }
        btnGenerateSalesReport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }

    private void viewDiscountReport() {
        double totalAmount = 0.00;
        DBQueries db = new DBQueries();
        int row = 0;
        Date startDate = dcStartDateDiscount.getDate();
        Date endDate = dcEndDateDiscount.getDate();
        String filter = cmbLaboratoryListCashierDiscount.getSelectedItem().toString();
        DefaultTableModel model = (DefaultTableModel) tbSalesReportCashierDiscount.getModel();
        try {
            db.ConnectToDatabase();
            db.querySales(startDate, endDate, filter);
            CommonMethod.clearTable(tbSalesReportCashierDiscount);
            while (db.rs.next()) {
                String extension = db.rs.getString("extension").equals("null") ? "" : db.rs.getString("extension");
                totalAmount += db.rs.getDouble("amount");
                model.insertRow(row++, new Object[]{row, CommonMethod.convertPatientIDFromNumberToString(db.rs.getString("patient_id")), db.rs.getString("lastname"), db.rs.getString("firstname") + " " + extension, db.rs.getString("middlename"), db.rs.getString("checkup_date"), db.rs.getString("lab_name"), db.rs.getString("amount")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
                btnGenerateDiscountReport.setEnabled(false);
            } else {
                btnGenerateDiscountReport.setEnabled(true);
            }
            lblTotalAmountSalesDiscount.setText(formatter.format(totalAmount));
            //byte[] bytes = null;

        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (db.con != null) {
                    db.closeConnection();
                }
            } catch (Exception e) {
            }
        }
    }

    private void viewSalesReport() {
        double totalAmount = 0.00;
        DBQueries db = new DBQueries();
        int row = 0;
        Date startDate = dcStartDate.getDate();
        Date endDate = dcEndDate.getDate();
        String filter = cmbLaboratoryListCashier.getSelectedItem().toString();
        DefaultTableModel model = (DefaultTableModel) tbSalesReportCashier.getModel();
        try {
            db.ConnectToDatabase();
            db.querySales(startDate, endDate, filter);
            CommonMethod.clearTable(tbSalesReportCashier);
            while (db.rs.next()) {
                String extension = db.rs.getString("extension").equals("null") ? "" : db.rs.getString("extension");
                totalAmount += db.rs.getDouble("amount");
                model.insertRow(row++, new Object[]{row, CommonMethod.convertPatientIDFromNumberToString(db.rs.getString("patient_id")), db.rs.getString("lastname"), db.rs.getString("firstname") + " " + extension, db.rs.getString("middlename"), db.rs.getString("checkup_date"), db.rs.getString("lab_name"), db.rs.getString("amount")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
                btnGenerateSalesReport.setEnabled(false);
                btnGenerateSalesChart.setEnabled(false);
            } else {
                btnGenerateSalesReport.setEnabled(true);
                btnGenerateSalesChart.setEnabled(true);
            }
            lblTotalAmountSales.setText(formatter.format(totalAmount));
            //byte[] bytes = null;

        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (db.con != null) {
                    db.closeConnection();
                }
            } catch (Exception e) {
            }
        }
    }

    private void viewMonthlySalesReport() {
        double totalAmount = 0.00;
        DBQueries db = new DBQueries();
        int row = 0;
        int startMonth = mcStartMonth.getMonth() + 1;
        int endMonth = mcEndMonth.getMonth() + 1;
        int yearOfTheMonth = ycYearByMonth.getYear();
        String labname = cmbLaboratoryListCashierByMonth.getSelectedItem().toString();
        DefaultTableModel model = (DefaultTableModel) tbSalesReportCashier.getModel();
        try {
            db.ConnectToDatabase();
            db.queryMonthlySales(startMonth, endMonth, yearOfTheMonth, labname);
            CommonMethod.clearTable(tbSalesReportCashier);
            while (db.rs.next()) {
                totalAmount += db.rs.getDouble("amount");
                model.insertRow(row++, new Object[]{row, CommonMethod.Month(db.rs.getInt("month")), db.rs.getString("lab_name"), db.rs.getString("amount")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
                btnGenerateSalesReport.setEnabled(false);
                btnGenerateSalesChart.setEnabled(false);
            } else {
                btnGenerateSalesReport.setEnabled(true);
                btnGenerateSalesChart.setEnabled(true);
            }
            lblTotalAmountSales.setText(formatter.format(totalAmount));
            //byte[] bytes = null;

        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (db.con != null) {
                    db.closeConnection();
                }
            } catch (Exception e) {
            }
        }
    }

    private void viewDailySalesReport() {
        double totalAmount = 0.00;
        DBQueries db = new DBQueries();
        int row = 0;
        Date selectedDate = dcDateDaily.getDate();
        String labname = cmbLaboratoryListCashierByDaily.getSelectedItem().toString();
        DefaultTableModel model = (DefaultTableModel) tbSalesReportCashier.getModel();
        try {
            db.ConnectToDatabase();
            db.queryDailySales(selectedDate, labname);
            CommonMethod.clearTable(tbSalesReportCashier);
            while (db.rs.next()) {
                totalAmount += db.rs.getDouble("amount");
                model.insertRow(row++, new Object[]{row, db.rs.getString("lab_name"), db.rs.getString("amount")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
                btnGenerateSalesReport.setEnabled(false);
                btnGenerateSalesChart.setEnabled(false);
            } else {
                btnGenerateSalesReport.setEnabled(true);
                if (labname.startsWith("ALL")) {
                    btnGenerateSalesChart.setEnabled(true);
                } else {
                    btnGenerateSalesChart.setEnabled(false);
                }
            }
            lblTotalAmountSales.setText(formatter.format(totalAmount));
            //byte[] bytes = null;

        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (db.con != null) {
                    db.closeConnection();
                }
            } catch (Exception e) {
            }
        }
    }

    private void viewYearlySalesReport() {
        double totalAmount = 0.00;
        DBQueries db = new DBQueries();
        int row = 0;
        int startYear = ycStartYear.getYear();
        int endYear = ycEndYear.getYear();
        String labname = cmbLaboratoryListCashierByYear.getSelectedItem().toString();
        DefaultTableModel model = (DefaultTableModel) tbSalesReportCashier.getModel();
        try {
            db.ConnectToDatabase();
            db.queryYearlySales(startYear, endYear, labname);
            CommonMethod.clearTable(tbSalesReportCashier);
            while (db.rs.next()) {
                totalAmount += db.rs.getDouble("amount");
                model.insertRow(row++, new Object[]{row, db.rs.getString("year"), db.rs.getString("lab_name"), db.rs.getString("amount")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
                btnGenerateSalesReport.setEnabled(false);
                btnGenerateSalesChart.setEnabled(false);
            } else {
                btnGenerateSalesReport.setEnabled(true);
                btnGenerateSalesChart.setEnabled(true);
            }
            lblTotalAmountSales.setText(formatter.format(totalAmount));
            //byte[] bytes = null;

        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (db.con != null) {
                    db.closeConnection();
                }
            } catch (Exception e) {
            }
        }
    }

    private void LoginForm() {

        DBQueries db = new DBQueries();
        try {
            //connect to database
            db.ConnectToDatabase();
            db.checkLoginAccount(txtUsername.getText().trim(), txtPassword.getText().trim());
            if (db.rs.next()) {
                USERNAME = txtUsername.getText().trim();
                SYSTEMROLE = db.rs.getString("role");
                EMPLOYEEID = db.rs.getString("employee_id");
                //check if account is disabled or deactivated
                if (db.rs.getString("status").equals(GlobalVariables.ACCOUNT_ACTIVE)) {
                    pnlCenter.removeAll();
                    pnlCenter.repaint();
                    pnlCenter.revalidate();
                    pnlCenter.add(pnlMain);
                    pnlCenter.repaint();
                    pnlCenter.revalidate();
                    pnlMain2CenterFinal.removeAll();
                    pnlMain2CenterFinal.repaint();
                    pnlMain2CenterFinal.revalidate();
                    pnlMain2CenterFinal.add(pnlWelcome);
                    pnlMain2CenterFinal.repaint();
                    pnlMain2CenterFinal.revalidate();
                    //show menubar
                    mnuBar.setVisible(true);
                    //hide submenu
                    pnlSubMenuTitle.setVisible(false);
                    pnlSubMenu.setVisible(false);
                    LoginYes();
                    dlgLoading.lblOutput.setText("Loading User's Information...");
                    lblPosition.setText(db.rs.getString("role"));
                    CommonMethod.SaveLog("" + USERNAME, "Login to the System");
                    //check the roleaname
                    showMainMenu(db.rs.getString("role"));
                    //showImage
                    showEmployeeImage(db.rs.getString("employee_id"));
                } else if (db.rs.getString("status").equals(GlobalVariables.ACCOUNT_RESET)) {
                    pnlCenter.removeAll();
                    pnlCenter.repaint();
                    pnlCenter.revalidate();
                    pnlCenter.add(pnlResetPassword);
                    pnlCenter.repaint();
                    pnlCenter.revalidate();
                } else {
                    Toolkit.getDefaultToolkit().beep();
                    lblError.setVisible(true);
                    lblError.setText("Your account is already DEACTIVATED!");
                    //JOptionPane.showMessageDialog(null, "Your account is already DEACTIVATED! Please contact the System Administrator for assistance.", "Error", JOptionPane.ERROR_MESSAGE);
                    txtPassword.selectAll();
                    txtPassword.requestFocus();
                }
            } else {
                Toolkit.getDefaultToolkit().beep();
                lblError.setVisible(true);
                lblError.setText("Incorrect Username or Password!");
                //JOptionPane.showMessageDialog(null, "Incorrect Username or Password!", "Error", JOptionPane.ERROR_MESSAGE);
                txtPassword.selectAll();
                txtPassword.requestFocus();
            }

        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            db.closeConnection();
            //animateDeadline();//animate dead line menu
        }

    }

    private void SuccessfulLogin() {

    }

    private void showMainMenu(String rolename) {
        if (rolename.equals(GlobalVariables.ROLE_ADMINISTRATOR)) {
            pnlMainMenuButtons.removeAll();
            pnlMainMenuButtons.repaint();
            pnlMainMenuButtons.revalidate();
            pnlMainMenuButtons.add(pnlMainMenuAdministrator);
            //pnlMainMenuButtons.setPreferredSize(new Dimension(100, 120));
            pnlMainMenuButtons.repaint();
            pnlMainMenuButtons.revalidate();
            //menubar
            jmAdmin.setVisible(true);
        } else if (rolename.equals(GlobalVariables.ROLE_CASHIER)) {

            pnlMainMenuButtons.removeAll();
            pnlMainMenuButtons.repaint();
            pnlMainMenuButtons.revalidate();
            pnlMainMenuButtons.add(pnlMainMenuCashier);
            //pnlMainMenuButtons.setPreferredSize(new Dimension(100, 120));
            pnlMainMenuButtons.repaint();
            pnlMainMenuButtons.revalidate();
            //menubar
            jmAdmin.setVisible(false);
        } else if (rolename.equals(GlobalVariables.ROLE_MEDTECH)) {
            //menuMain
            pnlMainMenuButtons.removeAll();
            pnlMainMenuButtons.repaint();
            pnlMainMenuButtons.revalidate();
            pnlMainMenuButtons.add(pnlMainMenuMedTech);
            pnlMainMenuButtons.repaint();
            pnlMainMenuButtons.revalidate();
            //toolbar
            pnlMainToolbar.removeAll();
            pnlMainToolbar.repaint();
            pnlMainToolbar.revalidate();
            pnlMainToolbar.add(tbMedTech);
            pnlMainToolbar.repaint();
            pnlMainToolbar.revalidate();
            //menubar
            jmAdmin.setVisible(false);
        } else if (rolename.equals(GlobalVariables.ROLE_PHYSICIAN)) {
            //menuMain
            pnlMainMenuButtons.removeAll();
            pnlMainMenuButtons.repaint();
            pnlMainMenuButtons.revalidate();
            pnlMainMenuButtons.add(pnlMainMenuPhysician);
            pnlMainMenuButtons.repaint();
            pnlMainMenuButtons.revalidate();
            //toolbar
            pnlMainToolbar.removeAll();
            pnlMainToolbar.repaint();
            pnlMainToolbar.revalidate();
            pnlMainToolbar.add(tbMedTech);
            pnlMainToolbar.repaint();
            pnlMainToolbar.revalidate();
            //menubar
            jmAdmin.setVisible(false);
        } else {//phlebotomist

            pnlMainMenuButtons.removeAll();
            pnlMainMenuButtons.repaint();
            pnlMainMenuButtons.revalidate();
            pnlMainMenuButtons.add(pnlMainMenuPhlebotomist);
            //pnlMainMenuButtons.setPreferredSi ze(new Dimension(100, 120));
            pnlMainMenuButtons.repaint();
            pnlMainMenuButtons.revalidate();
            //menubar
            jmAdmin.setVisible(false);
        }
    }

    private void showEmployeeImage(String ID) {
        DBQueries db = new DBQueries();
        int width = lblPicture.getWidth();
        int height = lblPicture.getHeight();
        try {
            db.ConnectToDatabase();
            db.queryImageOfEmployee(ID);
            //byte[] bytes = null;
            if (db.rs.next()) {
                System.out.println("images");
                //bytes = db.rs.getBytes("image_ins");
                Image image = getToolkit().createImage(db.rs.getBytes("image"));
                Image newimg = image.getScaledInstance(width, height, java.awt.Image.SCALE_SMOOTH);
                lblPicture.setText("");
                lblPicture.setIcon(new ImageIcon(newimg));
            } else {
                System.out.println("images1");
                ImageIcon image = new ImageIcon("./src/images/noimage.png");
                Image img = image.getImage();
                Image newimg = img.getScaledInstance(width, height, java.awt.Image.SCALE_SMOOTH);
                lblPicture.setIcon(new ImageIcon(img)); // NOI18N
            }
            /*
            if (bytes != null) {
                Image image = getToolkit().createImage(bytes);
                Image newimg = image.getScaledInstance(width, height, java.awt.Image.SCALE_SMOOTH);
                lblPicture.setText("");
                lblPicture.setIcon(new ImageIcon(newimg));
            } else {
                ImageIcon image = new ImageIcon("./src/Images/noimage.png");
                Image img = image.getImage();
                Image newimg = img.getScaledInstance(width, height, java.awt.Image.SCALE_SMOOTH);
                lblPicture.setIcon(new ImageIcon(img)); // NOI18N
            }
             */
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (db.con != null) {
                    db.closeConnection();
                }
            } catch (Exception e) {
            }
        }
    }

    private void viewListOfDoneCheckupMedTech() {
        DBQueries db = new DBQueries();
        DefaultTableModel model = (DefaultTableModel) tbMedTechDoneCheckup.getModel();
        int row = 0;
        try {
            db.ConnectToDatabase();
            CommonMethod.clearTable(tbMedTechDoneCheckup);
            db.queryMedTechListOfDoneCheckupPatient(frmMain.USERNAME);
            while (db.rs.next()) {
                String conv = CommonMethod.convertPatientIDFromNumberToString(db.rs.getString("patient_id"));
                model.insertRow(row++, new Object[]{row, conv, db.rs.getString("lastname"), db.rs.getString("firstname") + " " + db.rs.getString("extension"), db.rs.getString("middlename"), db.rs.getString("checkuplaboratories_id"), db.rs.getString("lab_categoryname"), db.rs.getString("lab_name"), db.rs.getString("checkup_date")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
            }
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }

    private void viewListOfOnCheckupMedTech() {
        DBQueries db = new DBQueries();
        DefaultTableModel model = (DefaultTableModel) tbMedTechOnCheckUp.getModel();
        int row = 0;
        try {
            db.ConnectToDatabase();
            CommonMethod.clearTable(tbMedTechOnCheckUp);
            db.queryMedTechListOfOnCheckupPatient();
            while (db.rs.next()) {
                String conv = CommonMethod.convertPatientIDFromNumberToString(db.rs.getString("patient_id"));
                model.insertRow(row++, new Object[]{row, conv, db.rs.getString("lastname"), db.rs.getString("firstname") + " " + db.rs.getString("extension"), db.rs.getString("middlename"), db.rs.getString("checkuplaboratories_id"), db.rs.getString("lab_categoryname"), db.rs.getString("lab_name"), db.rs.getString("checkup_date")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "", "", "", "<html><b color='red'>NO PATIENT FOUND...</b></html>"});
            }
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }

    private void viewListOfOnCheckupPhysician() {
        DBQueries db = new DBQueries();
        DefaultTableModel model = (DefaultTableModel) tbPhysicianOnCheckUp.getModel();
        int row = 0;
        try {
            db.ConnectToDatabase();
            CommonMethod.clearTable(tbPhysicianOnCheckUp);
            db.queryPhysicianListOfOnCheckupPatient();
            while (db.rs.next()) {
                String conv = CommonMethod.convertPatientIDFromNumberToString(db.rs.getString("patient_id"));
                model.insertRow(row++, new Object[]{row, conv, db.rs.getString("lastname"), db.rs.getString("firstname") + " " + db.rs.getString("extension"), db.rs.getString("middlename"), db.rs.getString("checkuplaboratories_id"), db.rs.getString("lab_categoryname"), db.rs.getString("lab_name"), db.rs.getString("checkup_date")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "", "", "", "<html><b color='red'>NO PATIENT FOUND...</b></html>"});
            }
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }

    private void viewListOfDoneCheckupPhysician() {
        DBQueries db = new DBQueries();
        DefaultTableModel model = (DefaultTableModel) tbPhysicianDoneCheckup.getModel();
        int row = 0;
        try {
            db.ConnectToDatabase();
            CommonMethod.clearTable(tbPhysicianDoneCheckup);
            db.queryMedTechListOfDoneCheckupPatient(frmMain.USERNAME);
            while (db.rs.next()) {
                String conv = CommonMethod.convertPatientIDFromNumberToString(db.rs.getString("patient_id"));
                model.insertRow(row++, new Object[]{row, conv, db.rs.getString("lastname"), db.rs.getString("firstname") + " " + db.rs.getString("extension"), db.rs.getString("middlename"), db.rs.getString("checkuplaboratories_id"), db.rs.getString("lab_categoryname"), db.rs.getString("lab_name"), db.rs.getString("checkup_date")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
            }
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }

    private void viewListOfPatient(JTable table) {
        DBQueries db = new DBQueries();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int row = 0;
        try {
            db.ConnectToDatabase();
            CommonMethod.clearTable(table);
            db.queryPatientList();
            while (db.rs.next()) {
                String conv = CommonMethod.convertPatientIDFromNumberToString(db.rs.getString("patient_id"));
                model.insertRow(row++, new Object[]{row, conv, db.rs.getString("lastname"), db.rs.getString("firstname") + " " + db.rs.getString("extension"), db.rs.getString("middlename"), db.rs.getString("gender"), db.rs.getString("birth_date"), db.rs.getString("age"), db.rs.getString("cellphone_no"), db.rs.getString("address")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "", "", "", "", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
            }
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }

    private void viewListOfEmployee() {
        DBQueries db = new DBQueries();
        DefaultTableModel model = (DefaultTableModel) tbEmployee.getModel();
        int row = 0;
        try {
            db.ConnectToDatabase();
            CommonMethod.clearTable(tbEmployee);
            db.queryEmployeeList();
            while (db.rs.next()) {
                model.insertRow(row++, new Object[]{db.rs.getString("employee_id"), db.rs.getString("emp_lastname"), db.rs.getString("emp_firstname") + " " + db.rs.getString("emp_extension"), db.rs.getString("emp_middlename"), db.rs.getString("emp_gender"), db.rs.getString("emp_birthdate"), db.rs.getString("emp_address"), db.rs.getString("position_name"), db.rs.getString("license_no"), db.rs.getString("emp_cellphoneno"), db.rs.getString("emp_status")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
            }
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }

    private void viewListOfLaboratories() {
        DBQueries db = new DBQueries();
        DefaultTableModel model = (DefaultTableModel) tbLaboratories.getModel();
        int row = 0;
        try {
            db.ConnectToDatabase();
            CommonMethod.clearTable(tbLaboratories);
            db.queryLaboratoryList();
            while (db.rs.next()) {
                model.insertRow(row++, new Object[]{db.rs.getString("lab_id"), db.rs.getString("lab_categoryname"), db.rs.getString("lab_name"), db.rs.getString("lab_amount"), db.rs.getString("status"), db.rs.getBoolean("medtech_view") ? "DISPLAY" : "HIDE"});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
            }
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }

    private void viewListOfOnCheckupPatients() {
        DBQueries db = new DBQueries();
        DefaultTableModel model = (DefaultTableModel) tbPatientOnCheckUpList.getModel();
        int row = 0;
        try {
            db.ConnectToDatabase();
            CommonMethod.clearTable(tbPatientOnCheckUpList);
            db.queryPatientOncheckUpList();
            while (db.rs.next()) {
                String conv = CommonMethod.convertPatientIDFromNumberToString(db.rs.getString("patient_id"));
                model.insertRow(row++, new Object[]{row, conv, db.rs.getString("lastname"), db.rs.getString("firstname") + " " + db.rs.getString("extension"), db.rs.getString("middlename"), db.rs.getString("gender"), db.rs.getString("birth_date"), db.rs.getString("age"), db.rs.getString("cellphone_no"), db.rs.getString("address"), db.rs.getString("checkup_date")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "", "", "", "", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
            }
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }

    private void viewListOfDoneCheckupPatients() {
        DBQueries db = new DBQueries();
        DefaultTableModel model = (DefaultTableModel) tbPatientDoneCheckUpList.getModel();
        int row = 0;
        try {
            db.ConnectToDatabase();
            CommonMethod.clearTable(tbPatientDoneCheckUpList);
            db.queryPatientDoneCheckUpList();
            while (db.rs.next()) {
                String conv = CommonMethod.convertPatientIDFromNumberToString(db.rs.getString("patient_id"));
                model.insertRow(row++, new Object[]{row, conv, db.rs.getString("lastname"), db.rs.getString("firstname") + " " + db.rs.getString("extension"), db.rs.getString("middlename"), db.rs.getString("gender"), db.rs.getString("birth_date"), db.rs.getString("age"), db.rs.getString("cellphone_no"), db.rs.getString("address"), db.rs.getString("checkup_date")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "", "", "", "", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
            }
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }

    private void SystemLogin() {
        String USERNAME = txtUsername.getText().trim();
        String PASSWORD = txtPassword.getText().trim();

        if (USERNAME.equals("")) {
            Toolkit.getDefaultToolkit().beep();
            lblError.setVisible(true);
            lblError.setText("Please enter your username!");
            //JOptionPane.showMessageDialog(null, "Please enter username!", "Error", JOptionPane.ERROR_MESSAGE);
            txtUsername.requestFocus();
            return;
        }
        if (PASSWORD.equals("")) {
            Toolkit.getDefaultToolkit().beep();
            lblError.setVisible(true);
            lblError.setText("Please enter your password!");
            //JOptionPane.showMessageDialog(null, "Please enter password!", "Error", JOptionPane.ERROR_MESSAGE);
            txtPassword.requestFocus();
            return;
        }
        showLoading(GlobalVariables.FORM_LOGIN, "Authenticating Account....");

    }
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        SystemLogin();
    }//GEN-LAST:event_btnLoginActionPerformed

    private void jrbAcrylActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAcrylActionPerformed
        try {

            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.acryl.AcrylLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");

            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
            //Update the component tree - associate the look and feel with the given frame.
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(new Color(68, 135, 98));
            lblPosition.setBackground(new Color(68, 135, 98));
            lblSubMenuTitle.setBackground(new Color(68, 135, 98));
            lblMainMenuTitle.setBackground(new Color(68, 135, 98));
            // setTheme(String themeName, String licenseKey, String logoString)
            //com.jtattoo.plaf.acryl.AcrylLookAndFeel.setTheme("", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // change title color

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbAcrylActionPerformed

    private void jrbAeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAeroActionPerformed
        try {

            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.aero.AeroLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");

            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.aero.AeroLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(new Color(150, 211, 176));
            lblPosition.setBackground(new Color(150, 211, 176));
            lblSubMenuTitle.setBackground(new Color(150, 211, 176));
            lblMainMenuTitle.setBackground(new Color(150, 211, 176));
            // change title color
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbAeroActionPerformed

    private void jrbAluminumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAluminumActionPerformed
        try {
            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.aluminium.AluminiumLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.aluminium.AluminiumLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(new Color(202, 208, 172));
            lblPosition.setBackground(new Color(202, 208, 172));
            lblSubMenuTitle.setBackground(new Color(202, 208, 172));
            lblMainMenuTitle.setBackground(new Color(202, 208, 172));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbAluminumActionPerformed
    private void defaultTheme() {
        try {
            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.mcwin.McWinLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    private void jrbBernsteinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbBernsteinActionPerformed
        try {

            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.bernstein.BernsteinLookAndFeel.setTheme("Black", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");

            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.bernstein.BernsteinLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(new Color(249, 220, 57));
            lblPosition.setBackground(new Color(249, 220, 57));
            lblSubMenuTitle.setBackground(new Color(249, 220, 57));
            lblMainMenuTitle.setBackground(new Color(249, 220, 57));
            // start the demo application
            // new SimpleThemesDemo();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbBernsteinActionPerformed

    private void jrbFastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbFastActionPerformed
        try {
            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.fast.FastLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.fast.FastLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(new Color(228, 234, 232));
            lblPosition.setBackground(new Color(228, 234, 232));
            lblSubMenuTitle.setBackground(new Color(228, 234, 232));
            lblMainMenuTitle.setBackground(new Color(228, 234, 232));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbFastActionPerformed

    private void jrbGrafiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbGrafiteActionPerformed
        try {
            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.graphite.GraphiteLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.graphite.GraphiteLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(new Color(249, 195, 67));
            lblPosition.setBackground(new Color(249, 195, 67));
            lblSubMenuTitle.setBackground(new Color(249, 195, 67));
            lblMainMenuTitle.setBackground(new Color(249, 195, 67));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbGrafiteActionPerformed

    private void jrbHiFiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbHiFiActionPerformed
        try {
            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.hifi.HiFiLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(new Color(92, 92, 92));
            lblPosition.setBackground(new Color(92, 92, 92));
            lblSubMenuTitle.setBackground(new Color(92, 92, 92));
            lblMainMenuTitle.setBackground(new Color(92, 92, 92));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbHiFiActionPerformed

    private void jrbLunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbLunaActionPerformed
        try {
            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.luna.LunaLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.luna.LunaLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(new Color(202, 237, 255));
            lblPosition.setBackground(new Color(202, 237, 255));
            lblSubMenuTitle.setBackground(new Color(202, 237, 255));
            lblMainMenuTitle.setBackground(new Color(202, 237, 255));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbLunaActionPerformed

    private void jrbMcWinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMcWinActionPerformed
        try {
            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.mcwin.McWinLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(new Color(202, 237, 255));
            lblPosition.setBackground(new Color(202, 237, 255));
            lblSubMenuTitle.setBackground(new Color(202, 237, 255));
            lblMainMenuTitle.setBackground(new Color(202, 237, 255));
            //[223,240,208]
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbMcWinActionPerformed

    private void jrbMintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMintActionPerformed
        try {
            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.mint.MintLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.mint.MintLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(new Color(220, 228, 228));
            lblPosition.setBackground(new Color(220, 228, 228));
            lblSubMenuTitle.setBackground(new Color(220, 228, 228));
            lblMainMenuTitle.setBackground(new Color(220, 228, 228));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbMintActionPerformed

    private void jrbNoireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbNoireActionPerformed
        try {
            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.noire.NoireLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.noire.NoireLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(new Color(196, 137, 0));
            lblPosition.setBackground(new Color(196, 137, 0));
            lblSubMenuTitle.setBackground(new Color(196, 137, 0));
            lblMainMenuTitle.setBackground(new Color(196, 137, 0));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbNoireActionPerformed

    private void jrbSmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbSmarActionPerformed
        try {
            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.smart.SmartLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.smart.SmartLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(new Color(160, 210, 170));
            lblPosition.setBackground(new Color(160, 210, 170));
            lblSubMenuTitle.setBackground(new Color(160, 210, 170));
            lblMainMenuTitle.setBackground(new Color(160, 210, 170));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbSmarActionPerformed

    private void jrbTextureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTextureActionPerformed
        try {
            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.texture.TextureLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.texture.TextureLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(new Color(183, 170, 154));
            lblPosition.setBackground(new Color(183, 170, 154));
            lblSubMenuTitle.setBackground(new Color(183, 170, 154));
            lblMainMenuTitle.setBackground(new Color(183, 170, 154));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbTextureActionPerformed
    private void setThemes(String packageName, Color titleColor) {
        try {
            // setTheme(String themeName, String licenseKey, String logoString)
            com.jtattoo.plaf.texture.TextureLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel(packageName);
            SwingUtilities.updateComponentTreeUI(this);
            lblMainPanelTitle.setBackground(titleColor);
            lblPosition.setBackground(titleColor);
            lblSubMenuTitle.setBackground(titleColor);
            lblMainMenuTitle.setBackground(titleColor);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    private void btnUnlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnlockActionPerformed
        pnlCenter.removeAll();
        pnlCenter.repaint();
        pnlCenter.revalidate();
        pnlCenter.add(pnlMain);
        pnlCenter.repaint();
        pnlCenter.revalidate();
        mnuBar.setVisible(true);
        pnlStatusBar.setVisible(true);
        startSession();
    }//GEN-LAST:event_btnUnlockActionPerformed

    private void ckbShowPasswordItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckbShowPasswordItemStateChanged
        if (ckbShowPassword.isSelected()) {
            txtPassword.setEchoChar((char) 0);
        } else {
            txtPassword.setEchoChar('*');
        }
    }//GEN-LAST:event_ckbShowPasswordItemStateChanged

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtUsername.setText("");
        txtPassword.setText("");
        lblError.setVisible(false);
        txtUsername.requestFocus();
    }//GEN-LAST:event_btnClearActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        dlgAbout about = new dlgAbout(this, true);
        about.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Do you want to Exit the System?", "CONFIRM", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (confirm == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed
    private void LogOut() {

        pnlCenter.removeAll();
        pnlCenter.repaint();
        pnlCenter.revalidate();
        pnlCenter.add(pnlLogin);
        pnlCenter.repaint();
        pnlCenter.revalidate();
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlWelcome);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        txtUsername.setText("");
        txtPassword.setText("");
        txtUsername.requestFocus();
        mnuBar.setVisible(false);
        //timee.start();
        //loop = 0;
        //delete directory of excel
        //deleteDirectoryListOfExcelFiles();
        //deleteDirectoryListOfDocsFiles();
        //set the default image
        ImageIcon image = new ImageIcon("./src/images/noimage.png");
        Image img = image.getImage();
        Image newimg = img.getScaledInstance(lblPicture.getWidth(), lblPicture.getHeight(), java.awt.Image.SCALE_SMOOTH);
        lblPicture.setIcon(new ImageIcon(img)); // NOI18N
        ckbShowPassword.setSelected(false);
        //set the logout into true, to indicate that the user has log out from the system
        isLogOut = true;
        //save log
        CommonMethod.SaveLog("" + USERNAME, "Logout from the System");
        //timer2.stop();
        //loop2=0;

    }

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        int CONFIRM = JOptionPane.showConfirmDialog(this, "Do you want to logout?", "CONFIRM", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (CONFIRM == JOptionPane.YES_OPTION) {
            LogOut();
            LoginNo();
        }


    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void btnPatientCashierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientCashierActionPerformed
        pnlSubMenu.removeAll();
        pnlSubMenu.repaint();
        pnlSubMenu.revalidate();
        pnlSubMenu.add(pnlSubMenuPatientCashier);
        pnlSubMenu.setPreferredSize(new Dimension(100, 160));
        pnlSubMenu.repaint();
        pnlSubMenu.revalidate();
        lblSubMenuTitle.setText("Patient Menu");
        pnlSubMenuTitle.setVisible(true);
        pnlSubMenu.setVisible(true);
    }//GEN-LAST:event_btnPatientCashierActionPerformed

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        pnlSearchEngine.removeAll();
        pnlSearchEngine.repaint();
        pnlSearchEngine.revalidate();
        pnlSearchEngine.add(pnlSearchAdvanced);
        pnlSearchEngine.repaint();
        pnlSearchEngine.revalidate();
        txtLastname.requestFocus();
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        pnlSearchEngine.removeAll();
        pnlSearchEngine.repaint();
        pnlSearchEngine.revalidate();
        pnlSearchEngine.add(pnlSearchByPatientID);
        pnlSearchEngine.repaint();
        pnlSearchEngine.revalidate();
        txtPatiendID.requestFocus();
    }//GEN-LAST:event_jLabel21MouseClicked

    private void btnViewPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientActionPerformed
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlCashierPatient);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        lblMainPanelTitle.setText("  PATIENT LIST");
        showLoading(GlobalVariables.FORM_PATIENT, "Refreshing Patient Records....");
    }//GEN-LAST:event_btnViewPatientActionPerformed

    private void jLabel15MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel15MouseEntered

    private void btnNewPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewPatientActionPerformed
        dlgPatientNew patient = new dlgPatientNew(this, true);
        SwingUtils.fadeIn(patient);
        //patient.setVisible(true);
    }//GEN-LAST:event_btnNewPatientActionPerformed

    private void btnEditInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditInfoActionPerformed
        int rowSelected = tbPatientList.getSelectedRow();
        if (rowSelected == -1) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No row selected. Please select a patient name from the table!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String patientID = tbPatientList.getValueAt(rowSelected, 1).toString();
        if (!patientID.equals("")) {
            dlgPatientUpdate update = new dlgPatientUpdate(this, true, patientID);
            SwingUtils.fadeIn(update);
        }

    }//GEN-LAST:event_btnEditInfoActionPerformed

    private void txtPatiendIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatiendIDKeyReleased
        String searchpatientid = txtPatiendID.getText().trim();
        //  if (!searchpatientid.equals("")) {
        DBQueries db = new DBQueries();
        DefaultTableModel model = (DefaultTableModel) tbPatientList.getModel();
        int row = 0;
        try {
            db.ConnectToDatabase();
            CommonMethod.clearTable(tbPatientList);
            db.searchPatientInformationID(searchpatientid);
            while (db.rs.next()) {
                model.insertRow(row++, new Object[]{row, CommonMethod.convertPatientIDFromNumberToString(db.rs.getString("patient_id")), db.rs.getString("lastname"), db.rs.getString("firstname") + " " + db.rs.getString("extension"), db.rs.getString("middlename"), db.rs.getString("gender"), db.rs.getString("birth_date"), db.rs.getString("age"), db.rs.getString("cellphone_no"), db.rs.getString("address")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "", "", "", "", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
            }

        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }//GEN-LAST:event_txtPatiendIDKeyReleased

    private void txtLastnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastnameKeyTyped
        DBQueries db = new DBQueries();
        DefaultTableModel model = (DefaultTableModel) tbPatientList.getModel();
        int row = 0;
        try {
            db.ConnectToDatabase();
            String searchlastname = txtLastname.getText().trim();
            CommonMethod.clearTable(tbPatientList);
            db.searchPatientLastname(searchlastname);
            while (db.rs.next()) {
                model.insertRow(row++, new Object[]{row, CommonMethod.convertPatientIDFromNumberToString(db.rs.getString("patient_id")), db.rs.getString("lastname"), db.rs.getString("firstname") + " " + db.rs.getString("extension"), db.rs.getString("middlename"), db.rs.getString("gender"), db.rs.getString("birth_date"), db.rs.getString("age"), db.rs.getString("cellphone_no"), db.rs.getString("address")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "", "", "", "", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
            }

        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }//GEN-LAST:event_txtLastnameKeyTyped

    private void txtFirstnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstnameKeyTyped
        DBQueries db = new DBQueries();
        DefaultTableModel model = (DefaultTableModel) tbPatientList.getModel();
        int row = 0;
        try {
            db.ConnectToDatabase();
            String searchlastname = txtLastname.getText().trim();
            String searchFirstname = txtFirstname.getText().trim();
            CommonMethod.clearTable(tbPatientList);
            db.searchPatientFirstnameAndLastname(searchFirstname, searchlastname);
            while (db.rs.next()) {
                model.insertRow(row++, new Object[]{row, CommonMethod.convertPatientIDFromNumberToString(db.rs.getString("patient_id")), db.rs.getString("lastname"), db.rs.getString("firstname") + " " + db.rs.getString("extension"), db.rs.getString("middlename"), db.rs.getString("gender"), db.rs.getString("birth_date"), db.rs.getString("age"), db.rs.getString("cellphone_no"), db.rs.getString("address")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "", "", "", "", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
            }

        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }//GEN-LAST:event_txtFirstnameKeyTyped

    private void txtMiddlenameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMiddlenameKeyTyped
        DBQueries db = new DBQueries();
        DefaultTableModel model = (DefaultTableModel) tbPatientList.getModel();
        int row = 0;
        try {
            db.ConnectToDatabase();
            String searchlastname = txtLastname.getText().trim();
            String searchFirstname = txtFirstname.getText().trim();
            String searchMiddlename = txtMiddlename.getText().trim();
            CommonMethod.clearTable(tbPatientList);
            db.searchPatientFirstnameAndLastnameAndMiddlename(searchFirstname, searchlastname, searchMiddlename);
            while (db.rs.next()) {
                model.insertRow(row++, new Object[]{row, CommonMethod.convertPatientIDFromNumberToString(db.rs.getString("patient_id")), db.rs.getString("lastname"), db.rs.getString("firstname") + " " + db.rs.getString("extension"), db.rs.getString("middlename"), db.rs.getString("gender"), db.rs.getString("birth_date"), db.rs.getString("age"), db.rs.getString("cellphone_no"), db.rs.getString("address")});
            }
            if (row == 0) {
                model.insertRow(row++, new Object[]{"", "", "", "", "", "", "", "", "", "<html><b color='red'>NO RESULTS FOUND...</b></html>"});
            }

        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }//GEN-LAST:event_txtMiddlenameKeyTyped

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        dlgUserAccount account = new dlgUserAccount(this, true);
        SwingUtils.fadeIn(account);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        //dlgEmployeesList employee = new dlgEmployeesList(this,true);
        //SwingUtils.fadeIn(employee);
        employee();
    }//GEN-LAST:event_jMenuItem11ActionPerformed
    private void employee() {
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlAdminEmployees);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        lblMainPanelTitle.setText("   EMPLOYEES LIST");
        showLoading(GlobalVariables.FORM_EMPLOYEES, "Refreshing Employees Records....");
    }
    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel20MouseClicked

    private void jLabel20MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel20MouseEntered

    private void txtPatiendID1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatiendID1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatiendID1KeyReleased

    private void jLabel26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel26MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel26MouseClicked

    private void txtLastname1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastname1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastname1KeyTyped

    private void txtFirstname1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstname1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstname1KeyTyped

    private void txtMiddlename1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMiddlename1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMiddlename1KeyTyped

    private void btnNewEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEmployeeActionPerformed
        dlgEmployeesAdd add = new dlgEmployeesAdd(this, true);
        SwingUtils.fadeIn(add);

    }//GEN-LAST:event_btnNewEmployeeActionPerformed

    private void btnEditInfoEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditInfoEmployeeActionPerformed
        int rowSelected = tbEmployee.getSelectedRow();
        if (rowSelected == -1) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No row selected. Please select an employee name from the table!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String employeeID = tbEmployee.getValueAt(rowSelected, 0).toString();
        if (!employeeID.equals("")) {
            dlgEmployeesUpdate update = new dlgEmployeesUpdate(this, true, employeeID);
            SwingUtils.fadeIn(update);
        }
    }//GEN-LAST:event_btnEditInfoEmployeeActionPerformed

    private void btnGenerateEmployeeInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateEmployeeInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGenerateEmployeeInfoActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        dlgSystemInformation system = new dlgSystemInformation(this, true);
        SwingUtils.fadeIn(system);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void btnAddCheckUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCheckUpActionPerformed
        int rowSelected = tbPatientList.getSelectedRow();
        if (rowSelected == -1) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No row selected. Please select a patient name from the table!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String patientID = tbPatientList.getValueAt(rowSelected, 1).toString();
        String patientName = tbPatientList.getValueAt(rowSelected, 2).toString() + ", " + tbPatientList.getValueAt(rowSelected, 3).toString() + " " + tbPatientList.getValueAt(rowSelected, 4).toString();;
        if (!patientID.equals("")) {
            dlgCheckUp check = new dlgCheckUp(this, true, patientID, patientName);
            SwingUtils.fadeIn(check);
        }
    }//GEN-LAST:event_btnAddCheckUpActionPerformed

    private void btnNewEmployee1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEmployee1ActionPerformed
        dlgLaboratoriesAdd add = new dlgLaboratoriesAdd(this, true);
        SwingUtils.fadeIn(add);
    }//GEN-LAST:event_btnNewEmployee1ActionPerformed

    private void btnEditInfoEmployee1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditInfoEmployee1ActionPerformed
        int rowSelected = tbLaboratories.getSelectedRow();
        if (rowSelected == -1) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No row selected. Please select LABORATORY name from the table!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String labID = tbLaboratories.getValueAt(rowSelected, 0).toString();
        String labCat = tbLaboratories.getValueAt(rowSelected, 1).toString();
        String labName = tbLaboratories.getValueAt(rowSelected, 2).toString();
        String labAmount = tbLaboratories.getValueAt(rowSelected, 3).toString();
        String labStatus = tbLaboratories.getValueAt(rowSelected, 4).toString();
        if (!labID.equals("")) {
            dlgLaboratoriesUpdate update = new dlgLaboratoriesUpdate(this, true, labID, labCat, labName, labAmount, labStatus);
            SwingUtils.fadeIn(update);
        }
    }//GEN-LAST:event_btnEditInfoEmployee1ActionPerformed

    private void btnGenerateEmployeeInfo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateEmployeeInfo1ActionPerformed

    }//GEN-LAST:event_btnGenerateEmployeeInfo1ActionPerformed

    private void btnNewEmployee2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEmployee2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNewEmployee2ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        dlgFees fees = new dlgFees(this, true);
        SwingUtils.fadeIn(fees);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jrbMetalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMetalActionPerformed
        try {

            // setTheme(String themeName, String licenseKey, String logoString)
            //com.jtattoo.plaf.acryl.AcrylLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
            //Update the component tree - associate the look and feel with the given frame.
            SwingUtilities.updateComponentTreeUI(this);
            //lblMainPanelTitle.setBackground(new Color(68, 135, 98));
            //lblImage.setBackground(new Color(68, 135, 98));
            //lblSubMenuTitle.setBackground(new Color(68, 135, 98));
            //lblMainMenuTitle.setBackground(new Color(68, 135, 98));
            // setTheme(String themeName, String licenseKey, String logoString)
            //com.jtattoo.plaf.acryl.AcrylLookAndFeel.setTheme("", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // change title color

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbMetalActionPerformed

    private void jrbMotiffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMotiffActionPerformed
        try {

            // setTheme(String themeName, String licenseKey, String logoString)
            //com.jtattoo.plaf.acryl.AcrylLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");
            //Update the component tree - associate the look and feel with the given frame.
            SwingUtilities.updateComponentTreeUI(this);
            //lblMainPanelTitle.setBackground(new Color(68, 135, 98));
            //lblImage.setBackground(new Color(68, 135, 98));
            //lblSubMenuTitle.setBackground(new Color(68, 135, 98));
            //lblMainMenuTitle.setBackground(new Color(68, 135, 98));
            // setTheme(String themeName, String licenseKey, String logoString)
            //com.jtattoo.plaf.acryl.AcrylLookAndFeel.setTheme("", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // change title color

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbMotiffActionPerformed

    private void jrbSystemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbSystemActionPerformed
        try {

            // setTheme(String themeName, String licenseKey, String logoString)
            //com.jtattoo.plaf.acryl.AcrylLookAndFeel.setTheme("Green", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // select the Look and Feel
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            //Update the component tree - associate the look and feel with the given frame.
            SwingUtilities.updateComponentTreeUI(this);
            //lblMainPanelTitle.setBackground(new Color(68, 135, 98));
            //lblImage.setBackground(new Color(68, 135, 98));
            //lblSubMenuTitle.setBackground(new Color(68, 135, 98));
            //lblMainMenuTitle.setBackground(new Color(68, 135, 98));
            // setTheme(String themeName, String licenseKey, String logoString)
            //com.jtattoo.plaf.acryl.AcrylLookAndFeel.setTheme("", "INSERT YOUR LICENSE KEY HERE", "Core Diagnostic");
            // change title color

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jrbSystemActionPerformed

    private void txtPatiendID2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatiendID2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatiendID2KeyReleased

    private void btnNewPatient1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewPatient1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNewPatient1ActionPerformed

    private void btnEditInfo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditInfo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditInfo1ActionPerformed

    private void btnCheckUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckUpActionPerformed
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlPatientOnCheckUp);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        lblMainPanelTitle.setText("  ON-CHECKUP PATIENT LIST");
        showLoading(GlobalVariables.FORM_ONCHECKUP_PATIENT_CASHIER, "Refreshing Patient Records....");
    }//GEN-LAST:event_btnCheckUpActionPerformed

    private void txtPatiendID3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatiendID3KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatiendID3KeyReleased

    private void txtLastname3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastname3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastname3KeyTyped

    private void txtFirstname3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstname3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstname3KeyTyped

    private void txtMiddlename3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMiddlename3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMiddlename3KeyTyped

    private void btnViewPatientInfo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewPatientInfo1ActionPerformed

    private void btnCheckUpDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckUpDoneActionPerformed
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlPatientDoneCheckUp);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        lblMainPanelTitle.setText("  DONE-CHECKUP PATIENT LIST");
        showLoading(GlobalVariables.FORM_DONECHECKUP_PATIENT_CASHIER, "Refreshing Patient Records....");
    }//GEN-LAST:event_btnCheckUpDoneActionPerformed

    private void btnAddCheckUp2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCheckUp2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddCheckUp2ActionPerformed

    private void btnViewPatientInfo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewPatientInfo2ActionPerformed

    private void btnNewPatient2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewPatient2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNewPatient2ActionPerformed

    private void btnEditInfo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditInfo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditInfo2ActionPerformed

    private void txtPatiendIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatiendIDKeyTyped

    }//GEN-LAST:event_txtPatiendIDKeyTyped

    private void txtUsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsernameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            SystemLogin();
        } //else if (evt.getKeyCode() == KeyEvent.VK_CAPS_LOCK) {
        CommonGUISettingsMethod.CapsLock(lblCapsLock, new javax.swing.ImageIcon(getClass().getResource("/images/warning.png")));
    }//GEN-LAST:event_txtUsernameKeyPressed

    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            SystemLogin();
        } //else if (evt.getKeyCode() == KeyEvent.VK_CAPS_LOCK) {
        CommonGUISettingsMethod.CapsLock(lblCapsLock, new javax.swing.ImageIcon(getClass().getResource("/images/warning.png")));
    }//GEN-LAST:event_txtPasswordKeyPressed

    private void txtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusGained
        CommonGUISettingsMethod.CapsLock(lblCapsLock, new javax.swing.ImageIcon(getClass().getResource("/images/warning.png")));
    }//GEN-LAST:event_txtPasswordFocusGained

    private void txtUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsernameFocusGained
        CommonGUISettingsMethod.CapsLock(lblCapsLock, new javax.swing.ImageIcon(getClass().getResource("/images/warning.png")));
    }//GEN-LAST:event_txtUsernameFocusGained
    private void MedTechOnCheckupPatient() {
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlMedTechOnCheckup);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        lblMainPanelTitle.setText(" ON-CHECKUP PATIENT");
        showLoading(GlobalVariables.FORM_ONCHECKUP_MEDTECH, "Refreshing Laboratory Records....");
    }
    private void btnMedTechOnCheckupPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedTechOnCheckupPatientActionPerformed
        MedTechOnCheckupPatient();
    }//GEN-LAST:event_btnMedTechOnCheckupPatientActionPerformed

    private void btnPatientAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientAdminActionPerformed
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlAdminPatient);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        lblMainPanelTitle.setText(" PATIENT RECORDS");
        showLoading(GlobalVariables.FORM_PATIENTLIST_ADMIN, "Refreshing Patient Records....");
    }//GEN-LAST:event_btnPatientAdminActionPerformed

    private void btnEmployeeAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmployeeAdminActionPerformed
        pnlSubMenuTitle.setVisible(false);
        pnlSubMenu.setVisible(false);
        employee();
    }//GEN-LAST:event_btnEmployeeAdminActionPerformed

    private void btnPatient4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatient4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPatient4ActionPerformed

    private void jLabel28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel28MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel28MouseClicked

    private void jLabel28MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel28MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel28MouseEntered

    private void txtPatiendID1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatiendID1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatiendID1KeyTyped

    private void jLabel32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel32MouseClicked

    private void btnViewPatientInfo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfo3ActionPerformed
        int rowSelected = tbMedTechOnCheckUp.getSelectedRow();
        if (rowSelected == -1) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No row selected. Please select LABORATORY name from the table!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String checkupLaboratoryCode = tbMedTechOnCheckUp.getValueAt(rowSelected, 5).toString();
        String labCategory = tbMedTechOnCheckUp.getValueAt(rowSelected, 6).toString();
        String labName = tbMedTechOnCheckUp.getValueAt(rowSelected, 7).toString();
        String patientNo = tbMedTechOnCheckUp.getValueAt(rowSelected, 1).toString();
        String checkupDate = tbMedTechOnCheckUp.getValueAt(rowSelected, 8).toString();
        if (labName.equals(GlobalVariables.LAB_PREGNANCY_TEST)) {
            dlgPregnancyTest test = new dlgPregnancyTest(this, true, labCategory, labName, patientNo, checkupDate, checkupLaboratoryCode);
            SwingUtils.fadeIn(test);
        } else {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No forms available yet!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnViewPatientInfo3ActionPerformed

    private void btnViewPatientInfo5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfo5ActionPerformed
        MedTechOnCheckupPatient();
    }//GEN-LAST:event_btnViewPatientInfo5ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlAdminLaboratories);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        lblMainPanelTitle.setText("  LABORATORY LIST");
        showLoading(GlobalVariables.FORM_LABORATORY, "Refreshing Laboratory Lists....");
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void btnViewPatientInfo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfo4ActionPerformed
        int rowSelected = tbMedTechDoneCheckup.getSelectedRow();
        if (rowSelected == -1) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No row selected. Please select LABORATORY name from the table!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        dlgConfirmPassword confirm = new dlgConfirmPassword(this, true, 0, rowSelected);
        SwingUtils.fadeIn(confirm);
        /*
        
         */
    }//GEN-LAST:event_btnViewPatientInfo4ActionPerformed

    private void jLabel38MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel38MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel38MouseClicked

    private void txtMiddlename2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMiddlename2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMiddlename2KeyTyped

    private void txtFirstname2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstname2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstname2KeyTyped

    private void txtLastname2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastname2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastname2KeyTyped

    private void txtPatiendID2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatiendID2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatiendID2KeyTyped

    private void jLabel34MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel34MouseEntered

    private void jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel34MouseClicked
    private void MedTechDoneCheckupPatient() {
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlMedTechDoneCheckup);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        lblMainPanelTitle.setText(" FINISHED-CHECKUP PATIENT");
        showLoading(GlobalVariables.FORM_DONECHECKUP_MEDTECH, "Refreshing Laboratory Records....");
    }
    private void btnMedTechDoneCheckupPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedTechDoneCheckupPatientActionPerformed
        MedTechDoneCheckupPatient();
    }//GEN-LAST:event_btnMedTechDoneCheckupPatientActionPerformed

    private void btnViewPatientInfo6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfo6ActionPerformed
        int rowSelected = tbMedTechDoneCheckup.getSelectedRow();
        if (rowSelected == -1) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No row selected. Please select LABORATORY name from the table!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        dlgConfirmPassword confirm = new dlgConfirmPassword(this, true, 1, rowSelected);
        SwingUtils.fadeIn(confirm);
    }//GEN-LAST:event_btnViewPatientInfo6ActionPerformed

    private void btnViewPatientInfo7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfo7ActionPerformed
        showLoading(GlobalVariables.FORM_DONECHECKUP_MEDTECH, "Refreshing Laboratory Records....");
    }//GEN-LAST:event_btnViewPatientInfo7ActionPerformed

    private void btnCashierReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCashierReportsActionPerformed
        pnlSubMenu.removeAll();
        pnlSubMenu.repaint();
        pnlSubMenu.revalidate();
        pnlSubMenu.add(pnlSubMenuReportsCashier);
        pnlSubMenu.setPreferredSize(new Dimension(100, 120));
        pnlSubMenu.repaint();
        pnlSubMenu.revalidate();
        lblSubMenuTitle.setText("Reports Menu");
        pnlSubMenuTitle.setVisible(true);
        pnlSubMenu.setVisible(true);
    }//GEN-LAST:event_btnCashierReportsActionPerformed

    private void btnSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesActionPerformed
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlCashierReportsSales);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        CommonMethod.getLaboratoryList(cmbLaboratoryListCashier);
        CommonMethod.getLaboratoryList(cmbLaboratoryListCashierByMonth);
        CommonMethod.getLaboratoryList(cmbLaboratoryListCashierByYear);
        CommonMethod.getLaboratoryList(cmbLaboratoryListCashierByDaily);
        lblMainPanelTitle.setText("  SALES REPORT");

        //showLoading(GlobalVariables.FORM_PATIENT, "Refreshing Patient Records....");
    }//GEN-LAST:event_btnSalesActionPerformed

    private void btnCheckUp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckUp1ActionPerformed
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlCashierReportsDiscount);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        CommonMethod.getLaboratoryList(cmbLaboratoryListCashier);
        lblMainPanelTitle.setText("  DISCOUNT REPORT");

    }//GEN-LAST:event_btnCheckUp1ActionPerformed

    private void btnGenerateSalesReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateSalesReportActionPerformed
        showLoading(GlobalVariables.FORM_GENERATE_SALESREPORT_CASHIER, "Generating Sales Report...");
    }//GEN-LAST:event_btnGenerateSalesReportActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Date startDate = dcStartDate.getDate();
        Date endDate = dcEndDate.getDate();
        if (startDate == null) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No starting date found.\n Please enter a correct date!", "ERROR", JOptionPane.ERROR_MESSAGE);
            dcStartDate.requestFocus();
            return;
        }
        if (startDate.after(new java.util.Date())) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Invalid starting date found. Please enter a correct date!", "ERROR", JOptionPane.ERROR_MESSAGE);
            dcStartDate.requestFocus();
            return;
        }
        if (endDate == null) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No END date found.\n Please enter a correct date!", "ERROR", JOptionPane.ERROR_MESSAGE);
            dcEndDate.requestFocus();
            return;
        }
        if (endDate.after(new java.util.Date())) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Invalid END date found. Please enter a correct date!", "ERROR", JOptionPane.ERROR_MESSAGE);
            dcEndDate.requestFocus();
            return;
        }
        if (startDate.after(endDate)) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Invalid END date range found. Please correct range of date!", "ERROR", JOptionPane.ERROR_MESSAGE);
            dcStartDate.requestFocus();
            return;
        }
        showLoading(GlobalVariables.FORM_SALESREPORT_CASHIER, "Refreshing Sales Report By Date...");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnGenerateDiscountReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateDiscountReportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGenerateDiscountReportActionPerformed
    private void SalesReportByDateTableModel() {

        tbSalesReportCashier = new javax.swing.JTable();

        tbSalesReportCashier.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "NO.", "PATIENT NO.", "LASTNAME", "FIRSTNAME", "MIDDLENAME", "CHECKUP DATE", "PARTICULARS", "AMOUNT"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        tbSalesReportCashier.setRowHeight(25);

        tbSalesReportCashier.getTableHeader().setReorderingAllowed(false);

        jScrollPane9.setViewportView(tbSalesReportCashier);

        if (tbSalesReportCashier.getColumnModel().getColumnCount() > 0) {
            tbSalesReportCashier.getColumnModel().getColumn(0).setMinWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(0).setMaxWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(1).setMinWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(1).setMaxWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(2).setMinWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(2).setMaxWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(3).setMinWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(3).setPreferredWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(3).setMaxWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(4).setMinWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(4).setPreferredWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(4).setMaxWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(5).setMinWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(5).setPreferredWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(5).setMaxWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(7).setMinWidth(90);
            tbSalesReportCashier.getColumnModel().getColumn(7).setPreferredWidth(90);
            tbSalesReportCashier.getColumnModel().getColumn(7).setMaxWidth(90);
        }

    }

    private void SalesReportByMonthTable() {
        tbSalesReportCashier = new javax.swing.JTable();

        tbSalesReportCashier.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "NO.", "MONTH", "PARTICULARS", "AMOUNT"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        tbSalesReportCashier.setRowHeight(25);

        tbSalesReportCashier.getTableHeader().setReorderingAllowed(false);

        jScrollPane9.setViewportView(tbSalesReportCashier);

        if (tbSalesReportCashier.getColumnModel().getColumnCount() > 0) {
            tbSalesReportCashier.getColumnModel().getColumn(0).setMinWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(0).setMaxWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(1).setMinWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(1).setMaxWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(3).setMinWidth(90);
            tbSalesReportCashier.getColumnModel().getColumn(3).setPreferredWidth(90);
            tbSalesReportCashier.getColumnModel().getColumn(3).setMaxWidth(90);
        }
    }

    private void SalesReportByYearTable() {
        tbSalesReportCashier = new javax.swing.JTable();

        tbSalesReportCashier.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "NO.", "YEAR", "PARTICULARS", "AMOUNT"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        tbSalesReportCashier.setRowHeight(25);

        tbSalesReportCashier.getTableHeader().setReorderingAllowed(false);

        jScrollPane9.setViewportView(tbSalesReportCashier);

        if (tbSalesReportCashier.getColumnModel().getColumnCount() > 0) {
            tbSalesReportCashier.getColumnModel().getColumn(0).setMinWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(0).setMaxWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(1).setMinWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(1).setMaxWidth(100);
            tbSalesReportCashier.getColumnModel().getColumn(3).setMinWidth(90);
            tbSalesReportCashier.getColumnModel().getColumn(3).setPreferredWidth(90);
            tbSalesReportCashier.getColumnModel().getColumn(3).setMaxWidth(90);
        }
    }

    private void SalesReportByDailyTable() {
        tbSalesReportCashier = new javax.swing.JTable();

        tbSalesReportCashier.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "NO.", "PARTICULARS", "AMOUNT"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        tbSalesReportCashier.setRowHeight(25);

        tbSalesReportCashier.getTableHeader().setReorderingAllowed(false);

        jScrollPane9.setViewportView(tbSalesReportCashier);

        if (tbSalesReportCashier.getColumnModel().getColumnCount() > 0) {
            tbSalesReportCashier.getColumnModel().getColumn(0).setMinWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(0).setMaxWidth(40);
            tbSalesReportCashier.getColumnModel().getColumn(2).setMinWidth(90);
            tbSalesReportCashier.getColumnModel().getColumn(2).setPreferredWidth(90);
            tbSalesReportCashier.getColumnModel().getColumn(2).setMaxWidth(90);
        }

    }
    private void btnSalesByYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesByYearActionPerformed
        int startYear = ycStartYear.getYear();
        int endYear = ycEndYear.getYear();
        if (startYear > CommonMethod.getServerYear()) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Invalid year found. Please select correct year!", "ERROR", JOptionPane.ERROR_MESSAGE);
            ycStartYear.requestFocus();
            return;
        }
        if (endYear > CommonMethod.getServerYear()) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Invalid year found. Please select correct year!", "ERROR", JOptionPane.ERROR_MESSAGE);
            ycEndYear.requestFocus();
            return;
        }
        if (startYear > endYear) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Invalid year found. Please select correct year!", "ERROR", JOptionPane.ERROR_MESSAGE);
            ycStartYear.requestFocus();
            return;
        }
        showLoading(GlobalVariables.FORM_YEARLY_SALESREPORT_CASHIER, "Refreshing Sales Report By Yearly...");
    }//GEN-LAST:event_btnSalesByYearActionPerformed

    private void btnMonthlySalesByMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMonthlySalesByMonthActionPerformed
        int startMonth = mcStartMonth.getMonth() + 1;
        int endMonth = mcEndMonth.getMonth() + 1;
        if (startMonth > endMonth) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Invalid month range found. Please select correct month range!", "ERROR", JOptionPane.ERROR_MESSAGE);
            mcStartMonth.requestFocus();
            return;
        }
        showLoading(GlobalVariables.FORM_MONTHLY_SALESREPORT_CASHIER, "Refreshing Sales Report By Monthly...");
    }//GEN-LAST:event_btnMonthlySalesByMonthActionPerformed

    private void cmbReportBySalesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbReportBySalesItemStateChanged
        switch (cmbReportBySales.getSelectedIndex()) {
            case 0:
                pnlCenterSalesReport.removeAll();
                pnlCenterSalesReport.repaint();
                pnlCenterSalesReport.revalidate();
                pnlCenterSalesReport.add(pnlByDaily);
                pnlCenterSalesReport.repaint();
                SalesReportByDailyTable();
                tbSalesReportCashier.repaint();
                tbSalesReportCashier.revalidate();
                break;
            case 1:
                pnlCenterSalesReport.removeAll();
                pnlCenterSalesReport.repaint();
                pnlCenterSalesReport.revalidate();
                pnlCenterSalesReport.add(pnlByMonth);
                pnlCenterSalesReport.repaint();
                SalesReportByMonthTable();
                tbSalesReportCashier.repaint();
                tbSalesReportCashier.revalidate();
                break;
            case 2:
                pnlCenterSalesReport.removeAll();
                pnlCenterSalesReport.repaint();
                pnlCenterSalesReport.revalidate();
                pnlCenterSalesReport.add(pnlByYear);
                pnlCenterSalesReport.repaint();
                SalesReportByYearTable();
                tbSalesReportCashier.repaint();
                tbSalesReportCashier.revalidate();
                break;
            default:
                pnlCenterSalesReport.removeAll();
                pnlCenterSalesReport.repaint();
                pnlCenterSalesReport.revalidate();
                pnlCenterSalesReport.add(pnlByDate);
                pnlCenterSalesReport.repaint();
                SalesReportByDateTableModel();
                tbSalesReportCashier.repaint();
                tbSalesReportCashier.revalidate();
                break;
        }
        lblTotalAmountSales.setText("0.00");
        btnGenerateSalesReport.setEnabled(false);
        btnGenerateSalesChart.setEnabled(false);

    }//GEN-LAST:event_cmbReportBySalesItemStateChanged

    private void btnMonthlySalesByDailyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMonthlySalesByDailyActionPerformed
        Date selectedDate = dcDateDaily.getDate();
        if (selectedDate == null) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No date found. Please select a date!", "ERROR", JOptionPane.ERROR_MESSAGE);
            dcDateDaily.requestFocus();
            return;
        }
        if (selectedDate.after(new java.util.Date())) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Invalid date found. Please enter correct date!", "ERROR", JOptionPane.ERROR_MESSAGE);
            dcStartDate.requestFocus();
            return;
        }
        showLoading(GlobalVariables.FORM_DAILY_SALESREPORT_CASHIER, "Refreshing Daily Sales Report...");
    }//GEN-LAST:event_btnMonthlySalesByDailyActionPerformed

    private void btnLaboratoriesAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaboratoriesAdminActionPerformed
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlAdminLaboratories);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        lblMainPanelTitle.setText("  LABORATORY LIST");
        showLoading(GlobalVariables.FORM_LABORATORY, "Refreshing Laboratory Lists....");
    }//GEN-LAST:event_btnLaboratoriesAdminActionPerformed
    private void viewListOnCheckupPatientPhysician() {
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlPhysicianOnCheckup);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        lblMainPanelTitle.setText(" ON-CHECKUP PATIENT");
        showLoading(GlobalVariables.FORM_ONCHECKUP_PHYSICIAN, "Refreshing Patient Records....");
    }
    private void btnPhysicianOnCheckupPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPhysicianOnCheckupPatientActionPerformed
        viewListOnCheckupPatientPhysician();
    }//GEN-LAST:event_btnPhysicianOnCheckupPatientActionPerformed
    private void PhysicianDoneCheckupPatient() {
        pnlMain2CenterFinal.removeAll();
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        pnlMain2CenterFinal.add(pnlPhysicianDoneCheckup);
        pnlMain2CenterFinal.repaint();
        pnlMain2CenterFinal.revalidate();
        lblMainPanelTitle.setText(" FINISHED-CHECKUP PATIENT");
        showLoading(GlobalVariables.FORM_DONECHECKUP_PHYSICIAN, "Refreshing Patient Records....");
    }
    private void btnPhysicianDoneCheckupPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPhysicianDoneCheckupPatientActionPerformed
        PhysicianDoneCheckupPatient();
    }//GEN-LAST:event_btnPhysicianDoneCheckupPatientActionPerformed

    private void btnPhysicianNotificationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPhysicianNotificationsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPhysicianNotificationsActionPerformed

    private void jLabel51MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel51MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel51MouseClicked

    private void jLabel51MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel51MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel51MouseEntered

    private void txtPatiendID3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatiendID3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatiendID3KeyTyped

    private void jLabel55MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel55MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel55MouseClicked

    private void btnNewPatient3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewPatient3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNewPatient3ActionPerformed

    private void btnEditInfo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditInfo3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditInfo3ActionPerformed

    private void btnAddCheckUp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCheckUp1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddCheckUp1ActionPerformed

    private void txtConfirmPasswordResetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtConfirmPasswordResetFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConfirmPasswordResetFocusGained

    private void txtConfirmPasswordResetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmPasswordResetKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConfirmPasswordResetKeyPressed

    private void btnClear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear1ActionPerformed
        JOptionPane.showMessageDialog(this, "The System will Exit!", "EXIT", JOptionPane.INFORMATION_MESSAGE);
        System.exit(0);
    }//GEN-LAST:event_btnClear1ActionPerformed

    private void btnLogin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogin1ActionPerformed
        String password = txtPasswordReset.getText().trim();
        String confirmpaswd = txtConfirmPasswordReset.getText().trim();
        if (password.equals("")) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No password found. Please enter a password!", "ERROR", JOptionPane.ERROR_MESSAGE);
            txtPasswordReset.requestFocus();
            return;
        }
        if (password.length() < 6) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Invalid Password. Please enter a password >= 6 charaters!", "ERROR", JOptionPane.ERROR_MESSAGE);
            txtPasswordReset.requestFocus();
            return;
        }
        if (confirmpaswd.equals("")) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No confirmation password found. Please enter a confirmation password!", "ERROR", JOptionPane.ERROR_MESSAGE);
            txtConfirmPasswordReset.requestFocus();
            return;
        }
        if (!password.equals(confirmpaswd)) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Password do not match. Please check your password!", "ERROR", JOptionPane.ERROR_MESSAGE);
            txtPasswordReset.requestFocus();
            return;
        }
        DBQueries db = new DBQueries();
        try {
            db.ConnectToDatabase();
            int success = db.updateNewPassword(password, frmMain.USERNAME);
            if (success > 1) {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(this, "Congratulations! Password has been successfuly changed.", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                pnlCenter.removeAll();
                pnlCenter.repaint();
                pnlCenter.revalidate();
                pnlCenter.add(pnlMain);
                pnlCenter.repaint();
                pnlCenter.revalidate();
                pnlMain2CenterFinal.removeAll();
                pnlMain2CenterFinal.repaint();
                pnlMain2CenterFinal.revalidate();
                pnlMain2CenterFinal.add(pnlWelcome);
                pnlMain2CenterFinal.repaint();
                pnlMain2CenterFinal.revalidate();
                //show menubar
                mnuBar.setVisible(true);
                //hide submenu
                pnlSubMenuTitle.setVisible(false);
                pnlSubMenu.setVisible(false);
                LoginYes();
                dlgLoading.lblOutput.setText("Loading User's Information...");
                lblPosition.setText(SYSTEMROLE);
                CommonMethod.SaveLog("" + USERNAME, "Login to the System");
                //check the roleaname
                showMainMenu(SYSTEMROLE);
                //showImage
                showEmployeeImage(EMPLOYEEID);
            } else {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(this, "Changing Failed! Please contact the System Administrator for Assisstance.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (db.con != null) {
                db.closeConnection();
            }

        }
    }//GEN-LAST:event_btnLogin1ActionPerformed

    private void ckbShowPassword1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckbShowPassword1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbShowPassword1ItemStateChanged

    private void jLabel60MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel60MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel60MouseClicked

    private void jLabel60MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel60MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel60MouseEntered

    private void txtPatiendID4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatiendID4KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatiendID4KeyTyped

    private void txtLastname4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastname4KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastname4KeyTyped

    private void txtFirstname4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstname4KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstname4KeyTyped

    private void txtMiddlename4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMiddlename4KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMiddlename4KeyTyped

    private void jLabel64MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel64MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel64MouseClicked

    private void btnAddResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddResultsActionPerformed
        int rowSelected = tbPhysicianOnCheckUp.getSelectedRow();
        if (rowSelected == -1) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No row selected. Please select PATIENT name from the table!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String patientNo = tbPhysicianOnCheckUp.getValueAt(rowSelected, 1).toString();

        if (!patientNo.equals("")) {
            //dlgPatientHistoryPhysician history = new dlgPatientHistoryPhysician(this, true, CommonMethod.TrimPatientID(patientNo));
            dlgPhysicianAddResults result = new dlgPhysicianAddResults(this,true,CommonMethod.TrimPatientID(patientNo));
            SwingUtils.fadeIn(result);
        } else {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No patient selected yet!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
    
    }//GEN-LAST:event_btnAddResultsActionPerformed

    private void btnViewPatientInfo9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfo9ActionPerformed
        viewListOnCheckupPatientPhysician();
    }//GEN-LAST:event_btnViewPatientInfo9ActionPerformed

    private void btnViewPatientInfo10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfo10ActionPerformed
        int rowSelected = tbPhysicianOnCheckUp.getSelectedRow();
        if (rowSelected == -1) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No row selected. Please select PATIENT name from the table!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String patientNo = tbPhysicianOnCheckUp.getValueAt(rowSelected, 1).toString();

        if (!patientNo.equals("")) {
            //dlgPatientHistoryPhysician history = new dlgPatientHistoryPhysician(this, true, CommonMethod.TrimPatientID(patientNo));
            dlgPatientHistoryFinal history = new dlgPatientHistoryFinal(this,true,CommonMethod.TrimPatientID(patientNo));
            SwingUtils.fadeIn(history);
        } else {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "No patient info. selected yet!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnViewPatientInfo10ActionPerformed

    private void jLabel66jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel66jLabel34MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel66jLabel34MouseClicked

    private void jLabel66jLabel34MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel66jLabel34MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel66jLabel34MouseEntered

    private void txtPatiendID5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatiendID5KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatiendID5KeyTyped

    private void txtLastname5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastname5KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastname5KeyTyped

    private void txtFirstname5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstname5KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstname5KeyTyped

    private void txtMiddlename5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMiddlename5KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMiddlename5KeyTyped

    private void jLabel70jLabel38MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel70jLabel38MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel70jLabel38MouseClicked

    private void btnViewPatientInfo11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfo11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewPatientInfo11ActionPerformed

    private void btnViewPatientInfo12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfo12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewPatientInfo12ActionPerformed

    private void btnViewPatientInfo13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfo13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewPatientInfo13ActionPerformed

    private void btnMedTechNotificationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedTechNotificationsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMedTechNotificationsActionPerformed

    private void txtPasswordResetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordResetFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordResetFocusGained

    private void txtPasswordResetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordResetKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordResetKeyPressed

    private void btnGenerateSalesChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateSalesChartActionPerformed
        String reportType = cmbReportBySales.getSelectedItem().toString();
        if(reportType.equals("BY DAILY")){
            Date selectedDate = dcDateDaily.getDate();
            dlgChartReport chart = new dlgChartReport(this, true,selectedDate);
            SwingUtils.fadeIn(chart);
        }else if(reportType.equals("BY MONTHLY")){
            int startMonth = mcStartMonth.getMonth()+1;
            int endMonth = mcEndMonth.getMonth()+1;
            int year = ycYearByMonth.getYear();
            dlgChartReport chart = new dlgChartReport(this, true,startMonth,endMonth,year);
            SwingUtils.fadeIn(chart);
        }else if(reportType.equals("BY YEARLY")){
            int startYear = ycStartYear.getYear();
            int endYear = ycEndYear.getYear();
            dlgChartReport chart = new dlgChartReport(this, true,startYear,endYear);
            SwingUtils.fadeIn(chart);
        }
        
    }//GEN-LAST:event_btnGenerateSalesChartActionPerformed

    private void cmbReportByDiscountItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbReportByDiscountItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbReportByDiscountItemStateChanged

    private void btnMonthlySalesByDailyDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMonthlySalesByDailyDiscountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMonthlySalesByDailyDiscountActionPerformed

    private void btnDiscountByDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiscountByDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDiscountByDateActionPerformed

    private void btnMonthlySalesByMonthDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMonthlySalesByMonthDiscountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMonthlySalesByMonthDiscountActionPerformed

    private void btnSalesByYearDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesByYearDiscountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalesByYearDiscountActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

 /*
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
         */
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new frmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCheckUp;
    private javax.swing.JButton btnAddCheckUp1;
    private javax.swing.JButton btnAddCheckUp2;
    private javax.swing.JButton btnAddResults;
    private javax.swing.JButton btnCashierReports;
    private javax.swing.JButton btnCheckUp;
    private javax.swing.JButton btnCheckUp1;
    private javax.swing.JButton btnCheckUpDone;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClear1;
    private javax.swing.JButton btnDiscountByDate;
    private javax.swing.JButton btnEditInfo;
    private javax.swing.JButton btnEditInfo1;
    private javax.swing.JButton btnEditInfo2;
    private javax.swing.JButton btnEditInfo3;
    private javax.swing.JButton btnEditInfoEmployee;
    private javax.swing.JButton btnEditInfoEmployee1;
    private javax.swing.JButton btnEmployeeAdmin;
    private javax.swing.JButton btnGenerateDiscountReport;
    private javax.swing.JButton btnGenerateEmployeeInfo;
    private javax.swing.JButton btnGenerateEmployeeInfo1;
    private javax.swing.JButton btnGenerateSalesChart;
    private javax.swing.JButton btnGenerateSalesReport;
    private javax.swing.JButton btnLaboratoriesAdmin;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogin1;
    private javax.swing.JButton btnMedTechDoneCheckupPatient;
    private javax.swing.JButton btnMedTechNotifications;
    private javax.swing.JButton btnMedTechOnCheckupPatient;
    private javax.swing.JButton btnMonthlySalesByDaily;
    private javax.swing.JButton btnMonthlySalesByDailyDiscount;
    private javax.swing.JButton btnMonthlySalesByMonth;
    private javax.swing.JButton btnMonthlySalesByMonthDiscount;
    private javax.swing.JButton btnNewEmployee;
    private javax.swing.JButton btnNewEmployee1;
    private javax.swing.JButton btnNewEmployee2;
    private javax.swing.JButton btnNewPatient;
    private javax.swing.JButton btnNewPatient1;
    private javax.swing.JButton btnNewPatient2;
    private javax.swing.JButton btnNewPatient3;
    private javax.swing.JButton btnPatient4;
    private javax.swing.JButton btnPatientAdmin;
    private javax.swing.JButton btnPatientCashier;
    private javax.swing.JButton btnPhysicianDoneCheckupPatient;
    private javax.swing.JButton btnPhysicianNotifications;
    private javax.swing.JButton btnPhysicianOnCheckupPatient;
    private javax.swing.JButton btnReportsAdmin;
    private javax.swing.JButton btnSales;
    private javax.swing.JButton btnSalesByYear;
    private javax.swing.JButton btnSalesByYearDiscount;
    private javax.swing.JButton btnUnlock;
    private javax.swing.JButton btnViewPatient;
    private javax.swing.JButton btnViewPatientInfo1;
    private javax.swing.JButton btnViewPatientInfo10;
    private javax.swing.JButton btnViewPatientInfo11;
    private javax.swing.JButton btnViewPatientInfo12;
    private javax.swing.JButton btnViewPatientInfo13;
    private javax.swing.JButton btnViewPatientInfo2;
    private javax.swing.JButton btnViewPatientInfo3;
    private javax.swing.JButton btnViewPatientInfo4;
    private javax.swing.JButton btnViewPatientInfo5;
    private javax.swing.JButton btnViewPatientInfo6;
    private javax.swing.JButton btnViewPatientInfo7;
    private javax.swing.JButton btnViewPatientInfo9;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox ckbShowPassword;
    private javax.swing.JCheckBox ckbShowPassword1;
    private javax.swing.JComboBox<String> cmbLaboratoryListCashier;
    private javax.swing.JComboBox<String> cmbLaboratoryListCashierByDaily;
    private javax.swing.JComboBox<String> cmbLaboratoryListCashierByDailyDiscount;
    private javax.swing.JComboBox<String> cmbLaboratoryListCashierByMonth;
    private javax.swing.JComboBox<String> cmbLaboratoryListCashierByMonthDiscount;
    private javax.swing.JComboBox<String> cmbLaboratoryListCashierByYear;
    private javax.swing.JComboBox<String> cmbLaboratoryListCashierByYearDiscount;
    private javax.swing.JComboBox<String> cmbLaboratoryListCashierDiscount;
    private javax.swing.JComboBox<String> cmbReportByDiscount;
    private javax.swing.JComboBox<String> cmbReportBySales;
    private com.toedter.calendar.JDateChooser dcDateDaily;
    private com.toedter.calendar.JDateChooser dcDateDailyDiscount;
    private com.toedter.calendar.JDateChooser dcEndDate;
    private com.toedter.calendar.JDateChooser dcEndDateDiscount;
    private com.toedter.calendar.JDateChooser dcStartDate;
    private com.toedter.calendar.JDateChooser dcStartDateDiscount;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JMenu jmAdmin;
    private javax.swing.JMenu jmHelp;
    private javax.swing.JMenu jmSettings;
    private javax.swing.JMenu jmSystem;
    private javax.swing.JMenu jmUser;
    private javax.swing.JRadioButtonMenuItem jrbAcryl;
    private javax.swing.JRadioButtonMenuItem jrbAero;
    private javax.swing.JRadioButtonMenuItem jrbAluminum;
    private javax.swing.JRadioButtonMenuItem jrbBernstein;
    private javax.swing.JRadioButtonMenuItem jrbFast;
    private javax.swing.JRadioButtonMenuItem jrbGrafite;
    private javax.swing.JRadioButtonMenuItem jrbHiFi;
    private javax.swing.JRadioButtonMenuItem jrbLuna;
    private javax.swing.JRadioButtonMenuItem jrbMcWin;
    private javax.swing.JRadioButtonMenuItem jrbMetal;
    private javax.swing.JRadioButtonMenuItem jrbMint;
    private javax.swing.JRadioButtonMenuItem jrbMotiff;
    private javax.swing.JRadioButtonMenuItem jrbNoire;
    private javax.swing.JRadioButtonMenuItem jrbSmar;
    private javax.swing.JRadioButtonMenuItem jrbSystem;
    private javax.swing.JRadioButtonMenuItem jrbTexture;
    private javax.swing.JLabel lblCapsLock;
    private javax.swing.JLabel lblCapsLock1;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblError1;
    private javax.swing.JLabel lblMainMenuTitle;
    private javax.swing.JLabel lblMainPanelTitle;
    private javax.swing.JLabel lblPicture;
    private javax.swing.JLabel lblPosition;
    private javax.swing.JLabel lblSubMenuTitle;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblTotalAmountSales;
    private javax.swing.JLabel lblTotalAmountSalesDiscount;
    private com.toedter.calendar.JMonthChooser mcEndMonth;
    private com.toedter.calendar.JMonthChooser mcEndMonthDiscount;
    private com.toedter.calendar.JMonthChooser mcStartMonth;
    private com.toedter.calendar.JMonthChooser mcStartMonthDiscount;
    private javax.swing.JMenuBar mnuBar;
    private javax.swing.JPanel pnlAdminEmployees;
    private javax.swing.JPanel pnlAdminLaboratories;
    private javax.swing.JPanel pnlAdminPatient;
    private javax.swing.JPanel pnlByDaily;
    private javax.swing.JPanel pnlByDaily1;
    private javax.swing.JPanel pnlByDate;
    private javax.swing.JPanel pnlByDate1;
    private javax.swing.JPanel pnlByMonth;
    private javax.swing.JPanel pnlByMonth1;
    private javax.swing.JPanel pnlByYear;
    private javax.swing.JPanel pnlByYear1;
    private javax.swing.JPanel pnlCashierPatient;
    private javax.swing.JPanel pnlCashierReportsDiscount;
    private javax.swing.JPanel pnlCashierReportsSales;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlCenterSalesReport;
    private javax.swing.JPanel pnlCenterSalesReport1;
    private javax.swing.JPanel pnlLock;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JPanel pnlLoginForm;
    private javax.swing.JPanel pnlLoginForm1;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlMain2;
    private javax.swing.JPanel pnlMain2Center;
    private javax.swing.JPanel pnlMain2CenterFinal;
    private javax.swing.JPanel pnlMain2LeftSide;
    private javax.swing.JPanel pnlMainCenter;
    private javax.swing.JPanel pnlMainMenu;
    private javax.swing.JPanel pnlMainMenuAdministrator;
    private javax.swing.JPanel pnlMainMenuAdministratorPanel;
    private javax.swing.JPanel pnlMainMenuButtons;
    private javax.swing.JPanel pnlMainMenuCashier;
    private javax.swing.JPanel pnlMainMenuCashierPanel;
    private javax.swing.JPanel pnlMainMenuMedTech;
    private javax.swing.JPanel pnlMainMenuMedTechPanel;
    private javax.swing.JPanel pnlMainMenuMedTechPanel1;
    private javax.swing.JPanel pnlMainMenuPhlebotomist;
    private javax.swing.JPanel pnlMainMenuPhlebotomistPanel;
    private javax.swing.JPanel pnlMainMenuPhysician;
    private javax.swing.JPanel pnlMainMenuTitle;
    private javax.swing.JPanel pnlMainToolbar;
    private javax.swing.JPanel pnlMedTechDoneCheckup;
    private javax.swing.JPanel pnlMedTechOnCheckup;
    private javax.swing.JPanel pnlPatientDoneCheckUp;
    private javax.swing.JPanel pnlPatientOnCheckUp;
    private javax.swing.JPanel pnlPhysicianDoneCheckup;
    private javax.swing.JPanel pnlPhysicianOnCheckup;
    private javax.swing.JPanel pnlResetPassword;
    private javax.swing.JPanel pnlSearchAdvanced;
    private javax.swing.JPanel pnlSearchAdvanced1;
    private javax.swing.JPanel pnlSearchAdvanced2;
    private javax.swing.JPanel pnlSearchAdvanced3;
    private javax.swing.JPanel pnlSearchAdvanced4;
    private javax.swing.JPanel pnlSearchAdvanced5;
    private javax.swing.JPanel pnlSearchAdvanced6;
    private javax.swing.JPanel pnlSearchByPatientID;
    private javax.swing.JPanel pnlSearchByPatientID1;
    private javax.swing.JPanel pnlSearchByPatientID2;
    private javax.swing.JPanel pnlSearchByPatientID3;
    private javax.swing.JPanel pnlSearchByPatientID4;
    private javax.swing.JPanel pnlSearchByPatientID5;
    private javax.swing.JPanel pnlSearchByPatientID6;
    private javax.swing.JPanel pnlSearchEngine;
    private javax.swing.JPanel pnlSearchEngine1;
    private javax.swing.JPanel pnlSearchEngine2;
    private javax.swing.JPanel pnlSearchEngine3;
    private javax.swing.JPanel pnlSearchEngine4;
    private javax.swing.JPanel pnlSearchEngine5;
    private javax.swing.JPanel pnlSearchEngine6;
    private javax.swing.JPanel pnlStatusBar;
    private javax.swing.JPanel pnlSubMenu;
    private javax.swing.JPanel pnlSubMenuPatientCashier;
    private javax.swing.JPanel pnlSubMenuReportsCashier;
    private javax.swing.JPanel pnlSubMenuTitle;
    private javax.swing.JPanel pnlSubMenuWelcome;
    private javax.swing.JPanel pnlWelcome;
    private javax.swing.JToolBar tbAdministrator;
    private javax.swing.JTable tbEmployee;
    private javax.swing.JTable tbLaboratories;
    private javax.swing.JToolBar tbMedTech;
    public javax.swing.JTable tbMedTechDoneCheckup;
    public javax.swing.JTable tbMedTechOnCheckUp;
    public javax.swing.JTable tbPatientDoneCheckUpList;
    public javax.swing.JTable tbPatientList;
    public javax.swing.JTable tbPatientListAdmin;
    public javax.swing.JTable tbPatientOnCheckUpList;
    public javax.swing.JTable tbPhysicianDoneCheckup;
    public javax.swing.JTable tbPhysicianOnCheckUp;
    public javax.swing.JTable tbSalesReportCashier;
    public javax.swing.JTable tbSalesReportCashierDiscount;
    private javax.swing.JPasswordField txtConfirmPasswordReset;
    private org.jdesktop.swingx.JXSearchField txtFirstname;
    private org.jdesktop.swingx.JXSearchField txtFirstname1;
    private org.jdesktop.swingx.JXSearchField txtFirstname2;
    private org.jdesktop.swingx.JXSearchField txtFirstname3;
    private org.jdesktop.swingx.JXSearchField txtFirstname4;
    private org.jdesktop.swingx.JXSearchField txtFirstname5;
    private org.jdesktop.swingx.JXSearchField txtLastname;
    private org.jdesktop.swingx.JXSearchField txtLastname1;
    private org.jdesktop.swingx.JXSearchField txtLastname2;
    private org.jdesktop.swingx.JXSearchField txtLastname3;
    private org.jdesktop.swingx.JXSearchField txtLastname4;
    private org.jdesktop.swingx.JXSearchField txtLastname5;
    private org.jdesktop.swingx.JXSearchField txtMiddlename;
    private org.jdesktop.swingx.JXSearchField txtMiddlename1;
    private org.jdesktop.swingx.JXSearchField txtMiddlename2;
    private org.jdesktop.swingx.JXSearchField txtMiddlename3;
    private org.jdesktop.swingx.JXSearchField txtMiddlename4;
    private org.jdesktop.swingx.JXSearchField txtMiddlename5;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPasswordReset;
    private org.jdesktop.swingx.JXSearchField txtPatiendID;
    private org.jdesktop.swingx.JXSearchField txtPatiendID1;
    private org.jdesktop.swingx.JXSearchField txtPatiendID2;
    private org.jdesktop.swingx.JXSearchField txtPatiendID3;
    private org.jdesktop.swingx.JXSearchField txtPatiendID4;
    private org.jdesktop.swingx.JXSearchField txtPatiendID5;
    private javax.swing.JTextField txtUsername;
    private com.toedter.calendar.JYearChooser ycEndYear;
    private com.toedter.calendar.JYearChooser ycEndYearDiscount;
    private com.toedter.calendar.JYearChooser ycStartYear;
    private com.toedter.calendar.JYearChooser ycStartYearDiscount;
    private com.toedter.calendar.JYearChooser ycYearByMonth;
    private com.toedter.calendar.JYearChooser ycYearByMonthDiscount;
    // End of variables declaration//GEN-END:variables

    @Override
        public void actionPerformed(ActionEvent e) {
        /*
        pnlCenter.add(pnlLock);
        pnlCenter.repaint();
        mnuBar.setVisible(false);
        pnlStatusBar.setVisible(false);
        pnlCenter.revalidate();
        
        pnlCenter.revalidate();
        pnlCenter.revalidate();
         */
        invalidationTimer.stop();
        Toolkit.getDefaultToolkit().removeAWTEventListener(l);
        dlgLockScreen lock = new dlgLockScreen(this, true);
        SwingUtils.fadeIn(lock);
        System.out.println("timer has stopped");
    }

}
