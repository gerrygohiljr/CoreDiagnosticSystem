/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package corediagnosticsystem;

import classes.CommonMethod;
import classes.DBQueries;
import classes.GlobalVariables;
import classes.SwingUtils;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import javax.swing.AbstractAction;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import laboratories.dlgPregnancyTestUpdate;
import laboratories.dlgPregnancyTestView;

/**
 *
 * @author MIS4
 */
public class dlgConfirmPassword extends javax.swing.JDialog {

    private int attempcounter = 0;
    private int mode = 0, rowSelected = 0;
    private frmMain main;

    /**
     * Creates new form dlgConfirmPassword
     */
    public dlgConfirmPassword(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

    }

    dlgConfirmPassword(frmMain parent, boolean modal, int mode,int rowselected) {
        super(parent, modal);
        initComponents();
        this.main = parent;
        this.mode = mode;
        this.rowSelected = rowselected;
        CommonMethod.setDialogScreenLocation(parent, this);
        escapeKey();
        txtPassword.requestFocus();
    }

    private void escapeKey() {
        getRootPane().getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "dispose");
        getRootPane().getActionMap().put("dispose", new AbstractAction() {
            public void actionPerformed(ActionEvent event) {
                dispose();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnCancel = new javax.swing.JButton();
        btnVerify = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        chkShow = new javax.swing.JCheckBox();
        lblCapsLock = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        pnlHeader = new javax.swing.JPanel();
        pnlLogo = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 3));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("ENTER YOUR PASSWORD:");

        txtPassword.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordFocusGained(evt);
            }
        });
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cancel_icon.png"))); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("CANCEL");
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnVerify.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnVerify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/check_icon.png"))); // NOI18N
        btnVerify.setMnemonic('V');
        btnVerify.setText("VERIFY");
        btnVerify.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVerify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerifyActionPerformed(evt);
            }
        });
        btnVerify.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnVerifyKeyPressed(evt);
            }
        });

        lblError.setForeground(new java.awt.Color(255, 0, 0));

        chkShow.setText("Show Password");
        chkShow.setOpaque(false);
        chkShow.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkShowItemStateChanged(evt);
            }
        });

        lblCapsLock.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(chkShow)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblCapsLock, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(45, 45, 45)
                                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnVerify, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(44, 44, 44)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(chkShow)
                    .addComponent(lblCapsLock, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVerify, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jPanel3.add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        pnlHeader.setBackground(new java.awt.Color(204, 204, 204));
        pnlHeader.setPreferredSize(new java.awt.Dimension(156, 45));

        pnlLogo.setOpaque(false);
        pnlLogo.add(jLabel8);

        jPanel8.setOpaque(false);
        jPanel8.setLayout(new java.awt.GridLayout(3, 0));

        jLabel9.setDisplayedMnemonic('m');
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel9.setText("Core Diagnostic");
        jPanel8.add(jLabel9);

        jLabel10.setDisplayedMnemonic('i');
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel10.setText("& Ugent Care");
        jPanel8.add(jLabel10);

        jLabel11.setDisplayedMnemonic('s');
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel11.setText("Center");
        jPanel8.add(jLabel11);

        pnlLogo.add(jPanel8);

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setText("FOR SECURITY");

        javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addContainerGap(307, Short.MAX_VALUE))
            .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlHeaderLayout.createSequentialGroup()
                    .addGap(295, 295, 295)
                    .addComponent(pnlLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 18, Short.MAX_VALUE)))
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlHeaderLayout.createSequentialGroup()
                    .addComponent(pnlLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 1, Short.MAX_VALUE)))
        );

        jPanel2.add(pnlHeader);

        jPanel3.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel3);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed
    private void verify() {
        String password = txtPassword.getText().trim();
        if (password.equals("")) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Please enter YOUR PASSWORD!", "ERROR", JOptionPane.ERROR_MESSAGE);
            txtPassword.requestFocus();
            return;
        }
        DBQueries db = new DBQueries();
        try {
            db.ConnectToDatabase();
            db.checkLoginAccount(frmMain.USERNAME, password);
            if (db.rs.next()) {
                if (mode == 0) {
                    String checkupLaboratoryCode = main.tbMedTechDoneCheckup.getValueAt(rowSelected, 5).toString();
                    String labCategory = main.tbMedTechDoneCheckup.getValueAt(rowSelected, 6).toString();
                    String labName = main.tbMedTechDoneCheckup.getValueAt(rowSelected, 7).toString();
                    String patientNo = main.tbMedTechDoneCheckup.getValueAt(rowSelected, 1).toString();
                    String checkupDate = main.tbMedTechDoneCheckup.getValueAt(rowSelected, 8).toString();
                    String medTech = frmMain.USERNAME;
                    if (labName.equals(GlobalVariables.LAB_PREGNANCY_TEST)) {
                        this.dispose();
                        dlgPregnancyTestView test = new dlgPregnancyTestView(main,this, true, labCategory, labName, patientNo, checkupDate, checkupLaboratoryCode, medTech);
                        SwingUtils.fadeIn(test);
                    } else {
                        Toolkit.getDefaultToolkit().beep();
                        JOptionPane.showMessageDialog(this, "No forms available yet!", "ERROR", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                } else if (mode == 1) {
                    String checkupLaboratoryCode = main.tbMedTechDoneCheckup.getValueAt(rowSelected, 5).toString();
                    String labCategory = main.tbMedTechDoneCheckup.getValueAt(rowSelected, 6).toString();
                    String labName = main.tbMedTechDoneCheckup.getValueAt(rowSelected, 7).toString();
                    String patientNo = main.tbMedTechDoneCheckup.getValueAt(rowSelected, 1).toString();
                    String checkupDate = main.tbMedTechDoneCheckup.getValueAt(rowSelected, 8).toString();
                    String medTech = frmMain.USERNAME;
                    if (labName.equals(GlobalVariables.LAB_PREGNANCY_TEST)) {
                        this.dispose();
                        dlgPregnancyTestUpdate test = new dlgPregnancyTestUpdate(main,this, true, labCategory, labName, patientNo, checkupDate, checkupLaboratoryCode, medTech);
                        SwingUtils.fadeIn(test);
                    } else {
                        Toolkit.getDefaultToolkit().beep();
                        JOptionPane.showMessageDialog(this, "No forms available yet!", "ERROR", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
            } else {
                //settings.playSound(GlobalVariable.ERROR_SOUND);
                JOptionPane.showMessageDialog(this, "Incorrect username or password. Please try again!!", "ERROR", JOptionPane.ERROR_MESSAGE);
                txtPassword.selectAll();
                txtPassword.requestFocus();
                attempcounter++;
                lblError.setVisible(true);
                lblError.setText("Attempt: " + attempcounter);
                if (attempcounter == 3) {
                    //Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(this, "Incorrect password attemps 3 times already!", "ERROR", JOptionPane.ERROR_MESSAGE);
                    this.dispose();
                }

            }
        } catch (HeadlessException | SQLException e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        } finally {
            db.closeConnection();
        }
    }

    private void verifyForForm9() {

    }
    private void btnVerifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerifyActionPerformed
        verify();
    }//GEN-LAST:event_btnVerifyActionPerformed

    private void btnVerifyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnVerifyKeyPressed
        int code = evt.getKeyCode();
        if (code == 10) {
            verify();
        }
    }//GEN-LAST:event_btnVerifyKeyPressed
    private void CapsLock() {
        if (Toolkit.getDefaultToolkit().getLockingKeyState(com.sun.glass.events.KeyEvent.VK_CAPS_LOCK)) {
            //lblCapsLock.setVisible(true);
            lblCapsLock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/warning.png"))); // NOI18N
            lblCapsLock.setText("Caps Lock is on");
        } else {
            lblCapsLock.setText("");
            lblCapsLock.setIcon(null);
            //lblCapsLock.setVisible(false);
        }
    }
    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
        int code = evt.getKeyCode();
        if (code == 10) {
            verify();
        } else if (code == KeyEvent.VK_ESCAPE) {
            this.dispose();
        }//else if(code==KeyEvent.VK_CAPS_LOCK){
        CapsLock();
        //}
    }//GEN-LAST:event_txtPasswordKeyPressed

    private void chkShowItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkShowItemStateChanged
        if (chkShow.isSelected()) {
            txtPassword.setEchoChar((char) 0);
        } else {
            txtPassword.setEchoChar('*');
        }
    }//GEN-LAST:event_chkShowItemStateChanged

    private void txtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusGained
        CapsLock();
    }//GEN-LAST:event_txtPasswordFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dlgConfirmPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dlgConfirmPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dlgConfirmPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dlgConfirmPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dlgConfirmPassword dialog = new dlgConfirmPassword(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnVerify;
    private javax.swing.JCheckBox chkShow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JLabel lblCapsLock;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JPanel pnlLogo;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables
}
